{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ManageTokens.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useState, useMemo } from 'react';\nimport Column from 'components/Column';\nimport { PaddedColumn, Separator, SearchInput } from './styleds';\nimport Row, { RowBetween, RowFixed } from 'components/Row';\nimport { TYPE, ExternalLinkIcon, TrashIcon, ButtonText, ExternalLink } from 'theme';\nimport { useToken } from 'hooks/Tokens';\nimport styled from 'styled-components';\nimport { useUserAddedTokens, useRemoveUserAddedToken } from 'state/user/hooks';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { getEtherscanLink, isAddress } from 'utils';\nimport { useActiveWeb3React } from 'hooks';\nimport Card from 'components/Card';\nimport ImportRow from './ImportRow';\nimport useTheme from '../../hooks/useTheme';\nimport { CurrencyModalView } from './CurrencySearchModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`;\n_c = Wrapper;\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-radius: 20px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-top: 1px solid ${({\n  theme\n}) => theme.bg3};\n  padding: 20px;\n  text-align: center;\n`;\n_c2 = Footer;\nexport default function ManageTokens({\n  setModalView,\n  setImportToken\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [searchQuery, setSearchQuery] = useState('');\n  const theme = useTheme(); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n  }, []); // if they input an address, use it\n\n  const isAddressSearch = isAddress(searchQuery);\n  const searchToken = useToken(searchQuery); // all tokens for local lisr\n\n  const userAddedTokens = useUserAddedTokens();\n  const removeToken = useRemoveUserAddedToken();\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map(token => {\n        return removeToken(chainId, token.address);\n      });\n    }\n  }, [removeToken, userAddedTokens, chainId]);\n  const tokenList = useMemo(() => {\n    return chainId && userAddedTokens.map(token => /*#__PURE__*/_jsxDEV(RowBetween, {\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: token,\n          size: '20px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n          href: getEtherscanLink(chainId, token.address, 'address'),\n          children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n            ml: '10px',\n            fontWeight: 600,\n            children: token.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(TrashIcon, {\n          onClick: () => removeToken(chainId, token.address)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ExternalLinkIcon, {\n          href: getEtherscanLink(chainId, token.address, 'address')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, token.address, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this));\n  }, [userAddedTokens, chainId, removeToken]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      style: {\n        width: '100%',\n        flex: '1 1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PaddedColumn, {\n        gap: \"14px\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            type: \"text\",\n            id: \"token-search-input\",\n            placeholder: '0x0000',\n            value: searchQuery,\n            autoComplete: \"off\",\n            ref: inputRef,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), searchQuery !== '' && !isAddressSearch && /*#__PURE__*/_jsxDEV(TYPE.error, {\n          error: true,\n          children: \"Enter valid token address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 54\n        }, this), searchToken && /*#__PURE__*/_jsxDEV(Card, {\n          backgroundColor: theme.bg2,\n          padding: \"10px 0\",\n          children: /*#__PURE__*/_jsxDEV(ImportRow, {\n            token: searchToken,\n            showImportView: () => setModalView(CurrencyModalView.importToken),\n            setImportToken: setImportToken,\n            style: {\n              height: 'fit-content'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Separator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaddedColumn, {\n        gap: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.main, {\n            fontWeight: 600,\n            children: [userAddedTokens === null || userAddedTokens === void 0 ? void 0 : userAddedTokens.length, \" Custom \", userAddedTokens.length === 1 ? 'Token' : 'Tokens']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), userAddedTokens.length > 0 && /*#__PURE__*/_jsxDEV(ButtonText, {\n            onClick: handleRemoveAll,\n            children: /*#__PURE__*/_jsxDEV(TYPE.blue, {\n              children: \"Clear all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), tokenList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      children: /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n        children: \"Tip: Custom tokens are stored locally in your browser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ManageTokens, \"nhDS7ND+QW/8APTHQChvCDQQ25A=\", false, function () {\n  return [useActiveWeb3React, useTheme, useToken, useUserAddedTokens, useRemoveUserAddedToken];\n});\n\n_c3 = ManageTokens;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"ManageTokens\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ManageTokens.tsx"],"names":["React","useRef","useCallback","useState","useMemo","Column","PaddedColumn","Separator","SearchInput","Row","RowBetween","RowFixed","TYPE","ExternalLinkIcon","TrashIcon","ButtonText","ExternalLink","useToken","styled","useUserAddedTokens","useRemoveUserAddedToken","CurrencyLogo","getEtherscanLink","isAddress","useActiveWeb3React","Card","ImportRow","useTheme","CurrencyModalView","Wrapper","div","Footer","theme","bg3","ManageTokens","setModalView","setImportToken","chainId","searchQuery","setSearchQuery","inputRef","handleInput","event","input","target","value","checksummedInput","isAddressSearch","searchToken","userAddedTokens","removeToken","handleRemoveAll","map","token","address","tokenList","symbol","width","flex","bg2","importToken","height","length"],"mappings":"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","sourcesContent":["import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport Column from 'components/Column'\nimport { PaddedColumn, Separator, SearchInput } from './styleds'\nimport Row, { RowBetween, RowFixed } from 'components/Row'\nimport { TYPE, ExternalLinkIcon, TrashIcon, ButtonText, ExternalLink } from 'theme'\nimport { useToken } from 'hooks/Tokens'\nimport styled from 'styled-components'\nimport { useUserAddedTokens, useRemoveUserAddedToken } from 'state/user/hooks'\nimport { Token } from '@uniswap/sdk'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { getEtherscanLink, isAddress } from 'utils'\nimport { useActiveWeb3React } from 'hooks'\nimport Card from 'components/Card'\nimport ImportRow from './ImportRow'\nimport useTheme from '../../hooks/useTheme'\n\nimport { CurrencyModalView } from './CurrencySearchModal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-radius: 20px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-top: 1px solid ${({ theme }) => theme.bg3};\n  padding: 20px;\n  text-align: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const theme = useTheme()\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map(token => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map(token => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size={'20px'} />\n            <ExternalLink href={getEtherscanLink(chainId, token.address, 'address')}>\n              <TYPE.main ml={'10px'} fontWeight={600}>\n                {token.symbol}\n              </TYPE.main>\n            </ExternalLink>\n          </RowFixed>\n          <RowFixed>\n            <TrashIcon onClick={() => removeToken(chainId, token.address)} />\n            <ExternalLinkIcon href={getEtherscanLink(chainId, token.address, 'address')} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <PaddedColumn gap=\"14px\">\n          <Row>\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={'0x0000'}\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n            />\n          </Row>\n          {searchQuery !== '' && !isAddressSearch && <TYPE.error error={true}>Enter valid token address</TYPE.error>}\n          {searchToken && (\n            <Card backgroundColor={theme.bg2} padding=\"10px 0\">\n              <ImportRow\n                token={searchToken}\n                showImportView={() => setModalView(CurrencyModalView.importToken)}\n                setImportToken={setImportToken}\n                style={{ height: 'fit-content' }}\n              />\n            </Card>\n          )}\n        </PaddedColumn>\n        <Separator />\n        <PaddedColumn gap=\"lg\">\n          <RowBetween>\n            <TYPE.main fontWeight={600}>\n              {userAddedTokens?.length} Custom {userAddedTokens.length === 1 ? 'Token' : 'Tokens'}\n            </TYPE.main>\n            {userAddedTokens.length > 0 && (\n              <ButtonText onClick={handleRemoveAll}>\n                <TYPE.blue>Clear all</TYPE.blue>\n              </ButtonText>\n            )}\n          </RowBetween>\n          {tokenList}\n        </PaddedColumn>\n      </Column>\n      <Footer>\n        <TYPE.darkGray>Tip: Custom tokens are stored locally in your browser</TYPE.darkGray>\n      </Footer>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}