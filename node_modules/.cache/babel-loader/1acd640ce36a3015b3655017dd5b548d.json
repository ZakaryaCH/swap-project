{"ast":null,"code":"import { JSBI, Percent } from \"@uniswap/sdk\";\nimport { ChainId } from \"../types\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport { fortmatic, injected, portis, walletconnect, walletlink } from \"../connectors\";\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"; // export const ROUTER_ADDRESS = '0xa743c67f4c888713534BDC6b25C3CF41aD3B4Bc6'\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport { PRELOADED_PROPOSALS } from \"./proposals\"; // a list of tokens by chain\n\nexport const DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nexport const USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nexport const USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nexport const COMP = new Token(ChainId.MAINNET, \"0xc00e94Cb662C3520282E6f5717214004A7f26888\", 18, \"COMP\", \"Compound\");\nexport const MKR = new Token(ChainId.MAINNET, \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\", 18, \"MKR\", \"Maker\");\nexport const AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\nexport const WBTC = new Token(ChainId.MAINNET, \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\", 8, \"WBTC\", \"Wrapped BTC\");\nexport const POGO = new Token(ChainId.MAINNET, \"0x56A954019Fe3bc317b9d76754C7D0221FAA7Ae82\", 18, \"POGO\", \"Pogo\"); // Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\n\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40320;\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS;\nexport const GOVERNANCE_ADDRESS = \"0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F\";\nexport const TIMELOCK_ADDRESS = \"0x1a9C8182C09F50C8318d769245beA52c32BE35BC\";\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[new Token(ChainId.MAINNET, \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\", 8, \"cDAI\", \"Compound Dai\"), new Token(ChainId.MAINNET, \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", 8, \"cUSDC\", \"Compound USD Coin\")], [USDC, USDT], [DAI, USDT]]\n};\nexport const SUPPORTED_WALLETS = {\n  INJECTED: {\n    connector: injected,\n    name: \"Injected\",\n    iconName: \"arrow-right.svg\",\n    description: \"Injected web3 provider.\",\n    href: null,\n    color: \"#010101\",\n    primary: true\n  },\n  METAMASK: {\n    connector: injected,\n    name: \"MetaMask\",\n    iconName: \"metamask.png\",\n    description: \"Easy-to-use browser extension.\",\n    href: null,\n    color: \"#E8831D\"\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: \"WalletConnect\",\n    iconName: \"walletConnectIcon.svg\",\n    description: \"Connect to Trust Wallet, Rainbow Wallet and more...\",\n    href: null,\n    color: \"#4196FC\",\n    mobile: true\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: \"Coinbase Wallet\",\n    iconName: \"coinbaseWalletIcon.svg\",\n    description: \"Use Coinbase Wallet app on mobile device\",\n    href: null,\n    color: \"#315CF5\"\n  },\n  COINBASE_LINK: {\n    name: \"Open in Coinbase Wallet\",\n    iconName: \"coinbaseWalletIcon.svg\",\n    description: \"Open in Coinbase Wallet app.\",\n    href: \"https://go.cb-w.com/mtUDhEZPy1\",\n    color: \"#315CF5\",\n    mobile: true,\n    mobileOnly: true\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: \"Fortmatic\",\n    iconName: \"fortmaticIcon.png\",\n    description: \"Login using Fortmatic hosted wallet\",\n    href: null,\n    color: \"#6748FF\",\n    mobile: true\n  },\n  Portis: {\n    connector: portis,\n    name: \"Portis\",\n    iconName: \"portisIcon.png\",\n    description: \"Login using Portis hosted wallet\",\n    href: null,\n    color: \"#4A6C9B\",\n    mobile: true\n  }\n};\nexport const NetworkContextName = \"NETWORK\"; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20; // used for rewards deadlines\n\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000));\nexport const ZERO_PERCENT = new Percent(\"0\");\nexport const ONE_HUNDRED_PERCENT = new Percent(\"1\"); // SDN OFAC addresses\n\nexport const BLOCKED_ADDRESSES = [\"0x7F367cC41522cE07553e823bf3be79A889DEbe1B\", \"0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b\", \"0x901bb9583b24D97e995513C6778dc6888AB6870e\", \"0xA7e5d5A720f06526557c513402f2e6B5fA20b008\"];","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/constants/index.ts"],"names":["JSBI","Percent","ChainId","Token","fortmatic","injected","portis","walletconnect","walletlink","ROUTER_ADDRESS","ZERO_ADDRESS","PRELOADED_PROPOSALS","DAI","MAINNET","USDC","USDT","COMP","MKR","AMPL","WBTC","POGO","AVERAGE_BLOCK_TIME_IN_SECS","PROPOSAL_LENGTH_IN_BLOCKS","PROPOSAL_LENGTH_IN_SECS","GOVERNANCE_ADDRESS","TIMELOCK_ADDRESS","PINNED_PAIRS","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","WALLET_CONNECT","mobile","WALLET_LINK","COINBASE_LINK","mobileOnly","FORTMATIC","Portis","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES"],"mappings":"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","sourcesContent":["import { JSBI, Percent, WETH } from \"@uniswap/sdk\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { ChainId } from \"../types\";\nimport { Token } from \"@uniswap/sdk-core\";\nimport {\n  fortmatic,\n  injected,\n  portis,\n  walletconnect,\n  walletlink,\n} from \"../connectors\";\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\n// export const ROUTER_ADDRESS = '0xa743c67f4c888713534BDC6b25C3CF41aD3B4Bc6'\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nexport { PRELOADED_PROPOSALS } from \"./proposals\";\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[];\n};\n\nexport const DAI = new Token(\n  ChainId.MAINNET,\n  \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n  18,\n  \"DAI\",\n  \"Dai Stablecoin\"\n);\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n  6,\n  \"USDC\",\n  \"USD//C\"\n);\nexport const USDT = new Token(\n  ChainId.MAINNET,\n  \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n  6,\n  \"USDT\",\n  \"Tether USD\"\n);\nexport const COMP = new Token(\n  ChainId.MAINNET,\n  \"0xc00e94Cb662C3520282E6f5717214004A7f26888\",\n  18,\n  \"COMP\",\n  \"Compound\"\n);\nexport const MKR = new Token(\n  ChainId.MAINNET,\n  \"0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2\",\n  18,\n  \"MKR\",\n  \"Maker\"\n);\nexport const AMPL = new Token(\n  ChainId.MAINNET,\n  \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\",\n  9,\n  \"AMPL\",\n  \"Ampleforth\"\n);\nexport const WBTC = new Token(\n  ChainId.MAINNET,\n  \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\n  8,\n  \"WBTC\",\n  \"Wrapped BTC\"\n);\nexport const POGO = new Token(\n  ChainId.MAINNET,\n  \"0x56A954019Fe3bc317b9d76754C7D0221FAA7Ae82\",\n  18,\n  \"POGO\",\n  \"Pogo\"\n);\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320;\nexport const PROPOSAL_LENGTH_IN_SECS =\n  AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS;\n\nexport const GOVERNANCE_ADDRESS = \"0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F\";\n\nexport const TIMELOCK_ADDRESS = \"0x1a9C8182C09F50C8318d769245beA52c32BE35BC\";\n\nexport const PINNED_PAIRS: {\n  readonly [chainId in ChainId]?: [Token, Token][];\n} = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(\n        ChainId.MAINNET,\n        \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n        8,\n        \"cDAI\",\n        \"Compound Dai\"\n      ),\n      new Token(\n        ChainId.MAINNET,\n        \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\",\n        8,\n        \"cUSDC\",\n        \"Compound USD Coin\"\n      ),\n    ],\n    [USDC, USDT],\n    [DAI, USDT],\n  ],\n};\n\nexport interface WalletInfo {\n  connector?: AbstractConnector;\n  name: string;\n  iconName: string;\n  description: string;\n  href: string | null;\n  color: string;\n  primary?: true;\n  mobile?: true;\n  mobileOnly?: true;\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  INJECTED: {\n    connector: injected,\n    name: \"Injected\",\n    iconName: \"arrow-right.svg\",\n    description: \"Injected web3 provider.\",\n    href: null,\n    color: \"#010101\",\n    primary: true,\n  },\n  METAMASK: {\n    connector: injected,\n    name: \"MetaMask\",\n    iconName: \"metamask.png\",\n    description: \"Easy-to-use browser extension.\",\n    href: null,\n    color: \"#E8831D\",\n  },\n  WALLET_CONNECT: {\n    connector: walletconnect,\n    name: \"WalletConnect\",\n    iconName: \"walletConnectIcon.svg\",\n    description: \"Connect to Trust Wallet, Rainbow Wallet and more...\",\n    href: null,\n    color: \"#4196FC\",\n    mobile: true,\n  },\n  WALLET_LINK: {\n    connector: walletlink,\n    name: \"Coinbase Wallet\",\n    iconName: \"coinbaseWalletIcon.svg\",\n    description: \"Use Coinbase Wallet app on mobile device\",\n    href: null,\n    color: \"#315CF5\",\n  },\n  COINBASE_LINK: {\n    name: \"Open in Coinbase Wallet\",\n    iconName: \"coinbaseWalletIcon.svg\",\n    description: \"Open in Coinbase Wallet app.\",\n    href: \"https://go.cb-w.com/mtUDhEZPy1\",\n    color: \"#315CF5\",\n    mobile: true,\n    mobileOnly: true,\n  },\n  FORTMATIC: {\n    connector: fortmatic,\n    name: \"Fortmatic\",\n    iconName: \"fortmaticIcon.png\",\n    description: \"Login using Fortmatic hosted wallet\",\n    href: null,\n    color: \"#6748FF\",\n    mobile: true,\n  },\n  Portis: {\n    connector: portis,\n    name: \"Portis\",\n    iconName: \"portisIcon.png\",\n    description: \"Login using Portis hosted wallet\",\n    href: null,\n    color: \"#4A6C9B\",\n    mobile: true,\n  },\n};\n\nexport const NetworkContextName = \"NETWORK\";\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50;\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20;\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0);\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000);\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(\n  JSBI.BigInt(100),\n  BIPS_BASE\n); // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(\n  JSBI.BigInt(300),\n  BIPS_BASE\n); // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(\n  JSBI.BigInt(500),\n  BIPS_BASE\n); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(\n  JSBI.BigInt(1000),\n  BIPS_BASE\n); // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(\n  JSBI.BigInt(1500),\n  BIPS_BASE\n); // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(\n  JSBI.BigInt(10),\n  JSBI.BigInt(16)\n); // .01 ETH\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(\n  JSBI.BigInt(50),\n  JSBI.BigInt(10000)\n);\n\nexport const ZERO_PERCENT = new Percent(\"0\");\nexport const ONE_HUNDRED_PERCENT = new Percent(\"1\");\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  \"0x7F367cC41522cE07553e823bf3be79A889DEbe1B\",\n  \"0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b\",\n  \"0x901bb9583b24D97e995513C6778dc6888AB6870e\",\n  \"0xA7e5d5A720f06526557c513402f2e6B5fA20b008\",\n];\n"]},"metadata":{},"sourceType":"module"}