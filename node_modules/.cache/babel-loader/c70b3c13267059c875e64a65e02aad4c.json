{"ast":null,"code":"// import React from 'react'\n// import { AutoColumn } from '../Column'\n// import { RowBetween } from '../Row'\n// import styled from 'styled-components'\n// import { TYPE, StyledInternalLink } from '../../theme'\n// import DoubleCurrencyLogo from '../DoubleLogo'\n// import { ETHER, JSBI, TokenAmount } from '@uniswap/sdk'\n// import { ButtonPrimary } from '../Button'\n// import { StakingInfo } from '../../state/stake/hooks'\n// import { useColor } from '../../hooks/useColor'\n// import { currencyId } from '../../utils/currencyId'\n// import { Break, CardNoise, CardBGImage } from './styled'\n// import { unwrappedToken } from '../../utils/wrappedCurrency'\n// import { useTotalSupply } from '../../data/TotalSupply'\n// import { usePair } from '../../data/Reserves'\n// import useUSDCPrice from '../../utils/useUSDCPrice'\n// import { BIG_INT_SECONDS_IN_WEEK } from '../../constants'\n// const StatContainer = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   flex-direction: column;\n//   gap: 12px;\n//   margin-bottom: 1rem;\n//   margin-right: 1rem;\n//   margin-left: 1rem;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//   display: none;\n// `};\n// `\n// const Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n//   border-radius: 12px;\n//   width: 100%;\n//   overflow: hidden;\n//   position: relative;\n//   opacity: ${({ showBackground }) => (showBackground ? '1' : '1')};\n//   background: ${({ theme, bgColor, showBackground }) =>\n//     `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n//   color: ${({ theme, showBackground }) => (showBackground ? theme.white : theme.text1)} !important;\n//   ${({ showBackground }) =>\n//     showBackground &&\n//     `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n//     0px 24px 32px rgba(0, 0, 0, 0.01);`}\n// `\n// const TopSection = styled.div`\n//   display: grid;\n//   grid-template-columns: 48px 1fr 120px;\n//   grid-gap: 0px;\n//   align-items: center;\n//   padding: 1rem;\n//   z-index: 1;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     grid-template-columns: 48px 1fr 96px;\n//   `};\n// `\n// const BottomSection = styled.div<{ showBackground: boolean }>`\n//   padding: 12px 16px;\n//   opacity: ${({ showBackground }) => (showBackground ? '1' : '0.4')};\n//   border-radius: 0 0 12px 12px;\n//   display: flex;\n//   flex-direction: row;\n//   align-items: baseline;\n//   justify-content: space-between;\n//   z-index: 1;\n// `\n// export default function PoolCard({ stakingInfo }: { stakingInfo: StakingInfo }) {\n//   const token0 = stakingInfo.tokens[0]\n//   const token1 = stakingInfo.tokens[1]\n//   const currency0 = unwrappedToken(token0)\n//   const currency1 = unwrappedToken(token1)\n//   const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n//   // get the color of the token\n//   const token = currency0 === ETHER ? token1 : token0\n//   const WETH = currency0 === ETHER ? token0 : token1\n//   const backgroundColor = useColor(token)\n//   const totalSupplyOfStakingToken = useTotalSupply(stakingInfo.stakedAmount.token)\n//   const [, stakingTokenPair] = usePair(...stakingInfo.tokens)\n//   // let returnOverMonth: Percent = new Percent('0')\n//   let valueOfTotalStakedAmountInWETH: TokenAmount | undefined\n//   if (totalSupplyOfStakingToken && stakingTokenPair) {\n//     // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n//     valueOfTotalStakedAmountInWETH = new TokenAmount(\n//       WETH,\n//       JSBI.divide(\n//         JSBI.multiply(\n//           JSBI.multiply(stakingInfo.totalStakedAmount.raw, stakingTokenPair.reserveOf(WETH).raw),\n//           JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n//         ),\n//         totalSupplyOfStakingToken.raw\n//       )\n//     )\n//   }\n//   // get the USD value of staked WETH\n//   const USDPrice = useUSDCPrice(WETH)\n//   const valueOfTotalStakedAmountInUSDC =\n//     valueOfTotalStakedAmountInWETH && USDPrice?.quote(valueOfTotalStakedAmountInWETH)\n//   return (\n//     <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n//       <CardBGImage desaturate />\n//       <CardNoise />\n//       <TopSection>\n//         <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={24} />\n//         <TYPE.white fontWeight={600} fontSize={24} style={{ marginLeft: '8px' }}>\n//           {currency0.symbol}-{currency1.symbol}\n//         </TYPE.white>\n//         <StyledInternalLink to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '100%' }}>\n//           <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n//             {isStaking ? 'Manage' : 'Deposit'}\n//           </ButtonPrimary>\n//         </StyledInternalLink>\n//       </TopSection>\n//       <StatContainer>\n//         <RowBetween>\n//           <TYPE.white> Total deposited</TYPE.white>\n//           <TYPE.white>\n//             {valueOfTotalStakedAmountInUSDC\n//               ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, { groupSeparator: ',' })}`\n//               : `${valueOfTotalStakedAmountInWETH?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} ETH`}\n//           </TYPE.white>\n//         </RowBetween>\n//         <RowBetween>\n//           <TYPE.white> Pool rate </TYPE.white>\n//           <TYPE.white>\n//             {stakingInfo\n//               ? stakingInfo.active\n//                 ? `${stakingInfo.totalRewardRate\n//                     ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n//                     ?.toFixed(0, { groupSeparator: ',' })} POGO / week`\n//                 : '0 POGO / week'\n//               : '-'}\n//           </TYPE.white>\n//         </RowBetween>\n//       </StatContainer>\n//       {isStaking && (\n//         <>\n//           <Break />\n//           <BottomSection showBackground={true}>\n//             <TYPE.black color={'white'} fontWeight={500}>\n//               <span>Your rate</span>\n//             </TYPE.black>\n//             <TYPE.black style={{ textAlign: 'right' }} color={'white'} fontWeight={500}>\n//               <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '0.5rem' }}>\n//                 âš¡\n//               </span>\n//               {stakingInfo\n//                 ? stakingInfo.active\n//                   ? `${stakingInfo.rewardRate\n//                       ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n//                       ?.toSignificant(4, { groupSeparator: ',' })} UNI / week`\n//                   : '0 UNI / week'\n//                 : '-'}\n//             </TYPE.black>\n//           </BottomSection>\n//         </>\n//       )}\n//     </Wrapper>\n//   )\n// }\nexport default {};","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/earn/PoolCard.tsx"],"names":[],"mappingseAAe,EAAf","sourcesContent":["// import React from 'react'\n// import { AutoColumn } from '../Column'\n// import { RowBetween } from '../Row'\n// import styled from 'styled-components'\n// import { TYPE, StyledInternalLink } from '../../theme'\n// import DoubleCurrencyLogo from '../DoubleLogo'\n// import { ETHER, JSBI, TokenAmount } from '@uniswap/sdk'\n// import { ButtonPrimary } from '../Button'\n// import { StakingInfo } from '../../state/stake/hooks'\n// import { useColor } from '../../hooks/useColor'\n// import { currencyId } from '../../utils/currencyId'\n// import { Break, CardNoise, CardBGImage } from './styled'\n// import { unwrappedToken } from '../../utils/wrappedCurrency'\n// import { useTotalSupply } from '../../data/TotalSupply'\n// import { usePair } from '../../data/Reserves'\n// import useUSDCPrice from '../../utils/useUSDCPrice'\n// import { BIG_INT_SECONDS_IN_WEEK } from '../../constants'\n\n// const StatContainer = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   flex-direction: column;\n//   gap: 12px;\n//   margin-bottom: 1rem;\n//   margin-right: 1rem;\n//   margin-left: 1rem;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//   display: none;\n// `};\n// `\n\n// const Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n//   border-radius: 12px;\n//   width: 100%;\n//   overflow: hidden;\n//   position: relative;\n//   opacity: ${({ showBackground }) => (showBackground ? '1' : '1')};\n//   background: ${({ theme, bgColor, showBackground }) =>\n//     `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n//   color: ${({ theme, showBackground }) => (showBackground ? theme.white : theme.text1)} !important;\n\n//   ${({ showBackground }) =>\n//     showBackground &&\n//     `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n//     0px 24px 32px rgba(0, 0, 0, 0.01);`}\n// `\n\n// const TopSection = styled.div`\n//   display: grid;\n//   grid-template-columns: 48px 1fr 120px;\n//   grid-gap: 0px;\n//   align-items: center;\n//   padding: 1rem;\n//   z-index: 1;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     grid-template-columns: 48px 1fr 96px;\n//   `};\n// `\n\n// const BottomSection = styled.div<{ showBackground: boolean }>`\n//   padding: 12px 16px;\n//   opacity: ${({ showBackground }) => (showBackground ? '1' : '0.4')};\n//   border-radius: 0 0 12px 12px;\n//   display: flex;\n//   flex-direction: row;\n//   align-items: baseline;\n//   justify-content: space-between;\n//   z-index: 1;\n// `\n\n// export default function PoolCard({ stakingInfo }: { stakingInfo: StakingInfo }) {\n//   const token0 = stakingInfo.tokens[0]\n//   const token1 = stakingInfo.tokens[1]\n\n//   const currency0 = unwrappedToken(token0)\n//   const currency1 = unwrappedToken(token1)\n\n//   const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n//   // get the color of the token\n//   const token = currency0 === ETHER ? token1 : token0\n//   const WETH = currency0 === ETHER ? token0 : token1\n//   const backgroundColor = useColor(token)\n\n//   const totalSupplyOfStakingToken = useTotalSupply(stakingInfo.stakedAmount.token)\n//   const [, stakingTokenPair] = usePair(...stakingInfo.tokens)\n\n//   // let returnOverMonth: Percent = new Percent('0')\n//   let valueOfTotalStakedAmountInWETH: TokenAmount | undefined\n//   if (totalSupplyOfStakingToken && stakingTokenPair) {\n//     // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n//     valueOfTotalStakedAmountInWETH = new TokenAmount(\n//       WETH,\n//       JSBI.divide(\n//         JSBI.multiply(\n//           JSBI.multiply(stakingInfo.totalStakedAmount.raw, stakingTokenPair.reserveOf(WETH).raw),\n//           JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n//         ),\n//         totalSupplyOfStakingToken.raw\n//       )\n//     )\n//   }\n\n//   // get the USD value of staked WETH\n//   const USDPrice = useUSDCPrice(WETH)\n//   const valueOfTotalStakedAmountInUSDC =\n//     valueOfTotalStakedAmountInWETH && USDPrice?.quote(valueOfTotalStakedAmountInWETH)\n\n//   return (\n//     <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n//       <CardBGImage desaturate />\n//       <CardNoise />\n\n//       <TopSection>\n//         <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={24} />\n//         <TYPE.white fontWeight={600} fontSize={24} style={{ marginLeft: '8px' }}>\n//           {currency0.symbol}-{currency1.symbol}\n//         </TYPE.white>\n\n//         <StyledInternalLink to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '100%' }}>\n//           <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n//             {isStaking ? 'Manage' : 'Deposit'}\n//           </ButtonPrimary>\n//         </StyledInternalLink>\n//       </TopSection>\n\n//       <StatContainer>\n//         <RowBetween>\n//           <TYPE.white> Total deposited</TYPE.white>\n//           <TYPE.white>\n//             {valueOfTotalStakedAmountInUSDC\n//               ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, { groupSeparator: ',' })}`\n//               : `${valueOfTotalStakedAmountInWETH?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} ETH`}\n//           </TYPE.white>\n//         </RowBetween>\n//         <RowBetween>\n//           <TYPE.white> Pool rate </TYPE.white>\n//           <TYPE.white>\n//             {stakingInfo\n//               ? stakingInfo.active\n//                 ? `${stakingInfo.totalRewardRate\n//                     ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n//                     ?.toFixed(0, { groupSeparator: ',' })} POGO / week`\n//                 : '0 POGO / week'\n//               : '-'}\n//           </TYPE.white>\n//         </RowBetween>\n//       </StatContainer>\n\n//       {isStaking && (\n//         <>\n//           <Break />\n//           <BottomSection showBackground={true}>\n//             <TYPE.black color={'white'} fontWeight={500}>\n//               <span>Your rate</span>\n//             </TYPE.black>\n\n//             <TYPE.black style={{ textAlign: 'right' }} color={'white'} fontWeight={500}>\n//               <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '0.5rem' }}>\n//                 âš¡\n//               </span>\n//               {stakingInfo\n//                 ? stakingInfo.active\n//                   ? `${stakingInfo.rewardRate\n//                       ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n//                       ?.toSignificant(4, { groupSeparator: ',' })} UNI / week`\n//                   : '0 UNI / week'\n//                 : '-'}\n//             </TYPE.black>\n//           </BottomSection>\n//         </>\n//       )}\n//     </Wrapper>\n//   )\n// }\nexport default {};\n"]},"metadata":{},"sourceType":"module"}