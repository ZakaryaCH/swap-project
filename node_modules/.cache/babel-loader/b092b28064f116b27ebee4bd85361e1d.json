{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Blocklist/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { BLOCKED_ADDRESSES } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Blocklist({\n  children\n}) {\n  _s();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const blocked = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account]);\n\n  if (blocked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Blocked address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n\n_s(Blocklist, \"QmmGe5OGwfqhZCs1p8kk7I0KAK4=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c = Blocklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blocklist\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Blocklist/index.tsx"],"names":["React","useMemo","BLOCKED_ADDRESSES","useActiveWeb3React","Blocklist","children","account","blocked","Boolean","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,kBAAT,QAAmC,aAAnC;;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA0D;AAAA;;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAcH,kBAAkB,EAAtC;AACA,QAAMI,OAAgB,GAAGN,OAAO,CAAC,MAAMO,OAAO,CAACF,OAAO,IAAIJ,iBAAiB,CAACO,OAAlB,CAA0BH,OAA1B,MAAuC,CAAC,CAApD,CAAd,EAAsE,CAACA,OAAD,CAAtE,CAAhC;;AACA,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO;AAAA,cAAGF;AAAH,mBAAP;AACD;;GAPuBD,S;UACFD,kB;;;KADEC,S","sourcesContent":["import React, { ReactNode, useMemo } from 'react'\nimport { BLOCKED_ADDRESSES } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\n\nexport default function Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n"]},"metadata":{},"sourceType":"module"}