{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/AddLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { currencyEquals, ETHER, WETH } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { BlueCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\nimport { useIsTransactionUnsupported } from 'hooks/Trades';\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddLiquidity({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  },\n  history\n}) {\n  _s();\n\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$3, _currencies$Field$CUR9, _parsedAmounts$Field$4, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _currencies$Field$CUR13, _currencies$Field$CUR14;\n\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(currencyA, WETH[chainId]) || currencyB && currencyEquals(currencyB, WETH[chainId])));\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode(); // mint state\n\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const deadline = useTransactionDeadline(); // custom from users settings\n\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n\n  const [txHash, setTxHash] = useState(''); // get formatted amounts\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  }; // get the max amounts user can add\n\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return { ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n\n    return { ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {}); // check whether the user has approved the router on the tokens\n\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\n  const addTransaction = useTransactionAdder();\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n\n    if (currencyA === ETHER || currencyB === ETHER) {\n      var _wrappedCurrency$addr, _wrappedCurrency;\n\n      const tokenBIsETH = currencyB === ETHER;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '', // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n      account, deadline.toHexString()];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      var _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      value = null;\n    }\n\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, { ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _currencies$Field$CUR, _parsedAmounts$Field$2, _currencies$Field$CUR2, _currencies$Field$CUR3, _currencies$Field$CUR4;\n\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: 'Add ' + ((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(3)) + ' ' + ((_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol) + ' and ' + ((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(3)) + ' ' + ((_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)\n      });\n      setTxHash(response.hash);\n      ReactGA.event({\n        category: 'Liquidity',\n        action: 'Add',\n        label: [(_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol, (_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol].join('/')\n      });\n    })).catch(error => {\n      setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.error(error);\n      }\n    });\n  }\n\n  const modalHeader = () => {\n    var _currencies$Field$CUR5, _currencies$Field$CUR6, _currencies$Field$CUR7, _currencies$Field$CUR8;\n\n    return noLiquidity ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(LightCard, {\n        mt: \"20px\",\n        borderRadius: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(RowFlat, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"48px\",\n            fontWeight: 500,\n            lineHeight: \"42px\",\n            marginRight: 10,\n            children: ((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol) + '/' + ((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencies[Field.CURRENCY_A],\n            currency1: currencies[Field.CURRENCY_B],\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(RowFlat, {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"48px\",\n          fontWeight: 500,\n          lineHeight: \"42px\",\n          marginRight: 10,\n          children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: currencies[Field.CURRENCY_A],\n          currency1: currencies[Field.CURRENCY_B],\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: ((_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol) + '/' + ((_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol) + ' Pool Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.italic, {\n        fontSize: 12,\n        textAlign: \"left\",\n        padding: '8px 0 0 0 ',\n        children: `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this);\n  };\n\n  const modalBottom = () => {\n    return /*#__PURE__*/_jsxDEV(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  };\n\n  const pendingText = `Supplying ${(_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)} ${(_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR9 === void 0 ? void 0 : _currencies$Field$CUR9.symbol} and ${(_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)} ${(_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol}`;\n  const handleCurrencyASelect = useCallback(currencyA => {\n    const newCurrencyIdA = currencyId(currencyA);\n\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(`/add/${currencyIdB}/${currencyIdA}`);\n    } else {\n      history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB => {\n    const newCurrencyIdB = currencyId(currencyB);\n\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        history.push(`/add/${newCurrencyIdB}`);\n      }\n    } else {\n      history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput('');\n    }\n\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  const isCreate = history.location.pathname.includes('/create');\n  const addIsUnsupported = useIsTransactionUnsupported(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        creating: isCreate,\n        adding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n          isOpen: showConfirm,\n          onDismiss: handleDismissConfirmation,\n          attemptingTxn: attemptingTxn,\n          hash: txHash,\n          content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: noLiquidity ? 'You are creating a pool' : 'You will receive',\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this),\n          pendingText: pendingText,\n          currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"20px\",\n          children: [noLiquidity || (isCreate ? /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(BlueCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: [/*#__PURE__*/_jsxDEV(TYPE.link, {\n                  fontWeight: 600,\n                  color: 'primaryText1',\n                  children: \"You are the first liquidity provider.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.link, {\n                  fontWeight: 400,\n                  color: 'primaryText1',\n                  children: \"The ratio of tokens you add will set the price of this pool.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.link, {\n                  fontWeight: 400,\n                  color: 'primaryText1',\n                  children: \"Once you are happy with the rate click supply to review.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(BlueCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(TYPE.link, {\n                  fontWeight: 400,\n                  color: 'primaryText1',\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Tip:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), \" When you add liquidity, you will receive pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_A],\n            onUserInput: onFieldAInput,\n            onMax: () => {\n              var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n              onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n            },\n            onCurrencySelect: handleCurrencyASelect,\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n            currency: currencies[Field.CURRENCY_A],\n            id: \"add-liquidity-input-tokena\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: \"16\",\n              color: theme.text2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_B],\n            onUserInput: onFieldBInput,\n            onCurrencySelect: handleCurrencyBSelect,\n            onMax: () => {\n              var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n              onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n            },\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n            currency: currencies[Field.CURRENCY_B],\n            id: \"add-liquidity-input-tokenb\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"0px\",\n              borderRadius: '20px',\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                padding: \"1rem\",\n                children: /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  children: [noLiquidity ? 'Initial prices' : 'Prices', \" and pool share\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(LightCard, {\n                padding: \"1rem\",\n                borderRadius: '20px',\n                children: /*#__PURE__*/_jsxDEV(PoolPriceBar, {\n                  currencies: currencies,\n                  poolTokenPercentage: poolTokenPercentage,\n                  noLiquidity: noLiquidity,\n                  price: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), addIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Unsupported Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this) : !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: 'md',\n            children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [approvalA !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveACallback,\n                disabled: approvalA === ApprovalState.PENDING,\n                width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: [\"Approving \", (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 29\n                }, this) : 'Approve ' + ((_currencies$Field$CUR12 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 25\n              }, this), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveBCallback,\n                disabled: approvalB === ApprovalState.PENDING,\n                width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: [\"Approving \", (_currencies$Field$CUR13 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR13 === void 0 ? void 0 : _currencies$Field$CUR13.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 29\n                }, this) : 'Approve ' + ((_currencies$Field$CUR14 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR14 === void 0 ? void 0 : _currencies$Field$CUR14.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: () => {\n                expertMode ? onAdd() : setShowConfirm(true);\n              },\n              disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n              error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 20,\n                fontWeight: 500,\n                children: error !== null && error !== void 0 ? error : 'Supply'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), !addIsUnsupported ? pair && !noLiquidity && pairState !== PairState.INVALID ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 11\n    }, this) : null : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      show: addIsUnsupported,\n      currencies: [currencies.CURRENCY_A, currencies.CURRENCY_B]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddLiquidity, \"BbuBGwCCSGQeeaHe/6DM2PQbHuM=\", false, function () {\n  return [useActiveWeb3React, useCurrency, useCurrency, useWalletModalToggle, useIsExpertMode, useMintState, useDerivedMintInfo, useMintActionHandlers, useTransactionDeadline, useUserSlippageTolerance, useApproveCallback, useApproveCallback, useTransactionAdder, useIsTransactionUnsupported];\n});\n\n_c = AddLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/AddLiquidity/index.tsx"],"names":["BigNumber","currencyEquals","ETHER","WETH","React","useCallback","useContext","useState","Plus","ReactGA","Text","ThemeContext","ButtonError","ButtonLight","ButtonPrimary","BlueCard","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","useIsTransactionUnsupported","UnsupportedCurrencyFooter","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","theme","currencyA","currencyB","oneCurrencyIsWETH","Boolean","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","tokenBIsETH","estimateGas","addLiquidityETH","address","raw","toString","toHexString","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","summary","symbol","hash","event","category","action","label","join","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","location","pathname","includes","addIsUnsupported","liquidityToken","toExact","text2","INVALID","NOT_APPROVED","PENDING","APPROVED","minWidth","width","maxWidth"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@uniswap/sdk'\nimport React, { useCallback, useContext, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\n\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { PairState } from '../../data/Reserves'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB }\n  },\n  history\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? ''\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field])\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0')\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString()\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString()\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then(estimatedGasLimit =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit)\n        }).then(response => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary:\n              'Add ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_A]?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_B]?.symbol\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/')\n          })\n        })\n      )\n      .catch(error => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {`Output is estimated. If the price changes by more than ${allowedSlippage /\n            100}% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const isCreate = history.location.pathname.includes('/create')\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={600} color={'primaryText1'}>\n                        You are the first liquidity provider.\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        The ratio of tokens you add will set the price of this pool.\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        Once you are happy with the rate click supply to review.\n                      </TYPE.link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        <b>Tip:</b> When you add liquidity, you will receive pool tokens representing your position.\n                        These tokens automatically earn fees proportional to your share of the pool, and can be redeemed\n                        at any time.\n                      </TYPE.link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? 'Initial prices' : 'Prices'} and pool share\n                    </TYPE.subHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_A]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_B]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? 'Supply'}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}