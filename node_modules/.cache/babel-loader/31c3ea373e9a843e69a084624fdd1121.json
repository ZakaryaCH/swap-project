{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/MigrateV1Exchange.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, TokenAmount } from \"@uniswap/sdk\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Text } from \"rebass\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport CurrencyLogo from \"../../components/CurrencyLogo\";\nimport FormattedCurrencyAmount from \"../../components/FormattedCurrencyAmount\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow, RowBetween, RowFixed } from \"../../components/Row\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { MIGRATOR_ADDRESS } from \"../../constants/abis/migrator\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { ApprovalState, useApproveCallback } from \"../../hooks/useApproveCallback\";\nimport { useV1ExchangeContract, useV2MigratorContract } from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport { useIsTransactionPending, useTransactionAdder } from \"../../state/transactions/hooks\";\nimport { useETHBalances, useTokenBalance } from \"../../state/wallet/hooks\";\nimport { BackArrow, ExternalLink, TYPE } from \"../../theme\";\nimport { getEtherscanLink, isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE); // const ALLOWED_OUTPUT_MIN_PERCENT = new Percent(\n//   JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE),\n//   JSBI.BigInt(10000)\n// );\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n      style: {\n        justifyContent: \"flex-start\",\n        width: \"fit-content\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        size: \"24px\",\n        currency: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \".75rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      my: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: [\"Pooled\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          marginLeft: \"6px\",\n          children: tokenWorth.toSignificant(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: \"8px\"\n          },\n          currency: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      mb: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: \"Pooled ETH:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          marginLeft: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n            currencyAmount: ethWorth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: \"8px\"\n          },\n          currency: Currency.ETHER\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(V1LiquidityInfo, \"Srgj51dvRDiLRw5YTqb92Ixo5OU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c = V1LiquidityInfo;\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token\n}) {\n  _s2();\n\n  var _useETHBalances;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token); // const [v2PairState, v2Pair] = usePair(\n  //   chainId ? WETH[chainId] : undefined,\n  //   token\n  // );\n  // const isFirstLiquidityProvider: boolean =\n  //   v2PairState === PairState.NOT_EXISTS;\n  // const v2SpotPrice =\n  //   chainId && v2Pair\n  //     ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId]))\n  //     : undefined;\n\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS);\n  const v1SpotPrice = exchangeTokenBalance && exchangeETHBalance ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM)) : null; // const priceDifferenceFraction: Fraction | undefined =\n  //   v1SpotPrice && v2SpotPrice\n  //     ? v1SpotPrice.divide(v2SpotPrice).multiply(\"100\").subtract(\"100\")\n  //     : undefined;\n  // const priceDifferenceAbs: Fraction | undefined =\n  //   priceDifferenceFraction?.lessThan(ZERO)\n  //     ? priceDifferenceFraction?.multiply(\"-1\")\n  //     : priceDifferenceFraction;\n  // const minAmountETH: JSBI | undefined =\n  //   v2SpotPrice && tokenWorth\n  //     ? tokenWorth\n  //         .divide(v2SpotPrice)\n  //         .multiply(WEI_DENOM)\n  //         .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n  //     : ethWorth?.numerator;\n  // const minAmountToken: JSBI | undefined =\n  //   v2SpotPrice && ethWorth\n  //     ? ethWorth\n  //         .multiply(v2SpotPrice)\n  //         .multiply(\n  //           JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))\n  //         )\n  //         .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n  //     : tokenWorth?.numerator;\n\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n\n  const migrate = () => null;\n\n  const migrator = useV2MigratorContract(); // const migrate = useCallback(() => {\n  //   if (!minAmountToken || !minAmountETH || !migrator) return;\n  //   setConfirmingMigration(true);\n  //   migrator\n  //     .migrate(\n  //       token.address,\n  //       minAmountToken.toString(),\n  //       minAmountETH.toString(),\n  //       account,\n  //       Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n  //     )\n  //     .then((response: TransactionResponse) => {\n  //       ReactGA.event({\n  //         category: \"Migrate\",\n  //         action: \"V1->V2\",\n  //         label: token?.symbol,\n  //       });\n  //       addTransaction(response, {\n  //         summary: `Migrate ${token.symbol} liquidity to V2`,\n  //       });\n  //       setPendingMigrationHash(response.hash);\n  //     })\n  //     .catch(() => {\n  //       setConfirmingMigration(false);\n  //     });\n  // }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO); // const largePriceDifference =\n  //   !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: [\"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\", \" \", chainId && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getEtherscanLink(chainId, MIGRATOR_ADDRESS, \"address\"),\n        children: /*#__PURE__*/_jsxDEV(TYPE.blue, {\n          display: \"inline\",\n          children: \"Uniswap migration contract\\u2197\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: [/*#__PURE__*/_jsxDEV(V1LiquidityInfo, {\n        token: token,\n        liquidityTokenAmount: liquidityTokenAmount,\n        tokenWorth: tokenWorth,\n        ethWorth: ethWorth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: \"1\",\n            marginRight: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n            confirmed: approval === ApprovalState.APPROVED,\n            disabled: approval !== ApprovalState.NOT_APPROVED,\n            onClick: approve,\n            children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Approving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this) : approval === ApprovalState.APPROVED ? \"Approved\" : \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n            confirmed: isSuccessfullyMigrated,\n            disabled: isSuccessfullyMigrated || noLiquidityTokens || isMigrationPending || approval !== ApprovalState.APPROVED || confirmingMigration,\n            onClick: migrate,\n            children: isSuccessfullyMigrated ? \"Success\" : isMigrationPending ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Migrating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this) : \"Migrate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: `Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(V1PairMigration, \"Kruzj2zS3ZfbNU9gP6L/33GqAHY=\", false, function () {\n  return [useActiveWeb3React, useTotalSupply, useETHBalances, useTokenBalance, useApproveCallback, useTransactionAdder, useIsTransactionPending, useV2MigratorContract];\n});\n\n_c2 = V1PairMigration;\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s3();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, \"tokenAddress\", undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress); // const liquidityToken: Token | undefined = useMemo(\n  //   () =>\n  //     validatedAddress && chainId && token\n  //       ? new Token(\n  //           chainId,\n  //           validatedAddress,\n  //           18,\n  //           `UNI-V1-${token.symbol}`,\n  //           \"Uniswap V1\"\n  //         )\n  //       : undefined,\n  //   [chainId, validatedAddress, token]\n  // );\n  // const userLiquidityBalance = useTokenBalance(\n  //   account ?? undefined,\n  //   liquidityToken\n  // );\n  // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Migrate V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 441,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(MigrateV1Exchange, \"61r2G6Ji4ilr23QXbjKC6n/Z1EE=\", false, function () {\n  return [useActiveWeb3React, useV1ExchangeContract, useSingleCallResult, useToken];\n});\n\n_c3 = MigrateV1Exchange;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"V1LiquidityInfo\");\n$RefreshReg$(_c2, \"V1PairMigration\");\n$RefreshReg$(_c3, \"MigrateV1Exchange\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","TokenAmount","React","useState","Redirect","Text","ButtonConfirmed","LightCard","AutoColumn","CurrencyLogo","FormattedCurrencyAmount","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","MIGRATOR_ADDRESS","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","toSignificant","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","divide","addTransaction","isMigrationPending","undefined","migrate","migrator","noLiquidityTokens","equalTo","isSuccessfullyMigrated","fontWeight","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","symbol","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","console","error","padding","alignItems"],"mappings":"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","sourcesContent":["import { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport {\n  Currency,\n  CurrencyAmount,\n  Fraction,\n  JSBI,\n  Percent,\n  Token,\n  TokenAmount,\n  WETH,\n} from \"@uniswap/sdk\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { Text } from \"rebass\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard, PinkCard, YellowCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport CurrencyLogo from \"../../components/CurrencyLogo\";\nimport FormattedCurrencyAmount from \"../../components/FormattedCurrencyAmount\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow, RowBetween, RowFixed } from \"../../components/Row\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport {\n  DEFAULT_DEADLINE_FROM_NOW,\n  INITIAL_ALLOWED_SLIPPAGE,\n} from \"../../constants\";\nimport { MIGRATOR_ADDRESS } from \"../../constants/abis/migrator\";\nimport { PairState, usePair } from \"../../data/Reserves\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport {\n  ApprovalState,\n  useApproveCallback,\n} from \"../../hooks/useApproveCallback\";\nimport {\n  useV1ExchangeContract,\n  useV2MigratorContract,\n} from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport {\n  useIsTransactionPending,\n  useTransactionAdder,\n} from \"../../state/transactions/hooks\";\nimport { useETHBalances, useTokenBalance } from \"../../state/wallet/hooks\";\nimport { BackArrow, ExternalLink, TYPE } from \"../../theme\";\nimport { getEtherscanLink, isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\n// const ALLOWED_OUTPUT_MIN_PERCENT = new Percent(\n//   JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE),\n//   JSBI.BigInt(10000)\n// );\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth,\n}: {\n  token: Token;\n  liquidityTokenAmount: TokenAmount;\n  tokenWorth: TokenAmount;\n  ethWorth: CurrencyAmount;\n}) {\n  const { chainId } = useActiveWeb3React();\n\n  return (\n    <>\n      <AutoRow style={{ justifyContent: \"flex-start\", width: \"fit-content\" }}>\n        <CurrencyLogo size=\"24px\" currency={token} />\n        <div style={{ marginLeft: \".75rem\" }}>\n          {/* <TYPE.mediumHeader>\n            {<FormattedCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\n          </TYPE.mediumHeader> */}\n        </div>\n      </AutoRow>\n\n      <RowBetween my=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled{\" \"}\n          {/* {chainId && token.equals(WETH[chainId]) ? \"WETH\" : token.symbol}: */}\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n            {tokenWorth.toSignificant(4)}\n          </Text>\n          <CurrencyLogo\n            size=\"20px\"\n            style={{ marginLeft: \"8px\" }}\n            currency={token}\n          />\n        </RowFixed>\n      </RowBetween>\n      <RowBetween mb=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled ETH:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n            <FormattedCurrencyAmount currencyAmount={ethWorth} />\n          </Text>\n          <CurrencyLogo\n            size=\"20px\"\n            style={{ marginLeft: \"8px\" }}\n            currency={Currency.ETHER}\n          />\n        </RowFixed>\n      </RowBetween>\n    </>\n  );\n}\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token,\n}: {\n  liquidityTokenAmount: TokenAmount;\n  token: Token;\n}) {\n  const { account, chainId } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = useETHBalances([\n    liquidityTokenAmount.token.address,\n  ])?.[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(\n    liquidityTokenAmount.token.address,\n    token\n  );\n\n  // const [v2PairState, v2Pair] = usePair(\n  //   chainId ? WETH[chainId] : undefined,\n  //   token\n  // );\n  // const isFirstLiquidityProvider: boolean =\n  //   v2PairState === PairState.NOT_EXISTS;\n\n  // const v2SpotPrice =\n  //   chainId && v2Pair\n  //     ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId]))\n  //     : undefined;\n\n  const [confirmingMigration, setConfirmingMigration] =\n    useState<boolean>(false);\n  const [pendingMigrationHash, setPendingMigrationHash] =\n    useState<string | null>(null);\n\n  const shareFraction: Fraction = totalSupply\n    ? new Percent(liquidityTokenAmount.raw, totalSupply.raw)\n    : ZERO_FRACTION;\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(\n        exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient\n      )\n    : CurrencyAmount.ether(ZERO);\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(\n        token,\n        shareFraction.multiply(exchangeTokenBalance.raw).quotient\n      )\n    : new TokenAmount(token, ZERO);\n\n  const [approval, approve] = useApproveCallback(\n    liquidityTokenAmount,\n    MIGRATOR_ADDRESS\n  );\n\n  const v1SpotPrice =\n    exchangeTokenBalance && exchangeETHBalance\n      ? exchangeTokenBalance.divide(\n          new Fraction(exchangeETHBalance.raw, WEI_DENOM)\n        )\n      : null;\n\n  // const priceDifferenceFraction: Fraction | undefined =\n  //   v1SpotPrice && v2SpotPrice\n  //     ? v1SpotPrice.divide(v2SpotPrice).multiply(\"100\").subtract(\"100\")\n  //     : undefined;\n\n  // const priceDifferenceAbs: Fraction | undefined =\n  //   priceDifferenceFraction?.lessThan(ZERO)\n  //     ? priceDifferenceFraction?.multiply(\"-1\")\n  //     : priceDifferenceFraction;\n\n  // const minAmountETH: JSBI | undefined =\n  //   v2SpotPrice && tokenWorth\n  //     ? tokenWorth\n  //         .divide(v2SpotPrice)\n  //         .multiply(WEI_DENOM)\n  //         .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n  //     : ethWorth?.numerator;\n\n  // const minAmountToken: JSBI | undefined =\n  //   v2SpotPrice && ethWorth\n  //     ? ethWorth\n  //         .multiply(v2SpotPrice)\n  //         .multiply(\n  //           JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))\n  //         )\n  //         .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n  //     : tokenWorth?.numerator;\n\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(\n    pendingMigrationHash ?? undefined\n  );\n\n  const migrate = () => null;\n  const migrator = useV2MigratorContract();\n  // const migrate = useCallback(() => {\n  //   if (!minAmountToken || !minAmountETH || !migrator) return;\n\n  //   setConfirmingMigration(true);\n  //   migrator\n  //     .migrate(\n  //       token.address,\n  //       minAmountToken.toString(),\n  //       minAmountETH.toString(),\n  //       account,\n  //       Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n  //     )\n  //     .then((response: TransactionResponse) => {\n  //       ReactGA.event({\n  //         category: \"Migrate\",\n  //         action: \"V1->V2\",\n  //         label: token?.symbol,\n  //       });\n\n  //       addTransaction(response, {\n  //         summary: `Migrate ${token.symbol} liquidity to V2`,\n  //       });\n  //       setPendingMigrationHash(response.hash);\n  //     })\n  //     .catch(() => {\n  //       setConfirmingMigration(false);\n  //     });\n  // }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n\n  const noLiquidityTokens =\n    !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n\n  // const largePriceDifference =\n  //   !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will safely migrate your V1 liquidity to V2 with minimal price\n        risk. The process is completely trustless thanks to the{\" \"}\n        {chainId && (\n          <ExternalLink\n            href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, \"address\")}\n          >\n            <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\n          </ExternalLink>\n        )}\n        .\n      </TYPE.body>\n\n      {/* {!isFirstLiquidityProvider && largePriceDifference ? (\n        <YellowCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you\n            believe is correct. If the V2 price seems incorrect, you can either\n            make a swap to move the price or wait for someone else to do so.\n          </TYPE.body>\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body>V2 Price:</TYPE.body>\n              <TYPE.black>\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\n              <TYPE.black color=\"inherit\">\n                {priceDifferenceAbs?.toSignificant(4)}%\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </YellowCard>\n      ) : null} */}\n\n      {/* {isFirstLiquidityProvider && (\n        <PinkCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            You are the first liquidity provider for this pair on Uniswap V2.\n            Your liquidity will be migrated at the current V1 price. Your\n            transaction cost also includes the gas to create the pool.\n          </TYPE.body>\n\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </PinkCard>\n      )} */}\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: \"flex\", marginTop: \"1rem\" }}>\n          <AutoColumn gap=\"12px\" style={{ flex: \"1\", marginRight: 12 }}>\n            <ButtonConfirmed\n              confirmed={approval === ApprovalState.APPROVED}\n              disabled={approval !== ApprovalState.NOT_APPROVED}\n              onClick={approve}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Dots>Approving</Dots>\n              ) : approval === ApprovalState.APPROVED ? (\n                \"Approved\"\n              ) : (\n                \"Approve\"\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n          <AutoColumn gap=\"12px\" style={{ flex: \"1\" }}>\n            <ButtonConfirmed\n              confirmed={isSuccessfullyMigrated}\n              disabled={\n                isSuccessfullyMigrated ||\n                noLiquidityTokens ||\n                isMigrationPending ||\n                approval !== ApprovalState.APPROVED ||\n                confirmingMigration\n              }\n              onClick={migrate}\n            >\n              {isSuccessfullyMigrated ? (\n                \"Success\"\n              ) : isMigrationPending ? (\n                <Dots>Migrating</Dots>\n              ) : (\n                \"Migrate\"\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: \"center\" }}>\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  );\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address);\n  const { chainId, account } = useActiveWeb3React();\n\n  const exchangeContract = useV1ExchangeContract(\n    validatedAddress ? validatedAddress : undefined\n  );\n  const tokenAddress = useSingleCallResult(\n    exchangeContract,\n    \"tokenAddress\",\n    undefined,\n    NEVER_RELOAD\n  )?.result?.[0];\n\n  const token = useToken(tokenAddress);\n\n  // const liquidityToken: Token | undefined = useMemo(\n  //   () =>\n  //     validatedAddress && chainId && token\n  //       ? new Token(\n  //           chainId,\n  //           validatedAddress,\n  //           18,\n  //           `UNI-V1-${token.symbol}`,\n  //           \"Uniswap V1\"\n  //         )\n  //       : undefined,\n  //   [chainId, validatedAddress, token]\n  // );\n  // const userLiquidityBalance = useTokenBalance(\n  //   account ?? undefined,\n  //   liquidityToken\n  // );\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return <Redirect to=\"/migrate/v1\" />;\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\n          gap=\"8px\"\n        >\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        {/* {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\n          <>\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1\n              WETH/ETH liquidity cannot be migrated. You may want to remove your\n              liquidity instead.\n            </TYPE.body>\n\n            <ButtonConfirmed\n              onClick={() => {\n                history.push(`/remove/v1/${validatedAddress}`);\n              }}\n            >\n              Remove\n            </ButtonConfirmed>\n          </>\n        ) : true && token ? (\n          <V1PairMigration liquidityTokenAmount={0} token={token} />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )} */}\n      </AutoColumn>\n    </BodyWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}