{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/RemoveLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { splitSignature } from '@ethersproject/bytes';\nimport { currencyEquals, ETHER, Percent, WETH } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { ArrowDown, Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonPrimary, ButtonLight, ButtonError, ButtonConfirmed } from '../../components/Button';\nimport { BlueCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFixed } from '../../components/Row';\nimport Slider from '../../components/Slider';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { usePairContract } from '../../hooks/useContract';\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { StyledInternalLink, TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { currencyId } from '../../utils/currencyId';\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds';\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback';\nimport { Dots } from '../../components/swap/styleds';\nimport { useBurnActionHandlers } from '../../state/burn/hooks';\nimport { useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks';\nimport { Field } from '../../state/burn/actions';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { useUserSlippageTolerance } from '../../state/user/hooks';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  _s();\n\n  var _useCurrency, _useCurrency2, _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _parsedAmounts$Field$7, _pair$liquidityToken, _parsedAmounts$Field$13, _parsedAmounts$Field$14;\n\n  const [currencyA, currencyB] = [(_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined, (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined];\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [currencyA, currencyB, chainId]);\n  const theme = useContext(ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // burn state\n\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const [txHash, setTxHash] = useState('');\n  const deadline = useTransactionDeadline();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const atMaxAmount = (_parsedAmounts$Field$7 = parsedAmounts[Field.LIQUIDITY_PERCENT]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.equalTo(new Percent('1')); // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address); // allowance handling\n\n  const [signatureData, setSignatureData] = useState(null);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS);\n  const isArgentWallet = useIsArgentWallet();\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n\n    if (isArgentWallet) {\n      return approveCallback();\n    } // try to gather a signature for permission\n\n\n    const nonce = await pairContract.nonces(account);\n    const EIP712Domain = [{\n      name: 'name',\n      type: 'string'\n    }, {\n      name: 'version',\n      type: 'string'\n    }, {\n      name: 'chainId',\n      type: 'uint256'\n    }, {\n      name: 'verifyingContract',\n      type: 'address'\n    }];\n    const domain = {\n      name: 'Uniswap V2',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address\n    };\n    const Permit = [{\n      name: 'owner',\n      type: 'address'\n    }, {\n      name: 'spender',\n      type: 'address'\n    }, {\n      name: 'value',\n      type: 'uint256'\n    }, {\n      name: 'nonce',\n      type: 'uint256'\n    }, {\n      name: 'deadline',\n      type: 'uint256'\n    }];\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    };\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    });\n    library.send('eth_signTypedData_v4', [account, data]).then(splitSignature).then(signature => {\n      setSignatureData({\n        v: signature.v,\n        r: signature.r,\n        s: signature.s,\n        deadline: deadline.toNumber()\n      });\n    }).catch(error => {\n      // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        approveCallback();\n      }\n    });\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback((field, typedValue) => {\n    setSignatureData(null);\n    return _onUserInput(field, typedValue);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(typedValue => onUserInput(Field.LIQUIDITY, typedValue), [onUserInput]);\n  const onCurrencyAInput = useCallback(typedValue => onUserInput(Field.CURRENCY_A, typedValue), [onUserInput]);\n  const onCurrencyBInput = useCallback(typedValue => onUserInput(Field.CURRENCY_B, typedValue), [onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts');\n    }\n\n    const router = getRouterContract(chainId, library, account);\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsETH = currencyB === ETHER;\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH;\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let methodNames, args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n      } // removeLiquidity\n      else {\n          methodNames = ['removeLiquidity'];\n          args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n        }\n    } // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n        // removeLiquidityETHWithPermit\n        if (oneCurrencyIsETH) {\n          methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens'];\n          args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.raw.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n        } // removeLiquidityETHWithPermit\n        else {\n            methodNames = ['removeLiquidityWithPermit'];\n            args = [tokenA.address, tokenB.address, liquidityAmount.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n          }\n      } else {\n        throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n      }\n\n    const safeGasEstimates = await Promise.all(methodNames.map(methodName => router.estimateGas[methodName](...args).then(calculateGasMargin).catch(error => {\n      console.error(`estimateGas failed`, methodName, args, error);\n      return undefined;\n    })));\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.');\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(response => {\n        var _parsedAmounts$Field$8, _parsedAmounts$Field$9;\n\n        setAttemptingTxn(false);\n        addTransaction(response, {\n          summary: 'Remove ' + ((_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(3)) + ' ' + (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + ' and ' + ((_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.toSignificant(3)) + ' ' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol)\n        });\n        setTxHash(response.hash);\n        ReactGA.event({\n          category: 'Liquidity',\n          action: 'Remove',\n          label: [currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol].join('/')\n        });\n      }).catch(error => {\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        console.error(error);\n      });\n    }\n  }\n\n  function modalHeader() {\n    var _parsedAmounts$Field$10, _parsedAmounts$Field$11;\n\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: 'md',\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 24,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$10 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$10 === void 0 ? void 0 : _parsedAmounts$Field$10.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyA,\n            size: '24px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 24,\n            fontWeight: 500,\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(Plus, {\n          size: \"16\",\n          color: theme.text2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 24,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$11 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyB,\n            size: '24px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 24,\n            fontWeight: 500,\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.italic, {\n        fontSize: 12,\n        color: theme.text2,\n        textAlign: \"left\",\n        padding: '12px 0 0 0',\n        children: `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this);\n  }\n\n  function modalBottom() {\n    var _parsedAmounts$Field$12;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: theme.text2,\n          fontWeight: 500,\n          fontSize: 16,\n          children: ['UNI ' + (currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol) + '/' + (currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol), \" Burned\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencyA,\n            currency1: currencyB,\n            margin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            children: (_parsedAmounts$Field$12 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), pair && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: theme.text2,\n            fontWeight: 500,\n            fontSize: 16,\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            color: theme.text1,\n            children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            color: theme.text1,\n            children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n        onClick: onRemove,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          fontSize: 20,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const pendingText = `Removing ${(_parsedAmounts$Field$13 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$13 === void 0 ? void 0 : _parsedAmounts$Field$13.toSignificant(6)} ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol} and ${(_parsedAmounts$Field$14 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$14 === void 0 ? void 0 : _parsedAmounts$Field$14.toSignificant(6)} ${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol}`;\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER;\n  const oneCurrencyIsWETH = Boolean(chainId && (currencyA && currencyEquals(WETH[chainId], currencyA) || currencyB && currencyEquals(WETH[chainId], currencyB)));\n  const handleSelectCurrencyA = useCallback(currency => {\n    if (currencyIdB && currencyId(currency) === currencyIdB) {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdA}`);\n    } else {\n      history.push(`/remove/${currencyId(currency)}/${currencyIdB}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleSelectCurrencyB = useCallback(currency => {\n    if (currencyIdA && currencyId(currency) === currencyIdA) {\n      history.push(`/remove/${currencyIdB}/${currencyId(currency)}`);\n    } else {\n      history.push(`/remove/${currencyIdA}/${currencyId(currency)}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    setSignatureData(null); // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        creating: false,\n        adding: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n          isOpen: showConfirm,\n          onDismiss: handleDismissConfirmation,\n          attemptingTxn: attemptingTxn,\n          hash: txHash ? txHash : '',\n          content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: 'You will receive',\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this),\n          pendingText: pendingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(BlueCard, {\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"10px\",\n              children: /*#__PURE__*/_jsxDEV(TYPE.link, {\n                fontWeight: 400,\n                color: 'primaryText1',\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Tip:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), \" Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"20px\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  onClick: () => {\n                    setShowDetailed(!showDetailed);\n                  },\n                  children: showDetailed ? 'Simple' : 'Detailed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                style: {\n                  alignItems: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 72,\n                  fontWeight: 500,\n                  children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Slider, {\n                  value: innerLiquidityPercentage,\n                  onChange: setInnerLiquidityPercentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '25'),\n                    width: \"20%\",\n                    children: \"25%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '50'),\n                    width: \"20%\",\n                    children: \"50%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '75'),\n                    width: \"20%\",\n                    children: \"75%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                    width: \"20%\",\n                    children: \"Max\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 24,\n                    fontWeight: 500,\n                    children: formattedAmounts[Field.CURRENCY_A] || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                      currency: currencyA,\n                      style: {\n                        marginRight: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 24,\n                      fontWeight: 500,\n                      id: \"remove-liquidity-tokena-symbol\",\n                      children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 24,\n                    fontWeight: 500,\n                    children: formattedAmounts[Field.CURRENCY_B] || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                      currency: currencyB,\n                      style: {\n                        marginRight: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 24,\n                      fontWeight: 500,\n                      id: \"remove-liquidity-tokenb-symbol\",\n                      children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                  style: {\n                    justifyContent: 'flex-end'\n                  },\n                  children: oneCurrencyIsETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    to: `/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${currencyB === ETHER ? WETH[chainId].address : currencyIdB}`,\n                    children: \"Receive WETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 27\n                  }, this) : oneCurrencyIsWETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    to: `/remove/${currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'ETH' : currencyIdA}/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'ETH' : currencyIdB}`,\n                    children: \"Receive ETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 27\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 572,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.LIQUIDITY],\n              onUserInput: onLiquidityInput,\n              onMax: () => {\n                onUserInput(Field.LIQUIDITY_PERCENT, '100');\n              },\n              showMaxButton: !atMaxAmount,\n              disableCurrencySelect: true,\n              currency: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n              pair: pair,\n              id: \"liquidity-amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              hideBalance: true,\n              value: formattedAmounts[Field.CURRENCY_A],\n              onUserInput: onCurrencyAInput,\n              onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n              showMaxButton: !atMaxAmount,\n              currency: currencyA,\n              label: 'Output',\n              onCurrencySelect: handleSelectCurrencyA,\n              id: \"remove-liquidity-tokena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              hideBalance: true,\n              value: formattedAmounts[Field.CURRENCY_B],\n              onUserInput: onCurrencyBInput,\n              onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n              showMaxButton: !atMaxAmount,\n              currency: currencyB,\n              label: 'Output',\n              onCurrencySelect: handleSelectCurrencyB,\n              id: \"remove-liquidity-tokenb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), pair && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '10px 20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n              onClick: toggleWalletModal,\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                onClick: onAttemptToApprove,\n                confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n                disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n                mr: \"0.5rem\",\n                fontWeight: 500,\n                fontSize: 16,\n                children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: \"Approving\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 23\n                }, this) : approval === ApprovalState.APPROVED || signatureData !== null ? 'Approved' : 'Approve'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                onClick: () => {\n                  setShowConfirm(true);\n                },\n                disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n                error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 16,\n                  fontWeight: 500,\n                  children: error || 'Remove'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 685,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), pair ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(RemoveLiquidity, \"jU/F/XT2i2x5e2TiInOgRkpTNvM=\", false, function () {\n  return [useCurrency, useCurrency, useActiveWeb3React, useWalletModalToggle, useBurnState, useDerivedBurnInfo, useBurnActionHandlers, useTransactionDeadline, useUserSlippageTolerance, usePairContract, useApproveCallback, useIsArgentWallet, useTransactionAdder, useDebouncedChangeHandler];\n});\n\n_c = RemoveLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveLiquidity\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/RemoveLiquidity/index.tsx"],"names":["splitSignature","currencyEquals","ETHER","Percent","WETH","React","useCallback","useContext","useMemo","useState","ArrowDown","Plus","ReactGA","Text","ThemeContext","ButtonPrimary","ButtonLight","ButtonError","ButtonConfirmed","BlueCard","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFixed","Slider","CurrencyLogo","ROUTER_ADDRESS","useActiveWeb3React","useCurrency","usePairContract","useIsArgentWallet","useTransactionDeadline","useTransactionAdder","StyledInternalLink","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","currencyId","useDebouncedChangeHandler","wrappedCurrency","AppBody","ClickableText","MaxButton","Wrapper","useApproveCallback","ApprovalState","Dots","useBurnActionHandlers","useDerivedBurnInfo","useBurnState","Field","useWalletModalToggle","useUserSlippageTolerance","BigNumber","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","currencyA","currencyB","undefined","account","chainId","library","tokenA","tokenB","theme","toggleWalletModal","independentField","typedValue","pair","parsedAmounts","error","onUserInput","_onUserInput","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","atMaxAmount","pairContract","liquidityToken","address","signatureData","setSignatureData","approval","approveCallback","isArgentWallet","onAttemptToApprove","Error","liquidityAmount","nonce","nonces","EIP712Domain","name","type","domain","version","verifyingContract","Permit","message","owner","spender","value","raw","toString","toHexString","toNumber","data","JSON","stringify","types","primaryType","send","then","signature","v","r","s","catch","code","field","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","onRemove","currencyAmountA","currencyAmountB","router","amountsMin","currencyBIsETH","oneCurrencyIsETH","methodNames","args","APPROVED","safeGasEstimates","Promise","all","map","methodName","estimateGas","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","summary","symbol","hash","event","category","action","label","join","modalHeader","marginTop","marginLeft","text2","modalBottom","text1","priceOf","pendingText","liquidityPercentChangeCallback","oneCurrencyIsWETH","Boolean","handleSelectCurrencyA","currency","push","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","alignItems","marginRight","justifyContent","padding","position","NOT_APPROVED","PENDING","minWidth","width","maxWidth"],"mappings":"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","sourcesContent":["import { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@uniswap/sdk'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { ArrowDown, Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { ButtonPrimary, ButtonLight, ButtonError, ButtonConfirmed } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\n\nimport Slider from '../../components/Slider'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { usePairContract } from '../../hooks/useContract'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { StyledInternalLink, TYPE } from '../../theme'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { currencyId } from '../../utils/currencyId'\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport { Dots } from '../../components/swap/styleds'\nimport { useBurnActionHandlers } from '../../state/burn/hooks'\nimport { useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\nimport { Field } from '../../state/burn/actions'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\nimport { BigNumber } from '@ethersproject/bignumber'\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB }\n  }\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\n    currencyA,\n    currencyB,\n    chainId\n  ])\n\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? ''\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\n\n  const isArgentWallet = useIsArgentWallet()\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (isArgentWallet) {\n      return approveCallback()\n    }\n\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' }\n    ]\n    const domain = {\n      name: 'Uniswap V2',\n      version: '1',\n      chainId: chainId,\n      verifyingContract: pair.liquidityToken.address\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' }\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadline.toNumber()\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit\n      },\n      domain,\n      primaryType: 'Permit',\n      message\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then(signature => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadline.toNumber()\n        })\n      })\n      .catch(error => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (error?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback((typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue), [\n    onUserInput\n  ])\n  const onCurrencyAInput = useCallback((typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue), [\n    onUserInput\n  ])\n  const onCurrencyBInput = useCallback((typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue), [\n    onUserInput\n  ])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString()\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString()\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map(methodName =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch(error => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary:\n              'Remove ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencyA?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencyB?.symbol\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Remove',\n            label: [currencyA?.symbol, currencyB?.symbol].join('/')\n          })\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size={'24px'} />\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.text2} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size={'24px'} />\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <TYPE.italic fontSize={12} color={theme.text2} textAlign=\"left\" padding={'12px 0 0 0'}>\n          {`Output is estimated. If the price changes by more than ${allowedSlippage /\n            100}% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color={theme.text2} fontWeight={500} fontSize={16}>\n            {'UNI ' + currencyA?.symbol + '/' + currencyB?.symbol} Burned\n          </Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\n            <Text fontWeight={500} fontSize={16}>\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color={theme.text2} fontWeight={500} fontSize={16}>\n                Price\n              </Text>\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          <Text fontWeight={500} fontSize={20}>\n            Confirm\n          </Text>\n        </ButtonPrimary>\n      </>\n    )\n  }\n\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencyA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={false} adding={false} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash ? txHash : ''}\n            content={() => (\n              <ConfirmationModalContent\n                title={'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <BlueCard>\n              <AutoColumn gap=\"10px\">\n                <TYPE.link fontWeight={400} color={'primaryText1'}>\n                  <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\n                  rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\n                </TYPE.link>\n              </AutoColumn>\n            </BlueCard>\n            <LightCard>\n              <AutoColumn gap=\"20px\">\n                <RowBetween>\n                  <Text fontWeight={500}>Amount</Text>\n                  <ClickableText\n                    fontWeight={500}\n                    onClick={() => {\n                      setShowDetailed(!showDetailed)\n                    }}\n                  >\n                    {showDetailed ? 'Simple' : 'Detailed'}\n                  </ClickableText>\n                </RowBetween>\n                <Row style={{ alignItems: 'flex-end' }}>\n                  <Text fontSize={72} fontWeight={500}>\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                  </Text>\n                </Row>\n                {!showDetailed && (\n                  <>\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                    <RowBetween>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\n                        25%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\n                        50%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\n                        75%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\n                        Max\n                      </MaxButton>\n                    </RowBetween>\n                  </>\n                )}\n              </AutoColumn>\n            </LightCard>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <LightCard>\n                  <AutoColumn gap=\"10px\">\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={500}>\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokena-symbol\">\n                          {currencyA?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={500}>\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokenb-symbol\">\n                          {currencyB?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\n                        {oneCurrencyIsETH ? (\n                          <StyledInternalLink\n                            to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                              currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                            }`}\n                          >\n                            Receive WETH\n                          </StyledInternalLink>\n                        ) : oneCurrencyIsWETH ? (\n                          <StyledInternalLink\n                            to={`/remove/${\n                              currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'ETH' : currencyIdA\n                            }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'ETH' : currencyIdB}`}\n                          >\n                            Receive ETH\n                          </StyledInternalLink>\n                        ) : null}\n                      </RowBetween>\n                    ) : null}\n                  </AutoColumn>\n                </LightCard>\n              </>\n            )}\n\n            {showDetailed && (\n              <>\n                <CurrencyInputPanel\n                  value={formattedAmounts[Field.LIQUIDITY]}\n                  onUserInput={onLiquidityInput}\n                  onMax={() => {\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                  }}\n                  showMaxButton={!atMaxAmount}\n                  disableCurrencySelect\n                  currency={pair?.liquidityToken}\n                  pair={pair}\n                  id=\"liquidity-amount\"\n                />\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onCurrencyAInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyA}\n                  label={'Output'}\n                  onCurrencySelect={handleSelectCurrencyA}\n                  id=\"remove-liquidity-tokena\"\n                />\n                <ColumnCenter>\n                  <Plus size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onCurrencyBInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyB}\n                  label={'Output'}\n                  onCurrencySelect={handleSelectCurrencyB}\n                  id=\"remove-liquidity-tokenb\"\n                />\n              </>\n            )}\n            {pair && (\n              <div style={{ padding: '10px 20px' }}>\n                <RowBetween>\n                  Price:\n                  <div>\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </div>\n                </RowBetween>\n                <RowBetween>\n                  <div />\n                  <div>\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </div>\n                </RowBetween>\n              </div>\n            )}\n            <div style={{ position: 'relative' }}>\n              {!account ? (\n                <ButtonLight onClick={toggleWalletModal}>Connect Wallet</ButtonLight>\n              ) : (\n                <RowBetween>\n                  <ButtonConfirmed\n                    onClick={onAttemptToApprove}\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    mr=\"0.5rem\"\n                    fontWeight={500}\n                    fontSize={16}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <Dots>Approving</Dots>\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                      'Approved'\n                    ) : (\n                      'Approve'\n                    )}\n                  </ButtonConfirmed>\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={16} fontWeight={500}>\n                      {error || 'Remove'}\n                    </Text>\n                  </ButtonError>\n                </RowBetween>\n              )}\n            </div>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}