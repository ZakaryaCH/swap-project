{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Popups/ClaimPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { X } from 'react-feather';\nimport styled, { keyframes } from 'styled-components';\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { ButtonPrimary } from '../../components/Button';\nimport { useActiveWeb3React } from '../../hooks';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useShowClaimPopup, useToggleSelfClaimModal, useToggleShowClaimPopup } from '../../state/application/hooks';\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks';\nimport { TYPE } from '../../theme';\nimport { AutoColumn } from '../Column';\nimport { CardBGImage, CardNoise } from '../earn/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`;\n_c = StyledClaimPopup;\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c2 = StyledClose;\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`;\n_c3 = UniToken;\nexport default function ClaimPopup() {\n  _s();\n\n  var _groupSeparator;\n\n  const {\n    account\n  } = useActiveWeb3React(); // dont store these in persisted state yet\n\n  const showClaimPopup = useShowClaimPopup();\n  const toggleShowClaimPopup = useToggleShowClaimPopup(); // toggle for showing this modal\n\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM);\n  const toggleSelfClaimModal = useToggleSelfClaimModal(); // const userHasAvailableclaim = useUserHasAvailableClaim()\n\n  const userHasAvailableclaim = useUserHasAvailableClaim(account);\n  const unclaimedAmount = useUserUnclaimedAmount(account); // listen for available claim and show popup if needed\n\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup();\n    } // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [userHasAvailableclaim]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showClaimPopup && !showClaimModal && /*#__PURE__*/_jsxDEV(StyledClaimPopup, {\n      gap: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledClose, {\n        stroke: \"white\",\n        onClick: toggleShowClaimPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        style: {\n          padding: '2rem 0',\n          zIndex: 10\n        },\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(UniToken, {\n          width: \"48px\",\n          src: tokenLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(TYPE.white, {\n          style: {\n            marginTop: '1rem'\n          },\n          fontSize: 36,\n          fontWeight: 600,\n          children: [unclaimedAmount === null || unclaimedAmount === void 0 ? void 0 : unclaimedAmount.toFixed(0, (_groupSeparator = {\n            groupSeparator: ','\n          }) !== null && _groupSeparator !== void 0 ? _groupSeparator : '-'), \" UNI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.white, {\n          style: {\n            paddingTop: '1.25rem',\n            textAlign: 'center'\n          },\n          fontWeight: 600,\n          color: \"white\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"party\",\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), ' ', \"UNI has arrived\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"party\",\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.subHeader, {\n          style: {\n            paddingTop: '0.5rem',\n            textAlign: 'center'\n          },\n          color: \"white\",\n          children: `Thanks for being part of the Uniswap community <3`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        style: {\n          zIndex: 10\n        },\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          borderRadius: \"8px\",\n          width: 'fit-content',\n          onClick: toggleSelfClaimModal,\n          children: \"Claim your POGO tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimPopup, \"NdhxLmPueLZbvFskvqroyAzMm+Q=\", false, function () {\n  return [useActiveWeb3React, useShowClaimPopup, useToggleShowClaimPopup, useModalOpen, useToggleSelfClaimModal, useUserHasAvailableClaim, useUserUnclaimedAmount];\n});\n\n_c4 = ClaimPopup;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledClaimPopup\");\n$RefreshReg$(_c2, \"StyledClose\");\n$RefreshReg$(_c3, \"UniToken\");\n$RefreshReg$(_c4, \"ClaimPopup\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Popups/ClaimPopup.tsx"],"names":["React","useEffect","X","styled","keyframes","tokenLogo","ButtonPrimary","useActiveWeb3React","ApplicationModal","useModalOpen","useShowClaimPopup","useToggleSelfClaimModal","useToggleShowClaimPopup","useUserHasAvailableClaim","useUserUnclaimedAmount","TYPE","AutoColumn","CardBGImage","CardNoise","StyledClaimPopup","StyledClose","rotate","UniToken","img","ClaimPopup","account","showClaimPopup","toggleShowClaimPopup","showClaimModal","SELF_CLAIM","toggleSelfClaimModal","userHasAvailableclaim","unclaimedAmount","padding","zIndex","marginTop","toFixed","groupSeparator","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import { TokenAmount } from '@uniswap/sdk'\nimport React, { useEffect } from 'react'\nimport { X } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { ButtonPrimary } from '../../components/Button'\nimport { useActiveWeb3React } from '../../hooks'\nimport { ApplicationModal } from '../../state/application/actions'\nimport {\n  useModalOpen,\n  useShowClaimPopup,\n  useToggleSelfClaimModal,\n  useToggleShowClaimPopup\n} from '../../state/application/hooks'\n\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { TYPE } from '../../theme'\nimport { AutoColumn } from '../Column'\nimport { CardBGImage, CardNoise } from '../earn/styled'\n\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`\n\nexport default function ClaimPopup() {\n  const { account } = useActiveWeb3React()\n\n  // dont store these in persisted state yet\n  const showClaimPopup: boolean = useShowClaimPopup()\n  const toggleShowClaimPopup = useToggleShowClaimPopup()\n\n  // toggle for showing this modal\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleSelfClaimModal = useToggleSelfClaimModal()\n\n  // const userHasAvailableclaim = useUserHasAvailableClaim()\n  const userHasAvailableclaim: boolean = useUserHasAvailableClaim(account)\n  const unclaimedAmount: TokenAmount | undefined = useUserUnclaimedAmount(account)\n\n  // listen for available claim and show popup if needed\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      toggleShowClaimPopup()\n    }\n    // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userHasAvailableclaim])\n\n  return (\n    <>\n      {showClaimPopup && !showClaimModal && (\n        <StyledClaimPopup gap=\"md\">\n          <CardBGImage />\n          <CardNoise />\n          <StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} />\n          <AutoColumn style={{ padding: '2rem 0', zIndex: 10 }} justify=\"center\">\n            <UniToken width=\"48px\" src={tokenLogo} />{' '}\n            <TYPE.white style={{ marginTop: '1rem' }} fontSize={36} fontWeight={600}>\n              {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n            </TYPE.white>\n            <TYPE.white style={{ paddingTop: '1.25rem', textAlign: 'center' }} fontWeight={600} color=\"white\">\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>{' '}\n              UNI has arrived{' '}\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>\n            </TYPE.white>\n            <TYPE.subHeader style={{ paddingTop: '0.5rem', textAlign: 'center' }} color=\"white\">\n              {`Thanks for being part of the Uniswap community <3`}\n            </TYPE.subHeader>\n          </AutoColumn>\n          <AutoColumn style={{ zIndex: 10 }} justify=\"center\">\n            <ButtonPrimary padding=\"8px\" borderRadius=\"8px\" width={'fit-content'} onClick={toggleSelfClaimModal}>\n              Claim your POGO tokens\n            </ButtonPrimary>\n          </AutoColumn>\n        </StyledClaimPopup>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}