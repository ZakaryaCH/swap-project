{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/earn/PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween } from \"../Row\";\nimport styled from \"styled-components\";\nimport { TYPE, StyledInternalLink } from \"../../theme\";\nimport DoubleCurrencyLogo from \"../DoubleLogo\";\nimport { ETHER, JSBI, TokenAmount } from \"@uniswap/sdk\";\nimport { ButtonPrimary } from \"../Button\";\nimport { useColor } from \"../../hooks/useColor\";\nimport { currencyId } from \"../../utils/currencyId\";\nimport { Break, CardNoise, CardBGImage } from \"./styled\"; // import { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { usePair } from \"../../data/Reserves\";\nimport useUSDCPrice from \"../../utils/useUSDCPrice\";\nimport { BIG_INT_SECONDS_IN_WEEK } from \"../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n  display: none;\n`};\n`;\n_c = StatContainer;\nconst Wrapper = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({\n  showBackground\n}) => showBackground ? \"1\" : \"1\"};\n  background: ${({\n  theme,\n  bgColor,\n  showBackground\n}) => `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n  color: ${({\n  theme,\n  showBackground\n}) => showBackground ? theme.white : theme.text1} !important;\n\n  ${({\n  showBackground\n}) => showBackground && `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`;\n_c2 = Wrapper;\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 48px 1fr 96px;\n  `};\n`;\n_c3 = TopSection;\nconst BottomSection = styled.div`\n  padding: 12px 16px;\n  opacity: ${({\n  showBackground\n}) => showBackground ? \"1\" : \"0.4\"};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`;\n_c4 = BottomSection;\nexport default function PoolCard({\n  stakingInfo\n}) {\n  _s();\n\n  var _valueOfTotalStakedAm, _valueOfTotalStakedAm2, _stakingInfo$totalRew, _stakingInfo$totalRew2, _stakingInfo$rewardRa, _stakingInfo$rewardRa2;\n\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan(\"0\")); // get the color of the token\n\n  const token = currency0 === ETHER ? token1 : token0;\n  const WETH = currency0 === ETHER ? token0 : token1;\n  const backgroundColor = useColor(token);\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo.stakedAmount.token);\n  const [, stakingTokenPair] = usePair(...stakingInfo.tokens); // let returnOverMonth: Percent = new Percent('0')\n\n  let valueOfTotalStakedAmountInWETH;\n\n  if (totalSupplyOfStakingToken && stakingTokenPair) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = new TokenAmount(WETH, JSBI.divide(JSBI.multiply(JSBI.multiply(stakingInfo.totalStakedAmount.raw, stakingTokenPair.reserveOf(WETH).raw), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n    ), totalSupplyOfStakingToken.raw));\n  } // get the USD value of staked WETH\n\n\n  const USDPrice = useUSDCPrice(WETH);\n  const valueOfTotalStakedAmountInUSDC = valueOfTotalStakedAmountInWETH && (USDPrice === null || USDPrice === void 0 ? void 0 : USDPrice.quote(valueOfTotalStakedAmountInWETH));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    showBackground: isStaking,\n    bgColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n      desaturate: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n        currency0: currency0,\n        currency1: currency1,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.white, {\n        fontWeight: 600,\n        fontSize: 24,\n        style: {\n          marginLeft: \"8px\"\n        },\n        children: [currency0.symbol, \"-\", currency1.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n        to: `/uni/${currencyId(currency0)}/${currencyId(currency1)}`,\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          borderRadius: \"8px\",\n          children: isStaking ? \"Manage\" : \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.white, {\n          children: \" Total deposited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.white, {\n          children: valueOfTotalStakedAmountInUSDC ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, {\n            groupSeparator: \",\"\n          })}` : `${(_valueOfTotalStakedAm = (_valueOfTotalStakedAm2 = valueOfTotalStakedAmountInWETH) === null || _valueOfTotalStakedAm2 === void 0 ? void 0 : _valueOfTotalStakedAm2.toSignificant(4, {\n            groupSeparator: \",\"\n          })) !== null && _valueOfTotalStakedAm !== void 0 ? _valueOfTotalStakedAm : \"-\"} ETH`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.white, {\n          children: \" Pool rate \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.white, {\n          children: stakingInfo ? stakingInfo.active ? `${(_stakingInfo$totalRew = stakingInfo.totalRewardRate) === null || _stakingInfo$totalRew === void 0 ? void 0 : (_stakingInfo$totalRew2 = _stakingInfo$totalRew.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$totalRew2 === void 0 ? void 0 : _stakingInfo$totalRew2.toFixed(0, {\n            groupSeparator: \",\"\n          })} POGO / week` : \"0 POGO / week\" : \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), isStaking && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BottomSection, {\n        showBackground: true,\n        children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n          color: \"white\",\n          fontWeight: 500,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n          style: {\n            textAlign: \"right\"\n          },\n          color: \"white\",\n          fontWeight: 500,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"wizard-icon\",\n            style: {\n              marginRight: \"0.5rem\"\n            },\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), stakingInfo ? stakingInfo.active ? `${(_stakingInfo$rewardRa = stakingInfo.rewardRate) === null || _stakingInfo$rewardRa === void 0 ? void 0 : (_stakingInfo$rewardRa2 = _stakingInfo$rewardRa.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : _stakingInfo$rewardRa2.toSignificant(4, {\n            groupSeparator: \",\"\n          })} UNI / week` : \"0 UNI / week\" : \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolCard, \"acaRkjFo+BNkV8wBtIV3VrN0EQM=\", false, function () {\n  return [useColor, useTotalSupply, usePair, useUSDCPrice];\n});\n\n_c5 = PoolCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StatContainer\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"TopSection\");\n$RefreshReg$(_c4, \"BottomSection\");\n$RefreshReg$(_c5, \"PoolCard\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/earn/PoolCard.tsx"],"names":["React","AutoColumn","RowBetween","styled","TYPE","StyledInternalLink","DoubleCurrencyLogo","ETHER","JSBI","TokenAmount","ButtonPrimary","useColor","currencyId","Break","CardNoise","CardBGImage","useTotalSupply","usePair","useUSDCPrice","BIG_INT_SECONDS_IN_WEEK","StatContainer","div","theme","mediaWidth","upToSmall","Wrapper","showBackground","bgColor","black","bg5","white","text1","TopSection","BottomSection","PoolCard","stakingInfo","token0","tokens","token1","currency0","unwrappedToken","currency1","isStaking","Boolean","stakedAmount","greaterThan","token","WETH","backgroundColor","totalSupplyOfStakingToken","stakingTokenPair","valueOfTotalStakedAmountInWETH","divide","multiply","totalStakedAmount","raw","reserveOf","BigInt","USDPrice","valueOfTotalStakedAmountInUSDC","quote","marginLeft","symbol","width","toFixed","groupSeparator","toSignificant","active","totalRewardRate","textAlign","marginRight","rewardRate"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween } from \"../Row\";\nimport styled from \"styled-components\";\nimport { TYPE, StyledInternalLink } from \"../../theme\";\nimport DoubleCurrencyLogo from \"../DoubleLogo\";\nimport { ETHER, JSBI, TokenAmount } from \"@uniswap/sdk\";\nimport { ButtonPrimary } from \"../Button\";\nimport { StakingInfo } from \"../../state/stake/hooks\";\nimport { useColor } from \"../../hooks/useColor\";\nimport { currencyId } from \"../../utils/currencyId\";\nimport { Break, CardNoise, CardBGImage } from \"./styled\";\n// import { unwrappedToken } from '../../utils/wrappedCurrency'\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { usePair } from \"../../data/Reserves\";\nimport useUSDCPrice from \"../../utils/useUSDCPrice\";\nimport { BIG_INT_SECONDS_IN_WEEK } from \"../../constants\";\n\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n  display: none;\n`};\n`;\n\nconst Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({ showBackground }) => (showBackground ? \"1\" : \"1\")};\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${\n      showBackground ? theme.black : theme.bg5\n    } 100%) `};\n  color: ${({ theme, showBackground }) =>\n    showBackground ? theme.white : theme.text1} !important;\n\n  ${({ showBackground }) =>\n    showBackground &&\n    `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`;\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 48px 1fr 96px;\n  `};\n`;\n\nconst BottomSection = styled.div<{ showBackground: boolean }>`\n  padding: 12px 16px;\n  opacity: ${({ showBackground }) => (showBackground ? \"1\" : \"0.4\")};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`;\n\nexport default function PoolCard({\n  stakingInfo,\n}: {\n  stakingInfo: StakingInfo;\n}) {\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan(\"0\"));\n\n  // get the color of the token\n  const token = currency0 === ETHER ? token1 : token0;\n  const WETH = currency0 === ETHER ? token0 : token1;\n  const backgroundColor = useColor(token);\n\n  const totalSupplyOfStakingToken = useTotalSupply(\n    stakingInfo.stakedAmount.token\n  );\n  const [, stakingTokenPair] = usePair(...stakingInfo.tokens);\n\n  // let returnOverMonth: Percent = new Percent('0')\n  let valueOfTotalStakedAmountInWETH: TokenAmount | undefined;\n  if (totalSupplyOfStakingToken && stakingTokenPair) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = new TokenAmount(\n      WETH,\n      JSBI.divide(\n        JSBI.multiply(\n          JSBI.multiply(\n            stakingInfo.totalStakedAmount.raw,\n            stakingTokenPair.reserveOf(WETH).raw\n          ),\n          JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n        ),\n        totalSupplyOfStakingToken.raw\n      )\n    );\n  }\n\n  // get the USD value of staked WETH\n  const USDPrice = useUSDCPrice(WETH);\n  const valueOfTotalStakedAmountInUSDC =\n    valueOfTotalStakedAmountInWETH &&\n    USDPrice?.quote(valueOfTotalStakedAmountInWETH);\n\n  return (\n    <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n      <CardBGImage desaturate />\n      <CardNoise />\n\n      <TopSection>\n        <DoubleCurrencyLogo\n          currency0={currency0}\n          currency1={currency1}\n          size={24}\n        />\n        <TYPE.white\n          fontWeight={600}\n          fontSize={24}\n          style={{ marginLeft: \"8px\" }}\n        >\n          {currency0.symbol}-{currency1.symbol}\n        </TYPE.white>\n\n        <StyledInternalLink\n          to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n          style={{ width: \"100%\" }}\n        >\n          <ButtonPrimary padding=\"8px\" borderRadius=\"8px\">\n            {isStaking ? \"Manage\" : \"Deposit\"}\n          </ButtonPrimary>\n        </StyledInternalLink>\n      </TopSection>\n\n      <StatContainer>\n        <RowBetween>\n          <TYPE.white> Total deposited</TYPE.white>\n          <TYPE.white>\n            {valueOfTotalStakedAmountInUSDC\n              ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, {\n                  groupSeparator: \",\",\n                })}`\n              : `${\n                  valueOfTotalStakedAmountInWETH?.toSignificant(4, {\n                    groupSeparator: \",\",\n                  }) ?? \"-\"\n                } ETH`}\n          </TYPE.white>\n        </RowBetween>\n        <RowBetween>\n          <TYPE.white> Pool rate </TYPE.white>\n          <TYPE.white>\n            {stakingInfo\n              ? stakingInfo.active\n                ? `${stakingInfo.totalRewardRate\n                    ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n                    ?.toFixed(0, { groupSeparator: \",\" })} POGO / week`\n                : \"0 POGO / week\"\n              : \"-\"}\n          </TYPE.white>\n        </RowBetween>\n      </StatContainer>\n\n      {isStaking && (\n        <>\n          <Break />\n          <BottomSection showBackground={true}>\n            <TYPE.black color={\"white\"} fontWeight={500}>\n              <span>Your rate</span>\n            </TYPE.black>\n\n            <TYPE.black\n              style={{ textAlign: \"right\" }}\n              color={\"white\"}\n              fontWeight={500}\n            >\n              <span\n                role=\"img\"\n                aria-label=\"wizard-icon\"\n                style={{ marginRight: \"0.5rem\" }}\n              >\n                ⚡\n              </span>\n              {stakingInfo\n                ? stakingInfo.active\n                  ? `${stakingInfo.rewardRate\n                      ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n                      ?.toSignificant(4, { groupSeparator: \",\" })} UNI / week`\n                  : \"0 UNI / week\"\n                : \"-\"}\n            </TYPE.black>\n          </BottomSection>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}