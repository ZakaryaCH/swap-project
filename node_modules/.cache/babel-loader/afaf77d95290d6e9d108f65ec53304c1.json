{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { JSBI, Token } from \"@uniswap/sdk\";\nimport React, { useCallback, useContext, useMemo, useState, useEffect } from \"react\";\nimport { ThemeContext } from \"styled-components\";\nimport { AutoColumn } from \"../../components/Column\";\nimport { AutoRow } from \"../../components/Row\";\nimport { SearchInput } from \"../../components/SearchModal/styleds\";\nimport { useAllTokenV1Exchanges } from \"../../data/V1\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { useTokenBalancesWithLoadingIndicator } from \"../../state/wallet/hooks\";\nimport { BackArrow, TYPE } from \"../../theme\";\nimport { LightCard } from \"../../components/Card\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\nimport V1PositionCard from \"../../components/PositionCard/V1\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { useAddUserToken } from \"../../state/user/hooks\";\nimport { isTokenOnList } from \"../../utils\";\nimport { useCombinedActiveList } from \"../../state/lists/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MigrateV1() {\n  _s();\n\n  var _Object$keys;\n\n  const theme = useContext(ThemeContext);\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const [tokenSearch, setTokenSearch] = useState(\"\");\n  const handleTokenSearchChange = useCallback(e => setTokenSearch(e.target.value), [setTokenSearch]); // automatically add the search token\n\n  const token = useToken(tokenSearch);\n  const selectedTokenListTokens = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenListTokens, token !== null && token !== void 0 ? token : undefined);\n  const allTokens = useAllTokens();\n  const addToken = useAddUserToken();\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token);\n    }\n  }, [token, isOnSelectedList, addToken, allTokens]); // get V1 LP balances\n\n  const V1Exchanges = useAllTokenV1Exchanges();\n  const V1LiquidityTokens = useMemo(() => {\n    return chainId ? Object.keys(V1Exchanges).map(exchangeAddress => new Token(chainId, exchangeAddress, 18, \"UNI-V1\", \"Uniswap V1\")) : [];\n  }, [chainId, V1Exchanges]);\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, V1LiquidityTokens);\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(V1LiquidityToken => {\n    const balance = V1LiquidityBalances === null || V1LiquidityBalances === void 0 ? void 0 : V1LiquidityBalances[V1LiquidityToken.address];\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0));\n  }).map(V1LiquidityToken => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address];\n    return balance ? /*#__PURE__*/_jsxDEV(V1PositionCard, {\n      token: V1Exchanges[V1LiquidityToken.address],\n      V1LiquidityBalance: balance\n    }, V1LiquidityToken.address, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this) : null;\n  }); // should never always be false, because a V1 exhchange exists for WETH on all testnets\n\n  const isLoading = ((_Object$keys = Object.keys(V1Exchanges)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) === 0 || V1LiquidityBalancesLoading;\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Migrate V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: \"For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap V2.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(LightCard, {\n        padding: \"40px\",\n        children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n          color: theme.text3,\n          textAlign: \"center\",\n          children: \"Connect to a wallet to view your V1 liquidity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(LightCard, {\n        padding: \"40px\",\n        children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n          color: theme.text3,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Dots, {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            value: tokenSearch,\n            onChange: handleTokenSearchChange,\n            placeholder: \"Enter a token address to find liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), (allV1PairsWithLiquidity === null || allV1PairsWithLiquidity === void 0 ? void 0 : allV1PairsWithLiquidity.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: allV1PairsWithLiquidity\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(EmptyState, {\n          message: \"No V1 Liquidity found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MigrateV1, \"tIGJnKA2xr5yJ9wpoZNLxoHMfFY=\", true, function () {\n  return [useActiveWeb3React, useToken, useCombinedActiveList, useAddUserToken, useAllTokenV1Exchanges, useTokenBalancesWithLoadingIndicator];\n});\n\n_c = MigrateV1;\n\nvar _c;\n\n$RefreshReg$(_c, \"MigrateV1\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useMemo","useState","useEffect","ThemeContext","AutoColumn","AutoRow","SearchInput","useAllTokenV1Exchanges","useActiveWeb3React","useToken","useTokenBalancesWithLoadingIndicator","BackArrow","TYPE","LightCard","BodyWrapper","EmptyState","V1PositionCard","QuestionHelper","Dots","useAddUserToken","isTokenOnList","useCombinedActiveList","MigrateV1","theme","account","chainId","tokenSearch","setTokenSearch","handleTokenSearchChange","e","target","value","token","selectedTokenListTokens","isOnSelectedList","undefined","allTokens","useAllTokens","addToken","address","V1Exchanges","V1LiquidityTokens","Object","keys","map","exchangeAddress","V1LiquidityBalances","V1LiquidityBalancesLoading","allV1PairsWithLiquidity","filter","V1LiquidityToken","balance","greaterThan","raw","BigInt","isLoading","length","padding","alignItems","justifyContent","marginBottom","fontWeight","text3"],"mappings":"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","sourcesContent":["import { JSBI, Token } from \"@uniswap/sdk\";\nimport React, {\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  useEffect,\n} from \"react\";\nimport { ThemeContext } from \"styled-components\";\nimport { AutoColumn } from \"../../components/Column\";\nimport { AutoRow } from \"../../components/Row\";\nimport { SearchInput } from \"../../components/SearchModal/styleds\";\nimport { useAllTokenV1Exchanges } from \"../../data/V1\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { useTokenBalancesWithLoadingIndicator } from \"../../state/wallet/hooks\";\nimport { BackArrow, TYPE } from \"../../theme\";\nimport { LightCard } from \"../../components/Card\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\nimport V1PositionCard from \"../../components/PositionCard/V1\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { useAddUserToken } from \"../../state/user/hooks\";\nimport { isTokenOnList } from \"../../utils\";\nimport { useCombinedActiveList } from \"../../state/lists/hooks\";\n\nexport default function MigrateV1() {\n  const theme = useContext(ThemeContext);\n  const { account, chainId } = useActiveWeb3React();\n\n  const [tokenSearch, setTokenSearch] = useState<string>(\"\");\n  const handleTokenSearchChange = useCallback(\n    (e) => setTokenSearch(e.target.value),\n    [setTokenSearch]\n  );\n\n  // automatically add the search token\n  const token = useToken(tokenSearch);\n  const selectedTokenListTokens = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(\n    selectedTokenListTokens,\n    token ?? undefined\n  );\n  const allTokens = useAllTokens();\n  const addToken = useAddUserToken();\n  useEffect(() => {\n    if (token && !isOnSelectedList && !allTokens[token.address]) {\n      addToken(token);\n    }\n  }, [token, isOnSelectedList, addToken, allTokens]);\n\n  // get V1 LP balances\n  const V1Exchanges = useAllTokenV1Exchanges();\n  const V1LiquidityTokens: Token[] = useMemo(() => {\n    return chainId\n      ? Object.keys(V1Exchanges).map(\n          (exchangeAddress) =>\n            new Token(chainId, exchangeAddress, 18, \"UNI-V1\", \"Uniswap V1\")\n        )\n      : [];\n  }, [chainId, V1Exchanges]);\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] =\n    useTokenBalancesWithLoadingIndicator(\n      account ?? undefined,\n      V1LiquidityTokens\n    );\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(\n    (V1LiquidityToken) => {\n      const balance = V1LiquidityBalances?.[V1LiquidityToken.address];\n      return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0));\n    }\n  ).map((V1LiquidityToken) => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address];\n    return balance ? (\n      <V1PositionCard\n        key={V1LiquidityToken.address}\n        token={V1Exchanges[V1LiquidityToken.address]}\n        V1LiquidityBalance={balance}\n      />\n    ) : null;\n  });\n\n  // should never always be false, because a V1 exhchange exists for WETH on all testnets\n  const isLoading =\n    Object.keys(V1Exchanges)?.length === 0 || V1LiquidityBalancesLoading;\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\n          gap=\"8px\"\n        >\n          <BackArrow to=\"/pool\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n          For each pool shown below, click migrate to remove your liquidity from\n          Uniswap V1 and deposit it into Uniswap V2.\n        </TYPE.body>\n\n        {!account ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              Connect to a wallet to view your V1 liquidity.\n            </TYPE.body>\n          </LightCard>\n        ) : isLoading ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              <Dots>Loading</Dots>\n            </TYPE.body>\n          </LightCard>\n        ) : (\n          <>\n            <AutoRow>\n              <SearchInput\n                value={tokenSearch}\n                onChange={handleTokenSearchChange}\n                placeholder=\"Enter a token address to find liquidity\"\n              />\n            </AutoRow>\n            {allV1PairsWithLiquidity?.length > 0 ? (\n              <>{allV1PairsWithLiquidity}</>\n            ) : (\n              <EmptyState message=\"No V1 Liquidity found.\" />\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}