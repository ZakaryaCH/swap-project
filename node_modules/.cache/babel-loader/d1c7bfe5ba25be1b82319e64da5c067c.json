{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Web3Status/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { darken, lighten } from 'polished';\nimport React, { useMemo } from 'react';\nimport { Activity } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport styled, { css } from 'styled-components';\nimport CoinbaseWalletIcon from \"../../assets/images/coinbaseWalletIcon.svg\";\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png';\nimport PortisIcon from '../../assets/images/portisIcon.png';\nimport WalletConnectIcon from \"../../assets/images/walletConnectIcon.svg\";\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../../connectors';\nimport { NetworkContextName } from '../../constants';\nimport useENSName from '../../hooks/useENSName';\nimport { useHasSocks } from '../../hooks/useSocksBalance';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks';\nimport { shortenAddress } from '../../utils';\nimport { ButtonSecondary } from '../Button';\nimport Identicon from '../Identicon';\nimport Loader from '../Loader';\nimport { RowBetween } from '../Row';\nimport WalletModal from '../WalletModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n  }\n`;\n_c = IconWrapper;\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.red1};\n  border: 1px solid ${({\n  theme\n}) => theme.red1};\n  color: ${({\n  theme\n}) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.red1)};\n  }\n`;\n_c2 = Web3StatusError;\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.primary4};\n  border: none;\n  color: ${({\n  theme\n}) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n    color: ${({\n  theme\n}) => theme.primaryText1};\n  }\n\n  ${({\n  faded\n}) => faded && css`\n      background-color: ${({\n  theme\n}) => theme.primary5};\n      border: 1px solid ${({\n  theme\n}) => theme.primary5};\n      color: ${({\n  theme\n}) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n        color: ${({\n  theme\n}) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`;\n_c3 = Web3StatusConnect;\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg2};\n  border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg3};\n  color: ${({\n  pending,\n  theme\n}) => pending ? theme.white : theme.text1};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  pending,\n  theme\n}) => pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2)};\n\n    :focus {\n      border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3)};\n    }\n  }\n`;\n_c4 = Web3StatusConnected;\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`;\n_c5 = Text;\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`; // we want the latest one to come first, so return negative if a is after b\n\n_c6 = NetworkIcon;\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n}\n\nconst SOCK = /*#__PURE__*/_jsxDEV(\"span\", {\n  role: \"img\",\n  \"aria-label\": \"has socks emoji\",\n  style: {\n    marginTop: -4,\n    marginBottom: -4\n  },\n  children: \"\\uD83E\\uDDE6\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 127,\n  columnNumber: 3\n}, this); // eslint-disable-next-line react/prop-types\n\n\nfunction StatusIcon({\n  connector\n}) {\n  if (connector === injected) {\n    return /*#__PURE__*/_jsxDEV(Identicon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 12\n    }, this);\n  } else if (connector === walletconnect) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: WalletConnectIcon,\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  } else if (connector === walletlink) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: CoinbaseWalletIcon,\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  } else if (connector === fortmatic) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: FortmaticIcon,\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  } else if (connector === portis) {\n    return /*#__PURE__*/_jsxDEV(IconWrapper, {\n      size: 16,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PortisIcon,\n        alt: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_c7 = StatusIcon;\n\nfunction Web3StatusInner() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const {\n    ENSName\n  } = useENSName(account !== null && account !== void 0 ? account : undefined);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const hasPendingTransactions = !!pending.length;\n  const hasSocks = useHasSocks();\n  const toggleWalletModal = useWalletModalToggle();\n\n  if (account) {\n    return /*#__PURE__*/_jsxDEV(Web3StatusConnected, {\n      id: \"web3-status-connected\",\n      onClick: toggleWalletModal,\n      pending: hasPendingTransactions,\n      children: [hasPendingTransactions ? /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [pending === null || pending === void 0 ? void 0 : pending.length, \" Pending\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Loader, {\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [hasSocks ? SOCK : null, /*#__PURE__*/_jsxDEV(Text, {\n          children: ENSName || shortenAddress(account)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !hasPendingTransactions && connector && /*#__PURE__*/_jsxDEV(StatusIcon, {\n        connector: connector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(Web3StatusError, {\n      onClick: toggleWalletModal,\n      children: [/*#__PURE__*/_jsxDEV(NetworkIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Web3StatusConnect, {\n      id: \"connect-wallet\",\n      onClick: toggleWalletModal,\n      faded: !account,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: t('Connect to a wallet')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Web3StatusInner, \"rMWVd47a9/RTxj4bjx63ZemSRC0=\", false, function () {\n  return [useTranslation, useWeb3React, useENSName, useAllTransactions, useHasSocks, useWalletModalToggle];\n});\n\n_c8 = Web3StatusInner;\nexport default function Web3Status() {\n  _s2();\n\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const {\n    ENSName\n  } = useENSName(account !== null && account !== void 0 ? account : undefined);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash);\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Web3StatusInner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WalletModal, {\n      ENSName: ENSName !== null && ENSName !== void 0 ? ENSName : undefined,\n      pendingTransactions: pending,\n      confirmedTransactions: confirmed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Web3Status, \"IWjw+i7uZQ38pmuoA0qZhUKwHhw=\", false, function () {\n  return [useWeb3React, useWeb3React, useENSName, useAllTransactions];\n});\n\n_c9 = Web3Status;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"IconWrapper\");\n$RefreshReg$(_c2, \"Web3StatusError\");\n$RefreshReg$(_c3, \"Web3StatusConnect\");\n$RefreshReg$(_c4, \"Web3StatusConnected\");\n$RefreshReg$(_c5, \"Text\");\n$RefreshReg$(_c6, \"NetworkIcon\");\n$RefreshReg$(_c7, \"StatusIcon\");\n$RefreshReg$(_c8, \"Web3StatusInner\");\n$RefreshReg$(_c9, \"Web3Status\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Web3Status/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","darken","lighten","React","useMemo","Activity","useTranslation","styled","css","FortmaticIcon","PortisIcon","fortmatic","injected","portis","walletconnect","walletlink","NetworkContextName","useENSName","useHasSocks","useWalletModalToggle","isTransactionRecent","useAllTransactions","shortenAddress","ButtonSecondary","Identicon","Loader","RowBetween","WalletModal","IconWrapper","div","theme","flexColumnNoWrap","size","Web3StatusGeneric","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","newTransactionsFirst","a","b","addedTime","SOCK","marginTop","marginBottom","StatusIcon","connector","WalletConnectIcon","CoinbaseWalletIcon","Web3StatusInner","t","account","error","ENSName","undefined","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","hasPendingTransactions","length","hasSocks","toggleWalletModal","Web3Status","active","contextNetwork","confirmed"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { darken, lighten } from 'polished'\nimport React, { useMemo } from 'react'\nimport { Activity } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\nimport CoinbaseWalletIcon from '../../assets/images/coinbaseWalletIcon.svg'\nimport FortmaticIcon from '../../assets/images/fortmaticIcon.png'\nimport PortisIcon from '../../assets/images/portisIcon.png'\nimport WalletConnectIcon from '../../assets/images/walletConnectIcon.svg'\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../../connectors'\nimport { NetworkContextName } from '../../constants'\nimport useENSName from '../../hooks/useENSName'\nimport { useHasSocks } from '../../hooks/useSocksBalance'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks'\nimport { TransactionDetails } from '../../state/transactions/reducer'\nimport { shortenAddress } from '../../utils'\nimport { ButtonSecondary } from '../Button'\n\nimport Identicon from '../Identicon'\nimport Loader from '../Loader'\n\nimport { RowBetween } from '../Row'\nimport WalletModal from '../WalletModal'\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  & > * {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n`\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst SOCK = (\n  <span role=\"img\" aria-label=\"has socks emoji\" style={{ marginTop: -4, marginBottom: -4 }}>\n    🧦\n  </span>\n)\n\n// eslint-disable-next-line react/prop-types\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\n  if (connector === injected) {\n    return <Identicon />\n  } else if (connector === walletconnect) {\n    return (\n      <IconWrapper size={16}>\n        <img src={WalletConnectIcon} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === walletlink) {\n    return (\n      <IconWrapper size={16}>\n        <img src={CoinbaseWalletIcon} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === fortmatic) {\n    return (\n      <IconWrapper size={16}>\n        <img src={FortmaticIcon} alt={''} />\n      </IconWrapper>\n    )\n  } else if (connector === portis) {\n    return (\n      <IconWrapper size={16}>\n        <img src={PortisIcon} alt={''} />\n      </IconWrapper>\n    )\n  }\n  return null\n}\n\nfunction Web3StatusInner() {\n  const { t } = useTranslation()\n  const { account, connector, error } = useWeb3React()\n\n  const { ENSName } = useENSName(account ?? undefined)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const hasSocks = useHasSocks()\n  const toggleWalletModal = useWalletModalToggle()\n\n  if (account) {\n    return (\n      <Web3StatusConnected id=\"web3-status-connected\" onClick={toggleWalletModal} pending={hasPendingTransactions}>\n        {hasPendingTransactions ? (\n          <RowBetween>\n            <Text>{pending?.length} Pending</Text> <Loader stroke=\"white\" />\n          </RowBetween>\n        ) : (\n          <>\n            {hasSocks ? SOCK : null}\n            <Text>{ENSName || shortenAddress(account)}</Text>\n          </>\n        )}\n        {!hasPendingTransactions && connector && <StatusIcon connector={connector} />}\n      </Web3StatusConnected>\n    )\n  } else if (error) {\n    return (\n      <Web3StatusError onClick={toggleWalletModal}>\n        <NetworkIcon />\n        <Text>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'}</Text>\n      </Web3StatusError>\n    )\n  } else {\n    return (\n      <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n        <Text>{t('Connect to a wallet')}</Text>\n      </Web3StatusConnect>\n    )\n  }\n}\n\nexport default function Web3Status() {\n  const { active, account } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n\n  const { ENSName } = useENSName(account ?? undefined)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash)\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      <Web3StatusInner />\n      <WalletModal ENSName={ENSName ?? undefined} pendingTransactions={pending} confirmedTransactions={confirmed} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}