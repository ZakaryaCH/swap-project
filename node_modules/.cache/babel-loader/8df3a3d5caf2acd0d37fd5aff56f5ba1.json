{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Earn/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport styled from 'styled-components';\nimport { STAKING_REWARDS_INFO, useStakingInfo } from '../../state/stake/hooks';\nimport { TYPE, ExternalLink } from '../../theme';\nimport PoolCard from '../../components/earn/PoolCard';\nimport { RowBetween } from '../../components/Row';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport { Countdown } from './Countdown';\nimport Loader from '../../components/Loader';\nimport { useActiveWeb3React } from '../../hooks';\nimport { JSBI } from '@uniswap/sdk';\nimport { BIG_INT_ZERO } from '../../constants';\nimport { OutlineCard } from '../../components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\n_c = PageWrapper;\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`;\n_c2 = TopSection;\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`;\n_c3 = PoolSection;\nconst DataRow = styled(RowBetween)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\nflex-direction: column;\n`};\n`;\n_c4 = DataRow;\nexport default function Earn() {\n  _s();\n\n  var _STAKING_REWARDS_INFO, _STAKING_REWARDS_INFO2, _stakingInfos$;\n\n  const {\n    chainId\n  } = useActiveWeb3React(); // staking info for connected account\n\n  const stakingInfos = useStakingInfo();\n  /**\n   * only show staking cards with balance\n   * @todo only account for this if rewards are inactive\n   */\n\n  const stakingInfosWithBalance = stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.filter(s => JSBI.greaterThan(s.stakedAmount.raw, BIG_INT_ZERO)); // toggle copy if rewards are inactive\n\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && ((_STAKING_REWARDS_INFO = (_STAKING_REWARDS_INFO2 = STAKING_REWARDS_INFO[chainId]) === null || _STAKING_REWARDS_INFO2 === void 0 ? void 0 : _STAKING_REWARDS_INFO2.length) !== null && _STAKING_REWARDS_INFO !== void 0 ? _STAKING_REWARDS_INFO : 0) > 0);\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(TopSection, {\n      gap: \"md\",\n      children: /*#__PURE__*/_jsxDEV(DataCard, {\n        children: [/*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n                fontWeight: 600,\n                children: \"Uniswap liquidity mining\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n                fontSize: 14,\n                children: \"Deposit your Liquidity Provider tokens to receive UNI, the Uniswap protocol governance token.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), ' ', /*#__PURE__*/_jsxDEV(ExternalLink, {\n              style: {\n                color: 'white',\n                textDecoration: 'underline'\n              },\n              href: \"https://uniswap.org/blog/uni/\",\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n                fontSize: 14,\n                children: \"Read more about UNI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"lg\",\n      style: {\n        width: '100%',\n        maxWidth: '720px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataRow, {\n        style: {\n          alignItems: 'baseline'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: \"Participating pools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n          exactEnd: stakingInfos === null || stakingInfos === void 0 ? void 0 : (_stakingInfos$ = stakingInfos[0]) === null || _stakingInfos$ === void 0 ? void 0 : _stakingInfos$.periodFinish\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolSection, {\n        children: stakingRewardsExist && (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) === 0 ? /*#__PURE__*/_jsxDEV(Loader, {\n          style: {\n            margin: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : !stakingRewardsExist ? /*#__PURE__*/_jsxDEV(OutlineCard, {\n          children: \"No active pools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : (stakingInfos === null || stakingInfos === void 0 ? void 0 : stakingInfos.length) !== 0 && stakingInfosWithBalance.length === 0 ? /*#__PURE__*/_jsxDEV(OutlineCard, {\n          children: \"No active pools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this) : stakingInfosWithBalance === null || stakingInfosWithBalance === void 0 ? void 0 : stakingInfosWithBalance.map(stakingInfo => {\n          // need to sort by added liquidity here\n          return /*#__PURE__*/_jsxDEV(PoolCard, {\n            stakingInfo: stakingInfo\n          }, stakingInfo.stakingRewardAddress, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Earn, \"eGEr8XOaennLonQPIO9/osnLpmo=\", false, function () {\n  return [useActiveWeb3React, useStakingInfo];\n});\n\n_c5 = Earn;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"TopSection\");\n$RefreshReg$(_c3, \"PoolSection\");\n$RefreshReg$(_c4, \"DataRow\");\n$RefreshReg$(_c5, \"Earn\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Earn/index.tsx"],"names":["React","AutoColumn","styled","STAKING_REWARDS_INFO","useStakingInfo","TYPE","ExternalLink","PoolCard","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","Countdown","Loader","useActiveWeb3React","JSBI","BIG_INT_ZERO","OutlineCard","PageWrapper","TopSection","PoolSection","div","DataRow","theme","mediaWidth","upToSmall","Earn","chainId","stakingInfos","stakingInfosWithBalance","filter","s","greaterThan","stakedAmount","raw","stakingRewardsExist","Boolean","length","color","textDecoration","width","maxWidth","alignItems","marginTop","periodFinish","margin","map","stakingInfo","stakingRewardAddress"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { STAKING_REWARDS_INFO, useStakingInfo } from '../../state/stake/hooks'\nimport { TYPE, ExternalLink } from '../../theme'\nimport PoolCard from '../../components/earn/PoolCard'\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport { Countdown } from './Countdown'\nimport Loader from '../../components/Loader'\nimport { useActiveWeb3React } from '../../hooks'\nimport { JSBI } from '@uniswap/sdk'\nimport { BIG_INT_ZERO } from '../../constants'\nimport { OutlineCard } from '../../components/Card'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst TopSection = styled(AutoColumn)`\n  max-width: 720px;\n  width: 100%;\n`\n\nconst PoolSection = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 10px;\n  row-gap: 15px;\n  width: 100%;\n  justify-self: center;\n`\n\nconst DataRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\nflex-direction: column;\n`};\n`\n\nexport default function Earn() {\n  const { chainId } = useActiveWeb3React()\n\n  // staking info for connected account\n  const stakingInfos = useStakingInfo()\n\n  /**\n   * only show staking cards with balance\n   * @todo only account for this if rewards are inactive\n   */\n  const stakingInfosWithBalance = stakingInfos?.filter(s => JSBI.greaterThan(s.stakedAmount.raw, BIG_INT_ZERO))\n\n  // toggle copy if rewards are inactive\n  const stakingRewardsExist = Boolean(typeof chainId === 'number' && (STAKING_REWARDS_INFO[chainId]?.length ?? 0) > 0)\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <TopSection gap=\"md\">\n        <DataCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>Uniswap liquidity mining</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  Deposit your Liquidity Provider tokens to receive UNI, the Uniswap protocol governance token.\n                </TYPE.white>\n              </RowBetween>{' '}\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                href=\"https://uniswap.org/blog/uni/\"\n                target=\"_blank\"\n              >\n                <TYPE.white fontSize={14}>Read more about UNI</TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </DataCard>\n      </TopSection>\n\n      <AutoColumn gap=\"lg\" style={{ width: '100%', maxWidth: '720px' }}>\n        <DataRow style={{ alignItems: 'baseline' }}>\n          <TYPE.mediumHeader style={{ marginTop: '0.5rem' }}>Participating pools</TYPE.mediumHeader>\n          <Countdown exactEnd={stakingInfos?.[0]?.periodFinish} />\n        </DataRow>\n\n        <PoolSection>\n          {stakingRewardsExist && stakingInfos?.length === 0 ? (\n            <Loader style={{ margin: 'auto' }} />\n          ) : !stakingRewardsExist ? (\n            <OutlineCard>No active pools</OutlineCard>\n          ) : stakingInfos?.length !== 0 && stakingInfosWithBalance.length === 0 ? (\n            <OutlineCard>No active pools</OutlineCard>\n          ) : (\n            stakingInfosWithBalance?.map(stakingInfo => {\n              // need to sort by added liquidity here\n              return <PoolCard key={stakingInfo.stakingRewardAddress} stakingInfo={stakingInfo} />\n            })\n          )}\n        </PoolSection>\n      </AutoColumn>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}