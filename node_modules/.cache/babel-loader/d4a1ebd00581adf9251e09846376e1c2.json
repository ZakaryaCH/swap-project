{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/CurrencyList.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Currency, currencyEquals, ETHER } from \"@uniswap/sdk\";\nimport { Token } from \"../../types\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { FixedSizeList } from \"react-window\";\nimport { Text } from \"rebass\";\nimport styled from \"styled-components\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { TYPE } from \"../../theme\";\nimport Column from \"../Column\";\nimport { RowFixed, RowBetween } from \"../Row\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { MenuItem } from \"./styleds\";\nimport Loader from \"../Loader\";\nimport { isTokenOnList } from \"../../utils\";\nimport ImportRow from \"./ImportRow\";\nimport { LightGreyCard } from \"components/Card\";\nimport TokenListLogo from \"../../assets/svg/tokenlist.svg\";\nimport QuestionHelper from \"components/QuestionHelper\";\nimport useTheme from \"hooks/useTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : currency === ETHER ? \"ETHER\" : \"\";\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`;\n_c = StyledBalanceText;\nconst Tag = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg3};\n  color: ${({\n  theme\n}) => theme.text2};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`;\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`;\n_c2 = FixedContentRow;\n\nfunction Balance({\n  balance\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledBalanceText, {\n    title: balance.toExact(),\n    children: balance.toSignificant(4)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Balance;\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst TokenListLogoWrapper = styled.img`\n  height: 20px;\n`;\n_c4 = TokenListLogoWrapper;\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style\n}) {\n  _s();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const key = currencyKey(currency);\n  const selectedTokenList = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency);\n  const customAdded = useIsUserAddedToken(currency);\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, currency); // only show add or remove buttons if not on selected list\n\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    style: style,\n    className: `token-item-${key}`,\n    onClick: () => isSelected ? null : onSelect(),\n    disabled: isSelected,\n    selected: otherSelected,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: currency,\n      size: \"24px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        title: currency.name,\n        fontWeight: 500,\n        children: currency.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n        ml: \"0px\",\n        fontSize: \"12px\",\n        fontWeight: 300,\n        children: [currency.name, \" \", !isOnSelectedList && customAdded && \"â€¢ Added by user\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenTags, {\n      currency: currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        justifySelf: \"flex-end\"\n      },\n      children: balance ? /*#__PURE__*/_jsxDEV(Balance, {\n        balance: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 20\n      }, this) : account ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 62\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyRow, \"KdYJt/1R7/tEnD0qTLSc2BU2fVE=\", true, function () {\n  return [useActiveWeb3React];\n});\n\n_c5 = CurrencyRow;\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex\n}) {\n  _s2();\n\n  const itemData = useMemo(() => {\n    let formatted = showETH ? [Currency.ETHER, ...currencies] : currencies;\n\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)];\n    }\n\n    return formatted;\n  }, [breakIndex, currencies, showETH]);\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useTheme();\n  const inactiveTokens = useAllInactiveTokens();\n  const Row = useCallback(({\n    data,\n    index,\n    style\n  }) => {\n    const currency = data[index];\n    const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency));\n    const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency));\n\n    const handleSelect = () => onCurrencySelect(currency);\n\n    const token = wrappedCurrency(currency, chainId);\n    const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address);\n\n    if (index === breakIndex || !data) {\n      return /*#__PURE__*/_jsxDEV(FixedContentRow, {\n        style: style,\n        children: /*#__PURE__*/_jsxDEV(LightGreyCard, {\n          padding: \"8px 12px\",\n          borderRadius: \"8px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(TokenListLogoWrapper, {\n                src: TokenListLogo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n                ml: \"6px\",\n                fontSize: \"12px\",\n                color: theme.text1,\n                children: \"Expanded results from inactive Token Lists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (showImport && token) {\n      return /*#__PURE__*/_jsxDEV(ImportRow, {\n        style: style,\n        token: token,\n        showImportView: showImportView,\n        setImportToken: setImportToken,\n        dim: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CurrencyRow, {\n        style: style,\n        currency: currency,\n        isSelected: isSelected,\n        onSelect: handleSelect,\n        otherSelected: otherSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this);\n    }\n  }, [chainId, inactiveTokens, onCurrencySelect, otherCurrency, selectedCurrency, setImportToken, showImportView, breakIndex, theme.text1]);\n  const itemKey = useCallback((index, data) => currencyKey(data[index]), []);\n  return /*#__PURE__*/_jsxDEV(FixedSizeList, {\n    height: height,\n    ref: fixedListRef,\n    width: \"100%\",\n    itemData: itemData,\n    itemCount: itemData.length,\n    itemSize: 56,\n    itemKey: itemKey,\n    children: Row\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CurrencyList, \"5FYY7lt0XyiCfjbR/MgBaURiZzo=\", true, function () {\n  return [useActiveWeb3React, useTheme];\n});\n\n_c6 = CurrencyList;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledBalanceText\");\n$RefreshReg$(_c2, \"FixedContentRow\");\n$RefreshReg$(_c3, \"Balance\");\n$RefreshReg$(_c4, \"TokenListLogoWrapper\");\n$RefreshReg$(_c5, \"CurrencyRow\");\n$RefreshReg$(_c6, \"CurrencyList\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/CurrencyList.tsx"],"names":["Currency","currencyEquals","ETHER","Token","React","useCallback","useMemo","FixedSizeList","Text","styled","useActiveWeb3React","TYPE","Column","RowFixed","RowBetween","CurrencyLogo","MenuItem","Loader","isTokenOnList","ImportRow","LightGreyCard","QuestionHelper","useTheme","currencyKey","currency","address","StyledBalanceText","Tag","div","theme","bg3","text2","FixedContentRow","Balance","balance","toExact","toSignificant","TagContainer","TokenListLogoWrapper","img","CurrencyRow","onSelect","isSelected","otherSelected","style","account","key","selectedTokenList","useCombinedActiveList","isOnSelectedList","customAdded","useIsUserAddedToken","useCurrencyBalance","undefined","name","symbol","justifySelf","CurrencyList","height","currencies","selectedCurrency","onCurrencySelect","otherCurrency","fixedListRef","showETH","showImportView","setImportToken","breakIndex","itemData","formatted","slice","length","chainId","inactiveTokens","useAllInactiveTokens","Row","data","index","Boolean","handleSelect","token","wrappedCurrency","showImport","Object","keys","includes","TokenListLogo","text1","itemKey"],"mappings":"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","sourcesContent":["import { Currency, CurrencyAmount, currencyEquals, ETHER } from \"@uniswap/sdk\";\nimport { Token } from \"../../types\";\nimport React, {\n  CSSProperties,\n  MutableRefObject,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { FixedSizeList } from \"react-window\";\nimport { Text } from \"rebass\";\nimport styled from \"styled-components\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { TYPE } from \"../../theme\";\nimport Column from \"../Column\";\nimport { RowFixed, RowBetween } from \"../Row\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { MouseoverTooltip } from \"../Tooltip\";\nimport { MenuItem } from \"./styleds\";\nimport Loader from \"../Loader\";\nimport { isTokenOnList } from \"../../utils\";\nimport ImportRow from \"./ImportRow\";\nimport { LightGreyCard } from \"components/Card\";\nimport TokenListLogo from \"../../assets/svg/tokenlist.svg\";\nimport QuestionHelper from \"components/QuestionHelper\";\nimport useTheme from \"hooks/useTheme\";\n\nfunction currencyKey(currency: Token): string {\n  return currency instanceof Token\n    ? currency.address\n    : currency === ETHER\n    ? \"ETHER\"\n    : \"\";\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`;\n\nconst Tag = styled.div`\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text2};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`;\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`;\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return (\n    <StyledBalanceText title={balance.toExact()}>\n      {balance.toSignificant(4)}\n    </StyledBalanceText>\n  );\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst TokenListLogoWrapper = styled.img`\n  height: 20px;\n`;\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Token;\n  onSelect: () => void;\n  isSelected: boolean;\n  otherSelected: boolean;\n  style: CSSProperties;\n}) {\n  const { account } = useActiveWeb3React();\n  const key = currencyKey(currency);\n  const selectedTokenList = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency);\n  const customAdded = useIsUserAddedToken(currency);\n  const balance = useCurrencyBalance(account ?? undefined, currency);\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size={\"24px\"} />\n      <Column>\n        <Text title={currency.name} fontWeight={500}>\n          {currency.symbol}\n        </Text>\n        <TYPE.darkGray ml=\"0px\" fontSize={\"12px\"} fontWeight={300}>\n          {currency.name}{\" \"}\n          {!isOnSelectedList && customAdded && \"â€¢ Added by user\"}\n        </TYPE.darkGray>\n      </Column>\n      <TokenTags currency={currency} />\n      <RowFixed style={{ justifySelf: \"flex-end\" }}>\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\n      </RowFixed>\n    </MenuItem>\n  );\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number;\n  currencies: Currency[];\n  selectedCurrency?: Currency | null;\n  onCurrencySelect: (currency: Currency) => void;\n  otherCurrency?: Currency | null;\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>;\n  showETH: boolean;\n  showImportView: () => void;\n  setImportToken: (token: Token) => void;\n  breakIndex: number | undefined;\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH\n      ? [Currency.ETHER, ...currencies]\n      : currencies;\n    if (breakIndex !== undefined) {\n      formatted = [\n        ...formatted.slice(0, breakIndex),\n        undefined,\n        ...formatted.slice(breakIndex, formatted.length),\n      ];\n    }\n    return formatted;\n  }, [breakIndex, currencies, showETH]);\n\n  const { chainId } = useActiveWeb3React();\n  const theme = useTheme();\n\n  const inactiveTokens: {\n    [address: string]: Token;\n  } = useAllInactiveTokens();\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index];\n      const isSelected = Boolean(\n        selectedCurrency && currencyEquals(selectedCurrency, currency)\n      );\n      const otherSelected = Boolean(\n        otherCurrency && currencyEquals(otherCurrency, currency)\n      );\n      const handleSelect = () => onCurrencySelect(currency);\n\n      const token = wrappedCurrency(currency, chainId);\n\n      const showImport =\n        inactiveTokens &&\n        token &&\n        Object.keys(inactiveTokens).includes(token.address);\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <RowFixed>\n                  <TokenListLogoWrapper src={TokenListLogo} />\n                  <TYPE.main ml=\"6px\" fontSize=\"12px\" color={theme.text1}>\n                    Expanded results from inactive Token Lists\n                  </TYPE.main>\n                </RowFixed>\n                <QuestionHelper text=\"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\" />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        );\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow\n            style={style}\n            token={token}\n            showImportView={showImportView}\n            setImportToken={setImportToken}\n            dim={true}\n          />\n        );\n      } else {\n        return (\n          <CurrencyRow\n            style={style}\n            currency={currency}\n            isSelected={isSelected}\n            onSelect={handleSelect}\n            otherSelected={otherSelected}\n          />\n        );\n      }\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      theme.text1,\n    ]\n  );\n\n  const itemKey = useCallback(\n    (index: number, data: any) => currencyKey(data[index]),\n    []\n  );\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}