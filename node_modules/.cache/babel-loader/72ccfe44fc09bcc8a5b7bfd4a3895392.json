{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/RemoveV1Exchange.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { JSBI, Token, TokenAmount, WETH, Fraction, Percent, CurrencyAmount } from \"@uniswap/sdk\";\nimport React, { useMemo, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow } from \"../../components/Row\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { useV1ExchangeContract } from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport { useIsTransactionPending, useTransactionAdder } from \"../../state/transactions/hooks\";\nimport { useTokenBalance, useETHBalances } from \"../../state/wallet/hooks\";\nimport { BackArrow, TYPE } from \"../../theme\";\nimport { isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\nimport { V1LiquidityInfo } from \"./MigrateV1Exchange\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token\n}) {\n  _s();\n\n  var _useETHBalances;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n\n  const remove = () => null;\n\n  const [confirmingRemoval, setConfirmingRemoval] = useState(false);\n  const [pendingRemovalHash, setPendingRemovalHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const addTransaction = useTransactionAdder();\n  const isRemovalPending = useIsTransactionPending(pendingRemovalHash !== null && pendingRemovalHash !== void 0 ? pendingRemovalHash : undefined); // const remove = useCallback(() => {\n  //   if (!liquidityTokenAmount) return\n  //   setConfirmingRemoval(true)\n  //   exchangeContract\n  //     .removeLiquidity(\n  //       liquidityTokenAmount.raw.toString(),\n  //       1, // min_eth, this is safe because we're removing liquidity\n  //       1, // min_tokens, this is safe because we're removing liquidity\n  //       Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n  //     )\n  //     .then((response: TransactionResponse) => {\n  //       ReactGA.event({\n  //         category: 'Remove',\n  //         action: 'V1',\n  //         label: token?.symbol\n  //       })\n  //       addTransaction(response, {\n  //         summary: `Remove ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n  //       })\n  //       setPendingRemovalHash(response.hash)\n  //     })\n  //     .catch((error: Error) => {\n  //       console.error(error)\n  //       setConfirmingRemoval(false)\n  //     })\n  // }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const isSuccessfullyRemoved = !!pendingRemovalHash && noLiquidityTokens;\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: \"This tool will remove your V1 liquidity and send the underlying assets to your wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: [/*#__PURE__*/_jsxDEV(V1LiquidityInfo, {\n        token: token,\n        liquidityTokenAmount: liquidityTokenAmount,\n        tokenWorth: tokenWorth,\n        ethWorth: ethWorth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"1rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n          confirmed: isSuccessfullyRemoved,\n          disabled: isSuccessfullyRemoved || noLiquidityTokens || isRemovalPending || confirmingRemoval,\n          onClick: remove,\n          children: isSuccessfullyRemoved ? \"Success\" : isRemovalPending ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: \"Removing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this) : \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: `Your Uniswap V1 ${chainId && token.equals(WETH[chainId]) ? \"WETH\" : token.symbol}/ETH liquidity will be redeemed for underlying assets.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n\n_s(V1PairRemoval, \"uopoTvVpNK+hhRxIFKfishRh/hg=\", false, function () {\n  return [useActiveWeb3React, useTotalSupply, useETHBalances, useTokenBalance, useTransactionAdder, useIsTransactionPending];\n});\n\n_c = V1PairRemoval;\nexport default function RemoveV1Exchange({\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s2();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined, true);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, \"tokenAddress\", undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, \"Uniswap V1\") : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    id: \"remove-v1-exchange\",\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Remove V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Remove your Uniswap V1 liquidity tokens.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n        children: \"You must connect an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : userLiquidityBalance && token && exchangeContract ? /*#__PURE__*/_jsxDEV(V1PairRemoval, {\n        exchangeContract: exchangeContract,\n        liquidityTokenAmount: userLiquidityBalance,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n        message: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RemoveV1Exchange, \"z1J1fbUzEnt2GJn4Tr7V1Id5IB8=\", false, function () {\n  return [useActiveWeb3React, useV1ExchangeContract, useSingleCallResult, useToken, useTokenBalance];\n});\n\n_c2 = RemoveV1Exchange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"V1PairRemoval\");\n$RefreshReg$(_c2, \"RemoveV1Exchange\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/RemoveV1Exchange.tsx"],"names":["JSBI","Token","TokenAmount","WETH","Fraction","Percent","CurrencyAmount","React","useMemo","useState","Redirect","ButtonConfirmed","LightCard","AutoColumn","QuestionHelper","AutoRow","useActiveWeb3React","useToken","useV1ExchangeContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useTokenBalance","useETHBalances","BackArrow","TYPE","isAddress","BodyWrapper","EmptyState","V1LiquidityInfo","AddressZero","Dots","useTotalSupply","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","V1PairRemoval","exchangeContract","liquidityTokenAmount","token","chainId","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","remove","confirmingRemoval","setConfirmingRemoval","pendingRemovalHash","setPendingRemovalHash","shareFraction","raw","ethWorth","ether","multiply","quotient","tokenWorth","addTransaction","isRemovalPending","undefined","noLiquidityTokens","equalTo","isSuccessfullyRemoved","fontWeight","display","marginTop","textAlign","equals","symbol","RemoveV1Exchange","match","params","validatedAddress","account","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","padding","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport {\n  JSBI,\n  Token,\n  TokenAmount,\n  WETH,\n  Fraction,\n  Percent,\n  CurrencyAmount,\n} from \"@uniswap/sdk\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow } from \"../../components/Row\";\nimport { DEFAULT_DEADLINE_FROM_NOW } from \"../../constants\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { useV1ExchangeContract } from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport {\n  useIsTransactionPending,\n  useTransactionAdder,\n} from \"../../state/transactions/hooks\";\nimport { useTokenBalance, useETHBalances } from \"../../state/wallet/hooks\";\nimport { BackArrow, TYPE } from \"../../theme\";\nimport { isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\nimport { V1LiquidityInfo } from \"./MigrateV1Exchange\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token,\n}: {\n  exchangeContract: Contract;\n  liquidityTokenAmount: TokenAmount;\n  token: Token;\n}) {\n  const { chainId } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = useETHBalances([\n    liquidityTokenAmount.token.address,\n  ])?.[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(\n    liquidityTokenAmount.token.address,\n    token\n  );\n\n  const remove = () => null;\n  const [confirmingRemoval, setConfirmingRemoval] = useState<boolean>(false);\n  const [pendingRemovalHash, setPendingRemovalHash] =\n    useState<string | null>(null);\n\n  const shareFraction: Fraction = totalSupply\n    ? new Percent(liquidityTokenAmount.raw, totalSupply.raw)\n    : ZERO_FRACTION;\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(\n        exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient\n      )\n    : CurrencyAmount.ether(ZERO);\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(\n        token,\n        shareFraction.multiply(exchangeTokenBalance.raw).quotient\n      )\n    : new TokenAmount(token, ZERO);\n\n  const addTransaction = useTransactionAdder();\n  const isRemovalPending = useIsTransactionPending(\n    pendingRemovalHash ?? undefined\n  );\n\n  // const remove = useCallback(() => {\n  //   if (!liquidityTokenAmount) return\n\n  //   setConfirmingRemoval(true)\n  //   exchangeContract\n  //     .removeLiquidity(\n  //       liquidityTokenAmount.raw.toString(),\n  //       1, // min_eth, this is safe because we're removing liquidity\n  //       1, // min_tokens, this is safe because we're removing liquidity\n  //       Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n  //     )\n  //     .then((response: TransactionResponse) => {\n  //       ReactGA.event({\n  //         category: 'Remove',\n  //         action: 'V1',\n  //         label: token?.symbol\n  //       })\n\n  //       addTransaction(response, {\n  //         summary: `Remove ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n  //       })\n  //       setPendingRemovalHash(response.hash)\n  //     })\n  //     .catch((error: Error) => {\n  //       console.error(error)\n  //       setConfirmingRemoval(false)\n  //     })\n  // }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction])\n\n  const noLiquidityTokens =\n    !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n\n  const isSuccessfullyRemoved = !!pendingRemovalHash && noLiquidityTokens;\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will remove your V1 liquidity and send the underlying assets\n        to your wallet.\n      </TYPE.body>\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: \"flex\", marginTop: \"1rem\" }}>\n          <ButtonConfirmed\n            confirmed={isSuccessfullyRemoved}\n            disabled={\n              isSuccessfullyRemoved ||\n              noLiquidityTokens ||\n              isRemovalPending ||\n              confirmingRemoval\n            }\n            onClick={remove}\n          >\n            {isSuccessfullyRemoved ? (\n              \"Success\"\n            ) : isRemovalPending ? (\n              <Dots>Removing</Dots>\n            ) : (\n              \"Remove\"\n            )}\n          </ButtonConfirmed>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: \"center\" }}>\n        {`Your Uniswap V1 ${\n          chainId && token.equals(WETH[chainId]) ? \"WETH\" : token.symbol\n        }/ETH liquidity will be redeemed for underlying assets.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  );\n}\n\nexport default function RemoveV1Exchange({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address);\n  const { chainId, account } = useActiveWeb3React();\n\n  const exchangeContract = useV1ExchangeContract(\n    validatedAddress ? validatedAddress : undefined,\n    true\n  );\n  const tokenAddress = useSingleCallResult(\n    exchangeContract,\n    \"tokenAddress\",\n    undefined,\n    NEVER_RELOAD\n  )?.result?.[0];\n  const token = useToken(tokenAddress);\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(\n            chainId,\n            validatedAddress,\n            18,\n            `UNI-V1-${token.symbol}`,\n            \"Uniswap V1\"\n          )\n        : undefined,\n    [chainId, validatedAddress, token]\n  );\n  const userLiquidityBalance = useTokenBalance(\n    account ?? undefined,\n    liquidityToken\n  );\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return <Redirect to=\"/migrate/v1\" />;\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }} id=\"remove-v1-exchange\">\n      <AutoColumn gap=\"16px\">\n        <AutoRow\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\n          gap=\"8px\"\n        >\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Remove V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Remove your Uniswap V1 liquidity tokens.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : userLiquidityBalance && token && exchangeContract ? (\n          <V1PairRemoval\n            exchangeContract={exchangeContract}\n            liquidityTokenAmount={userLiquidityBalance}\n            token={token}\n          />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}