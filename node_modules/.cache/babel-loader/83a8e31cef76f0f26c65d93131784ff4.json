{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, memo, useContext } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Flex } from \"rebass\";\nimport { ThemeContext } from \"styled-components\";\nimport { TYPE } from \"../../theme\"; // import { unwrappedToken } from 'utils/wrappedCurrency'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function SwapRoute({\n  trade\n}) {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    children: trade.route.path.map((token, i, path) => {\n      const isLastItem = i === path.length - 1; // const currency = unwrappedToken(token)\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"end\",\n          children: /*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            color: theme.text1,\n            ml: \"0.125rem\",\n            mr: \"0.125rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), isLastItem ? null : /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 12,\n          color: theme.text2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 34\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}, \"+C1P7ukOg/azcV4AZ819oyezFOE=\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapRoute.tsx"],"names":["React","Fragment","memo","useContext","ChevronRight","Flex","ThemeContext","TYPE","SwapRoute","trade","theme","route","path","map","token","i","isLastItem","length","text1","text2"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,aAArB,C,CACA;;;AAEA,kCAAeL,IAAI,SAAC,SAASM,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgD;AAAA;;AAClE,QAAMC,KAAK,GAAGP,UAAU,CAACG,YAAD,CAAxB;AACA,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAC,MADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,cAAc,EAAC,UAHjB;AAIE,IAAA,UAAU,EAAC,QAJb;AAAA,cAMGG,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,CAAR,EAAWH,IAAX,KAAoB;AACxC,YAAMI,UAAmB,GAAGD,CAAC,KAAKH,IAAI,CAACK,MAAL,GAAc,CAAhD,CADwC,CAExC;;AACA,0BACE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,KAAjB;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,QAAQ,EAAE,EADZ;AAEE,YAAA,KAAK,EAAEP,KAAK,CAACQ,KAFf;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAWGF,UAAU,GAAG,IAAH,gBAAU,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE,EAApB;AAAwB,UAAA,KAAK,EAAEN,KAAK,CAACS;AAArC;AAAA;AAAA;AAAA;AAAA,gBAXvB;AAAA,SAAeJ,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAlBA;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA9BkB,kCAAnB","sourcesContent":["import { Trade } from \"@uniswap/sdk\";\nimport React, { Fragment, memo, useContext } from \"react\";\nimport { ChevronRight } from \"react-feather\";\nimport { Flex } from \"rebass\";\nimport { ThemeContext } from \"styled-components\";\nimport { TYPE } from \"../../theme\";\n// import { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  const theme = useContext(ThemeContext);\n  return (\n    <Flex\n      flexWrap=\"wrap\"\n      width=\"100%\"\n      justifyContent=\"flex-end\"\n      alignItems=\"center\"\n    >\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1;\n        // const currency = unwrappedToken(token)\n        return (\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <TYPE.black\n                fontSize={14}\n                color={theme.text1}\n                ml=\"0.125rem\"\n                mr=\"0.125rem\"\n              >\n                {/* {currency.symbol} */}\n              </TYPE.black>\n            </Flex>\n            {isLastItem ? null : <ChevronRight size={12} color={theme.text2} />}\n          </Fragment>\n        );\n      })}\n    </Flex>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}