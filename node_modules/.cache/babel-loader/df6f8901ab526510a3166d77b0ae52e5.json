{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Earn/Manage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { AutoColumn } from '../../components/Column';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { JSBI, TokenAmount, ETHER } from '@uniswap/sdk';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { TYPE } from '../../theme';\nimport { RowBetween } from '../../components/Row';\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled';\nimport { ButtonPrimary, ButtonEmpty } from '../../components/Button';\nimport StakingModal from '../../components/earn/StakingModal';\nimport { useStakingInfo } from '../../state/stake/hooks';\nimport UnstakingModal from '../../components/earn/UnstakingModal';\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useColor } from '../../hooks/useColor';\nimport { CountUp } from 'use-count-up';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport { currencyId } from '../../utils/currencyId';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { usePair } from '../../data/Reserves';\nimport usePrevious from '../../hooks/usePrevious';\nimport useUSDCPrice from '../../utils/useUSDCPrice';\nimport { BIG_INT_ZERO, BIG_INT_SECONDS_IN_WEEK } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`;\n_c = PageWrapper;\nconst PositionInfo = styled(AutoColumn)`\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n  opacity: ${({\n  dim\n}) => dim ? 0.6 : 1};\n`;\n_c2 = PositionInfo;\nconst BottomSection = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n`;\n_c3 = BottomSection;\nconst StyledDataCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #1e1a31 0%, #3d51a5 100%);\n  z-index: 2;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: ${({\n  theme,\n  bgColor,\n  showBackground\n}) => `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `};\n`;\n_c4 = StyledDataCard;\nconst StyledBottomCard = styled(DataCard)`\n  background: ${({\n  theme\n}) => theme.bg3};\n  opacity: ${({\n  dim\n}) => dim ? 0.4 : 1};\n  margin-top: -40px;\n  padding: 0 1.25rem 1rem 1.25rem;\n  padding-top: 32px;\n  z-index: 1;\n`;\n_c5 = StyledBottomCard;\nconst PoolData = styled(DataCard)`\n  background: none;\n  border: 1px solid ${({\n  theme\n}) => theme.bg4};\n  padding: 1rem;\n  z-index: 1;\n`;\n_c6 = PoolData;\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`;\n_c7 = VoteCard;\nconst DataRow = styled(RowBetween)`\n  justify-content: center;\n  gap: 12px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    gap: 12px;\n  `};\n`;\n_c8 = DataRow;\nexport default function Manage({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  _s();\n\n  var _useStakingInfo, _stakingInfo$stakedAm, _stakingInfo$stakedAm2, _stakingInfo$stakedAm3, _stakingInfo$earnedAm, _stakingInfo$earnedAm2, _usePrevious, _valueOfTotalStakedAm, _valueOfTotalStakedAm2, _stakingInfo$totalRew, _stakingInfo$totalRew2, _stakingInfo$totalRew3, _stakingInfo$stakedAm4, _stakingInfo$stakedAm5, _stakingInfo$stakedAm6, _stakingInfo$earnedAm3, _stakingInfo$rewardRa, _stakingInfo$rewardRa2, _stakingInfo$rewardRa3, _stakingInfo$stakedAm7, _stakingInfo$stakedAm8;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React(); // get currencies and pair\n\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)];\n  const tokenA = wrappedCurrency(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, chainId);\n  const tokenB = wrappedCurrency(currencyB !== null && currencyB !== void 0 ? currencyB : undefined, chainId);\n  const [, stakingTokenPair] = usePair(tokenA, tokenB);\n  const stakingInfo = (_useStakingInfo = useStakingInfo(stakingTokenPair)) === null || _useStakingInfo === void 0 ? void 0 : _useStakingInfo[0]; // detect existing unstaked LP position to show add button if none found\n\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.token);\n  const showAddLiquidityButton = Boolean((stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.equalTo('0')) && (userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.equalTo('0'))); // toggle for staking modal and unstaking modal\n\n  const [showStakingModal, setShowStakingModal] = useState(false);\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false);\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false); // fade cards if nothing staked or nothing earned yet\n\n  const disableTop = !(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) || stakingInfo.stakedAmount.equalTo(JSBI.BigInt(0));\n  const token = currencyA === ETHER ? tokenB : tokenA;\n  const WETH = currencyA === ETHER ? tokenA : tokenB;\n  const backgroundColor = useColor(token); // get WETH value of staked LP tokens\n\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm3 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm3 === void 0 ? void 0 : _stakingInfo$stakedAm3.token);\n  let valueOfTotalStakedAmountInWETH;\n\n  if (totalSupplyOfStakingToken && stakingTokenPair && stakingInfo && WETH) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = new TokenAmount(WETH, JSBI.divide(JSBI.multiply(JSBI.multiply(stakingInfo.totalStakedAmount.raw, stakingTokenPair.reserveOf(WETH).raw), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n    ), totalSupplyOfStakingToken.raw));\n  }\n\n  const countUpAmount = (_stakingInfo$earnedAm = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm2 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm2 === void 0 ? void 0 : _stakingInfo$earnedAm2.toFixed(6)) !== null && _stakingInfo$earnedAm !== void 0 ? _stakingInfo$earnedAm : '0';\n  const countUpAmountPrevious = (_usePrevious = usePrevious(countUpAmount)) !== null && _usePrevious !== void 0 ? _usePrevious : '0'; // get the USD value of staked WETH\n\n  const USDPrice = useUSDCPrice(WETH);\n  const valueOfTotalStakedAmountInUSDC = valueOfTotalStakedAmountInWETH && (USDPrice === null || USDPrice === void 0 ? void 0 : USDPrice.quote(valueOfTotalStakedAmountInWETH));\n  const toggleWalletModal = useWalletModalToggle();\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true);\n    } else {\n      toggleWalletModal();\n    }\n  }, [account, toggleWalletModal]);\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      style: {\n        gap: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n        style: {\n          margin: 0\n        },\n        children: [currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \"-\", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" Liquidity Mining\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n        currency0: currencyA !== null && currencyA !== void 0 ? currencyA : undefined,\n        currency1: currencyB !== null && currencyB !== void 0 ? currencyB : undefined,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataRow, {\n      style: {\n        gap: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PoolData, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            style: {\n              margin: 0\n            },\n            children: \"Total deposits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n            fontSize: 24,\n            fontWeight: 500,\n            children: valueOfTotalStakedAmountInUSDC ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, {\n              groupSeparator: ','\n            })}` : `${(_valueOfTotalStakedAm = (_valueOfTotalStakedAm2 = valueOfTotalStakedAmountInWETH) === null || _valueOfTotalStakedAm2 === void 0 ? void 0 : _valueOfTotalStakedAm2.toSignificant(4, {\n              groupSeparator: ','\n            })) !== null && _valueOfTotalStakedAm !== void 0 ? _valueOfTotalStakedAm : '-'} ETH`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolData, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            style: {\n              margin: 0\n            },\n            children: \"Pool Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n            fontSize: 24,\n            fontWeight: 500,\n            children: [(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? (_stakingInfo$totalRew = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$totalRew2 = stakingInfo.totalRewardRate) === null || _stakingInfo$totalRew2 === void 0 ? void 0 : (_stakingInfo$totalRew3 = _stakingInfo$totalRew2.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$totalRew3 === void 0 ? void 0 : _stakingInfo$totalRew3.toFixed(0, {\n              groupSeparator: ','\n            })) !== null && _stakingInfo$totalRew !== void 0 ? _stakingInfo$totalRew : '-' : '0', ' UNI / week']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), showAddLiquidityButton && /*#__PURE__*/_jsxDEV(VoteCard, {\n      children: [/*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n              fontWeight: 600,\n              children: \"Step 1. Get UNI-V2 Liquidity tokens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n              fontSize: 14,\n              children: `UNI-V2 LP tokens are required. Once you've added liquidity to the ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol}-${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol} pool you can stake your liquidity tokens on this page.`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            padding: \"8px\",\n            borderRadius: \"8px\",\n            width: 'fit-content',\n            as: Link,\n            to: `/add/${currencyA && currencyId(currencyA)}/${currencyB && currencyId(currencyB)}`,\n            children: `Add ${currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol}-${currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol} liquidity`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), stakingInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StakingModal, {\n        isOpen: showStakingModal,\n        onDismiss: () => setShowStakingModal(false),\n        stakingInfo: stakingInfo,\n        userLiquidityUnstaked: userLiquidityUnstaked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UnstakingModal, {\n        isOpen: showUnstakingModal,\n        onDismiss: () => setShowUnstakingModal(false),\n        stakingInfo: stakingInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClaimRewardModal, {\n        isOpen: showClaimRewardModal,\n        onDismiss: () => setShowClaimRewardModal(false),\n        stakingInfo: stakingInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PositionInfo, {\n      gap: \"lg\",\n      justify: \"center\",\n      dim: showAddLiquidityButton,\n      children: [/*#__PURE__*/_jsxDEV(BottomSection, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(StyledDataCard, {\n          disabled: disableTop,\n          bgColor: backgroundColor,\n          showBackground: !showAddLiquidityButton,\n          children: /*#__PURE__*/_jsxDEV(CardSection, {\n            children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n              desaturate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                children: /*#__PURE__*/_jsxDEV(TYPE.white, {\n                  fontWeight: 600,\n                  children: \"Your liquidity deposits\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                style: {\n                  alignItems: 'baseline'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TYPE.white, {\n                  fontSize: 36,\n                  fontWeight: 600,\n                  children: (_stakingInfo$stakedAm4 = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm5 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm5 === void 0 ? void 0 : _stakingInfo$stakedAm5.toSignificant(6)) !== null && _stakingInfo$stakedAm4 !== void 0 ? _stakingInfo$stakedAm4 : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TYPE.white, {\n                  children: [\"UNI-V2 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \"-\", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBottomCard, {\n          dim: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm6 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm6 === void 0 ? void 0 : _stakingInfo$stakedAm6.equalTo(JSBI.BigInt(0)),\n          children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n            desaturate: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TYPE.black, {\n                  children: \"Your unclaimed UNI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount) && JSBI.notEqual(BIG_INT_ZERO, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm3 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm3 === void 0 ? void 0 : _stakingInfo$earnedAm3.raw) && /*#__PURE__*/_jsxDEV(ButtonEmpty, {\n                padding: \"8px\",\n                borderRadius: \"8px\",\n                width: \"fit-content\",\n                onClick: () => setShowClaimRewardModal(true),\n                children: \"Claim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              style: {\n                alignItems: 'baseline'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n                fontSize: 36,\n                fontWeight: 600,\n                children: /*#__PURE__*/_jsxDEV(CountUp, {\n                  isCounting: true,\n                  decimalPlaces: 4,\n                  start: parseFloat(countUpAmountPrevious),\n                  end: parseFloat(countUpAmount),\n                  thousandsSeparator: ',',\n                  duration: 1\n                }, countUpAmount, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n                fontSize: 16,\n                fontWeight: 500,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"img\",\n                  \"aria-label\": \"wizard-icon\",\n                  style: {\n                    marginRight: '8px '\n                  },\n                  children: \"\\u26A1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? (_stakingInfo$rewardRa = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$rewardRa2 = stakingInfo.rewardRate) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : (_stakingInfo$rewardRa3 = _stakingInfo$rewardRa2.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$rewardRa3 === void 0 ? void 0 : _stakingInfo$rewardRa3.toSignificant(4, {\n                  groupSeparator: ','\n                })) !== null && _stakingInfo$rewardRa !== void 0 ? _stakingInfo$rewardRa : '-' : '0', ' UNI / week']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n        style: {\n          textAlign: 'center'\n        },\n        fontSize: 14,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"wizard-icon\",\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u2B50\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), \"When you withdraw, the contract will automagically claim UNI on your behalf!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), !showAddLiquidityButton && /*#__PURE__*/_jsxDEV(DataRow, {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [stakingInfo && stakingInfo.active && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          borderRadius: \"8px\",\n          width: \"160px\",\n          onClick: handleDepositClick,\n          children: (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm7 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm7 === void 0 ? void 0 : _stakingInfo$stakedAm7.greaterThan(JSBI.BigInt(0))) ? 'Deposit' : 'Deposit UNI-V2 LP Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 15\n        }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm8 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm8 === void 0 ? void 0 : _stakingInfo$stakedAm8.greaterThan(JSBI.BigInt(0))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            padding: \"8px\",\n            borderRadius: \"8px\",\n            width: \"160px\",\n            onClick: () => setShowUnstakingModal(true),\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), !userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : !(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? null : /*#__PURE__*/_jsxDEV(TYPE.main, {\n        children: [userLiquidityUnstaked.toSignificant(6), \" UNI-V2 LP tokens available\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manage, \"q473d8+XfvUpSnSj7lyMIx5PaQ0=\", false, function () {\n  return [useActiveWeb3React, useCurrency, useCurrency, usePair, useStakingInfo, useTokenBalance, useColor, useTotalSupply, usePrevious, useUSDCPrice, useWalletModalToggle];\n});\n\n_c9 = Manage;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"PositionInfo\");\n$RefreshReg$(_c3, \"BottomSection\");\n$RefreshReg$(_c4, \"StyledDataCard\");\n$RefreshReg$(_c5, \"StyledBottomCard\");\n$RefreshReg$(_c6, \"PoolData\");\n$RefreshReg$(_c7, \"VoteCard\");\n$RefreshReg$(_c8, \"DataRow\");\n$RefreshReg$(_c9, \"Manage\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Earn/Manage.tsx"],"names":["React","useCallback","useState","AutoColumn","styled","Link","JSBI","TokenAmount","ETHER","DoubleCurrencyLogo","useCurrency","useWalletModalToggle","TYPE","RowBetween","CardSection","DataCard","CardNoise","CardBGImage","ButtonPrimary","ButtonEmpty","StakingModal","useStakingInfo","UnstakingModal","ClaimRewardModal","useTokenBalance","useActiveWeb3React","useColor","CountUp","wrappedCurrency","currencyId","useTotalSupply","usePair","usePrevious","useUSDCPrice","BIG_INT_ZERO","BIG_INT_SECONDS_IN_WEEK","PageWrapper","PositionInfo","dim","BottomSection","StyledDataCard","theme","bgColor","showBackground","black","bg5","StyledBottomCard","bg3","PoolData","bg4","VoteCard","DataRow","mediaWidth","upToSmall","Manage","match","params","currencyIdA","currencyIdB","account","chainId","currencyA","currencyB","tokenA","undefined","tokenB","stakingTokenPair","stakingInfo","userLiquidityUnstaked","stakedAmount","token","showAddLiquidityButton","Boolean","equalTo","showStakingModal","setShowStakingModal","showUnstakingModal","setShowUnstakingModal","showClaimRewardModal","setShowClaimRewardModal","disableTop","BigInt","WETH","backgroundColor","totalSupplyOfStakingToken","valueOfTotalStakedAmountInWETH","divide","multiply","totalStakedAmount","raw","reserveOf","countUpAmount","earnedAmount","toFixed","countUpAmountPrevious","USDPrice","valueOfTotalStakedAmountInUSDC","quote","toggleWalletModal","handleDepositClick","gap","margin","symbol","groupSeparator","toSignificant","active","totalRewardRate","marginBottom","alignItems","notEqual","parseFloat","marginRight","rewardRate","textAlign","greaterThan"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { AutoColumn } from '../../components/Column'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { JSBI, TokenAmount, ETHER } from '@uniswap/sdk'\nimport { RouteComponentProps } from 'react-router-dom'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { TYPE } from '../../theme'\n\nimport { RowBetween } from '../../components/Row'\nimport { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\nimport { ButtonPrimary, ButtonEmpty } from '../../components/Button'\nimport StakingModal from '../../components/earn/StakingModal'\nimport { useStakingInfo } from '../../state/stake/hooks'\nimport UnstakingModal from '../../components/earn/UnstakingModal'\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useColor } from '../../hooks/useColor'\nimport { CountUp } from 'use-count-up'\n\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { currencyId } from '../../utils/currencyId'\nimport { useTotalSupply } from '../../data/TotalSupply'\nimport { usePair } from '../../data/Reserves'\nimport usePrevious from '../../hooks/usePrevious'\nimport useUSDCPrice from '../../utils/useUSDCPrice'\nimport { BIG_INT_ZERO, BIG_INT_SECONDS_IN_WEEK } from '../../constants'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst PositionInfo = styled(AutoColumn)<{ dim: any }>`\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n  opacity: ${({ dim }) => (dim ? 0.6 : 1)};\n`\n\nconst BottomSection = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n`\n\nconst StyledDataCard = styled(DataCard)<{ bgColor?: any; showBackground?: any }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #1e1a31 0%, #3d51a5 100%);\n  z-index: 2;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `};\n`\n\nconst StyledBottomCard = styled(DataCard)<{ dim: any }>`\n  background: ${({ theme }) => theme.bg3};\n  opacity: ${({ dim }) => (dim ? 0.4 : 1)};\n  margin-top: -40px;\n  padding: 0 1.25rem 1rem 1.25rem;\n  padding-top: 32px;\n  z-index: 1;\n`\n\nconst PoolData = styled(DataCard)`\n  background: none;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  padding: 1rem;\n  z-index: 1;\n`\n\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst DataRow = styled(RowBetween)`\n  justify-content: center;\n  gap: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    gap: 12px;\n  `};\n`\n\nexport default function Manage({\n  match: {\n    params: { currencyIdA, currencyIdB }\n  }\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const { account, chainId } = useActiveWeb3React()\n\n  // get currencies and pair\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)]\n  const tokenA = wrappedCurrency(currencyA ?? undefined, chainId)\n  const tokenB = wrappedCurrency(currencyB ?? undefined, chainId)\n\n  const [, stakingTokenPair] = usePair(tokenA, tokenB)\n  const stakingInfo = useStakingInfo(stakingTokenPair)?.[0]\n\n  // detect existing unstaked LP position to show add button if none found\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, stakingInfo?.stakedAmount?.token)\n  const showAddLiquidityButton = Boolean(stakingInfo?.stakedAmount?.equalTo('0') && userLiquidityUnstaked?.equalTo('0'))\n\n  // toggle for staking modal and unstaking modal\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false)\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false)\n\n  // fade cards if nothing staked or nothing earned yet\n  const disableTop = !stakingInfo?.stakedAmount || stakingInfo.stakedAmount.equalTo(JSBI.BigInt(0))\n\n  const token = currencyA === ETHER ? tokenB : tokenA\n  const WETH = currencyA === ETHER ? tokenA : tokenB\n  const backgroundColor = useColor(token)\n\n  // get WETH value of staked LP tokens\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo?.stakedAmount?.token)\n  let valueOfTotalStakedAmountInWETH: TokenAmount | undefined\n  if (totalSupplyOfStakingToken && stakingTokenPair && stakingInfo && WETH) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = new TokenAmount(\n      WETH,\n      JSBI.divide(\n        JSBI.multiply(\n          JSBI.multiply(stakingInfo.totalStakedAmount.raw, stakingTokenPair.reserveOf(WETH).raw),\n          JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n        ),\n        totalSupplyOfStakingToken.raw\n      )\n    )\n  }\n\n  const countUpAmount = stakingInfo?.earnedAmount?.toFixed(6) ?? '0'\n  const countUpAmountPrevious = usePrevious(countUpAmount) ?? '0'\n\n  // get the USD value of staked WETH\n  const USDPrice = useUSDCPrice(WETH)\n  const valueOfTotalStakedAmountInUSDC =\n    valueOfTotalStakedAmountInWETH && USDPrice?.quote(valueOfTotalStakedAmountInWETH)\n\n  const toggleWalletModal = useWalletModalToggle()\n\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true)\n    } else {\n      toggleWalletModal()\n    }\n  }, [account, toggleWalletModal])\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <RowBetween style={{ gap: '24px' }}>\n        <TYPE.mediumHeader style={{ margin: 0 }}>\n          {currencyA?.symbol}-{currencyB?.symbol} Liquidity Mining\n        </TYPE.mediumHeader>\n        <DoubleCurrencyLogo currency0={currencyA ?? undefined} currency1={currencyB ?? undefined} size={24} />\n      </RowBetween>\n\n      <DataRow style={{ gap: '24px' }}>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <TYPE.body style={{ margin: 0 }}>Total deposits</TYPE.body>\n            <TYPE.body fontSize={24} fontWeight={500}>\n              {valueOfTotalStakedAmountInUSDC\n                ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, { groupSeparator: ',' })}`\n                : `${valueOfTotalStakedAmountInWETH?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} ETH`}\n            </TYPE.body>\n          </AutoColumn>\n        </PoolData>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <TYPE.body style={{ margin: 0 }}>Pool Rate</TYPE.body>\n            <TYPE.body fontSize={24} fontWeight={500}>\n              {stakingInfo?.active\n                ? stakingInfo?.totalRewardRate\n                    ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n                    ?.toFixed(0, { groupSeparator: ',' }) ?? '-'\n                : '0'}\n              {' UNI / week'}\n            </TYPE.body>\n          </AutoColumn>\n        </PoolData>\n      </DataRow>\n\n      {showAddLiquidityButton && (\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>Step 1. Get UNI-V2 Liquidity tokens</TYPE.white>\n              </RowBetween>\n              <RowBetween style={{ marginBottom: '1rem' }}>\n                <TYPE.white fontSize={14}>\n                  {`UNI-V2 LP tokens are required. Once you've added liquidity to the ${currencyA?.symbol}-${currencyB?.symbol} pool you can stake your liquidity tokens on this page.`}\n                </TYPE.white>\n              </RowBetween>\n              <ButtonPrimary\n                padding=\"8px\"\n                borderRadius=\"8px\"\n                width={'fit-content'}\n                as={Link}\n                to={`/add/${currencyA && currencyId(currencyA)}/${currencyB && currencyId(currencyB)}`}\n              >\n                {`Add ${currencyA?.symbol}-${currencyB?.symbol} liquidity`}\n              </ButtonPrimary>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n      )}\n\n      {stakingInfo && (\n        <>\n          <StakingModal\n            isOpen={showStakingModal}\n            onDismiss={() => setShowStakingModal(false)}\n            stakingInfo={stakingInfo}\n            userLiquidityUnstaked={userLiquidityUnstaked}\n          />\n          <UnstakingModal\n            isOpen={showUnstakingModal}\n            onDismiss={() => setShowUnstakingModal(false)}\n            stakingInfo={stakingInfo}\n          />\n          <ClaimRewardModal\n            isOpen={showClaimRewardModal}\n            onDismiss={() => setShowClaimRewardModal(false)}\n            stakingInfo={stakingInfo}\n          />\n        </>\n      )}\n\n      <PositionInfo gap=\"lg\" justify=\"center\" dim={showAddLiquidityButton}>\n        <BottomSection gap=\"lg\" justify=\"center\">\n          <StyledDataCard disabled={disableTop} bgColor={backgroundColor} showBackground={!showAddLiquidityButton}>\n            <CardSection>\n              <CardBGImage desaturate />\n              <CardNoise />\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <TYPE.white fontWeight={600}>Your liquidity deposits</TYPE.white>\n                </RowBetween>\n                <RowBetween style={{ alignItems: 'baseline' }}>\n                  <TYPE.white fontSize={36} fontWeight={600}>\n                    {stakingInfo?.stakedAmount?.toSignificant(6) ?? '-'}\n                  </TYPE.white>\n                  <TYPE.white>\n                    UNI-V2 {currencyA?.symbol}-{currencyB?.symbol}\n                  </TYPE.white>\n                </RowBetween>\n              </AutoColumn>\n            </CardSection>\n          </StyledDataCard>\n          <StyledBottomCard dim={stakingInfo?.stakedAmount?.equalTo(JSBI.BigInt(0))}>\n            <CardBGImage desaturate />\n            <CardNoise />\n            <AutoColumn gap=\"sm\">\n              <RowBetween>\n                <div>\n                  <TYPE.black>Your unclaimed UNI</TYPE.black>\n                </div>\n                {stakingInfo?.earnedAmount && JSBI.notEqual(BIG_INT_ZERO, stakingInfo?.earnedAmount?.raw) && (\n                  <ButtonEmpty\n                    padding=\"8px\"\n                    borderRadius=\"8px\"\n                    width=\"fit-content\"\n                    onClick={() => setShowClaimRewardModal(true)}\n                  >\n                    Claim\n                  </ButtonEmpty>\n                )}\n              </RowBetween>\n              <RowBetween style={{ alignItems: 'baseline' }}>\n                <TYPE.largeHeader fontSize={36} fontWeight={600}>\n                  <CountUp\n                    key={countUpAmount}\n                    isCounting\n                    decimalPlaces={4}\n                    start={parseFloat(countUpAmountPrevious)}\n                    end={parseFloat(countUpAmount)}\n                    thousandsSeparator={','}\n                    duration={1}\n                  />\n                </TYPE.largeHeader>\n                <TYPE.black fontSize={16} fontWeight={500}>\n                  <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px ' }}>\n                    ⚡\n                  </span>\n                  {stakingInfo?.active\n                    ? stakingInfo?.rewardRate\n                        ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n                        ?.toSignificant(4, { groupSeparator: ',' }) ?? '-'\n                    : '0'}\n                  {' UNI / week'}\n                </TYPE.black>\n              </RowBetween>\n            </AutoColumn>\n          </StyledBottomCard>\n        </BottomSection>\n        <TYPE.main style={{ textAlign: 'center' }} fontSize={14}>\n          <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px' }}>\n            ⭐️\n          </span>\n          When you withdraw, the contract will automagically claim UNI on your behalf!\n        </TYPE.main>\n\n        {!showAddLiquidityButton && (\n          <DataRow style={{ marginBottom: '1rem' }}>\n            {stakingInfo && stakingInfo.active && (\n              <ButtonPrimary padding=\"8px\" borderRadius=\"8px\" width=\"160px\" onClick={handleDepositClick}>\n                {stakingInfo?.stakedAmount?.greaterThan(JSBI.BigInt(0)) ? 'Deposit' : 'Deposit UNI-V2 LP Tokens'}\n              </ButtonPrimary>\n            )}\n\n            {stakingInfo?.stakedAmount?.greaterThan(JSBI.BigInt(0)) && (\n              <>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  width=\"160px\"\n                  onClick={() => setShowUnstakingModal(true)}\n                >\n                  Withdraw\n                </ButtonPrimary>\n              </>\n            )}\n          </DataRow>\n        )}\n        {!userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : !stakingInfo?.active ? null : (\n          <TYPE.main>{userLiquidityUnstaked.toSignificant(6)} UNI-V2 LP tokens available</TYPE.main>\n        )}\n      </PositionInfo>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}