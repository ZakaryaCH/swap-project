{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\nimport { UNSUPPORTED_LIST_URLS } from \"./../../constants/lists\";\nimport DEFAULT_TOKEN_LIST from \"@uniswap/default-token-list\";\nimport { ChainId, Token } from \"@uniswap/sdk\";\nimport { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport sortByListPriority from \"utils/listSort\";\nimport UNSUPPORTED_TOKEN_LIST from \"../../constants/tokenLists/uniswap-v2-unsupported.tokenlist.json\";\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo, tags) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tags = void 0;\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n\n}\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [ChainId.KOVAN]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.ROPSTEN]: {},\n  [ChainId.GÖRLI]: {},\n  [ChainId.MAINNET]: {}\n};\nconst listCache = typeof WeakMap !== \"undefined\" ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenInfo$tags$map$f, _tokenInfo$tags, _tokenInfo$tags$map;\n\n    const tags = (_tokenInfo$tags$map$f = (_tokenInfo$tags = tokenInfo.tags) === null || _tokenInfo$tags === void 0 ? void 0 : (_tokenInfo$tags$map = _tokenInfo$tags.map(tagId => {\n      var _list$tags;\n\n      if (!((_list$tags = list.tags) === null || _list$tags === void 0 ? void 0 : _list$tags[tagId])) return undefined;\n      return { ...list.tags[tagId],\n        id: tagId\n      };\n    })) === null || _tokenInfo$tags$map === void 0 ? void 0 : _tokenInfo$tags$map.filter(x => Boolean(x))) !== null && _tokenInfo$tags$map$f !== void 0 ? _tokenInfo$tags$map$f : [];\n    const token = new WrappedTokenInfo(tokenInfo, tags);\n    if (tokenMap[token.chainId][token.address] !== undefined) throw Error(\"Duplicate tokens.\");\n    return { ...tokenMap,\n      [token.chainId]: { ...tokenMap[token.chainId],\n        [token.address]: {\n          token,\n          list: list\n        }\n      }\n    };\n  }, { ...EMPTY_LIST\n  });\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\nexport function useAllLists() {\n  _s();\n\n  return useSelector(state => state.lists.byUrl);\n}\n\n_s(useAllLists, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nfunction combineMaps(map1, map2) {\n  return {\n    56: { ...map1[56],\n      ...map2[56]\n    },\n    97: { ...map1[97],\n      ...map2[97]\n    }\n  };\n} // merge tokens contained within lists from urls\n\n\nfunction useCombinedTokenMapFromUrls(urls) {\n  _s2();\n\n  const lists = useAllLists();\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n    return urls.slice() // sort by priority so top priority goes last\n    .sort(sortByListPriority).reduce((allTokens, currentUrl) => {\n      var _lists$currentUrl;\n\n      const current = (_lists$currentUrl = lists[currentUrl]) === null || _lists$currentUrl === void 0 ? void 0 : _lists$currentUrl.current;\n      if (!current) return allTokens;\n\n      try {\n        const newTokens = Object.assign(listToTokenMap(current));\n        return combineMaps(allTokens, newTokens);\n      } catch (error) {\n        console.error(\"Could not show token list due to error\", error);\n        return allTokens;\n      }\n    }, EMPTY_LIST);\n  }, [lists, urls]);\n} // filter out unsupported lists\n\n\n_s2(useCombinedTokenMapFromUrls, \"dehXRrnFU9pff84Mq4UWf/sQUEg=\", false, function () {\n  return [useAllLists];\n});\n\nexport function useActiveListUrls() {\n  _s3();\n\n  var _useSelector;\n\n  return (_useSelector = useSelector(state => state.lists.activeListUrls)) === null || _useSelector === void 0 ? void 0 : _useSelector.filter(url => !UNSUPPORTED_LIST_URLS.includes(url));\n}\n\n_s3(useActiveListUrls, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport function useInactiveListUrls() {\n  _s4();\n\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter(url => !(allActiveListUrls === null || allActiveListUrls === void 0 ? void 0 : allActiveListUrls.includes(url)) && !UNSUPPORTED_LIST_URLS.includes(url));\n} // get all the tokens from active lists, combine with local default tokens\n\n_s4(useInactiveListUrls, \"Aaa3RmQiPVrq8Yq5CzTAgDsk1NQ=\", false, function () {\n  return [useAllLists, useActiveListUrls];\n});\n\nexport function useCombinedActiveList() {\n  _s5();\n\n  const activeListUrls = useActiveListUrls();\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls);\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST);\n  return combineMaps(activeTokens, defaultTokenMap);\n} // all tokens from inactive lists\n\n_s5(useCombinedActiveList, \"QZotrOQv4eqlrVbyAJUYHF4JEV4=\", false, function () {\n  return [useActiveListUrls, useCombinedTokenMapFromUrls];\n});\n\nexport function useCombinedInactiveList() {\n  _s6();\n\n  const allInactiveListUrls = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n} // used to hide warnings on import for default tokens\n\n_s6(useCombinedInactiveList, \"KkTaFdmygCZo4aYLCj+AgUEN+q4=\", false, function () {\n  return [useInactiveListUrls, useCombinedTokenMapFromUrls];\n});\n\nexport function useDefaultTokenList() {\n  return listToTokenMap(DEFAULT_TOKEN_LIST);\n} // list of tokens not supported on interface, used to show warnings and prevent swaps and adds\n\nexport function useUnsupportedTokenList() {\n  _s7();\n\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST); // get any loaded unsupported tokens\n\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS); // format into one token address map\n\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap);\n}\n\n_s7(useUnsupportedTokenList, \"IDLqbTCADDxqzN3Mo99zPBv+VI4=\", false, function () {\n  return [useCombinedTokenMapFromUrls];\n});\n\nexport function useIsListActive(url) {\n  _s8();\n\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls === null || activeListUrls === void 0 ? void 0 : activeListUrls.includes(url));\n}\n\n_s8(useIsListActive, \"OzLukTCRH8SDpmsIh1vZXvu7OrM=\", false, function () {\n  return [useActiveListUrls];\n});","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/state/lists/hooks.ts"],"names":["UNSUPPORTED_LIST_URLS","DEFAULT_TOKEN_LIST","ChainId","Token","useMemo","useSelector","sortByListPriority","UNSUPPORTED_TOKEN_LIST","WrappedTokenInfo","constructor","tokenInfo","tags","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","KOVAN","RINKEBY","ROPSTEN","GÖRLI","MAINNET","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","tagId","undefined","id","filter","x","Boolean","token","Error","set","useAllLists","state","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","sort","allTokens","currentUrl","current","newTokens","Object","assign","error","console","useActiveListUrls","activeListUrls","url","includes","useInactiveListUrls","allActiveListUrls","keys","useCombinedActiveList","activeTokens","defaultTokenMap","useCombinedInactiveList","allInactiveListUrls","useDefaultTokenList","useUnsupportedTokenList","localUnsupportedListMap","loadedUnsupportedListMap","useIsListActive"],"mappings":"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","sourcesContent":["import { UNSUPPORTED_LIST_URLS } from \"./../../constants/lists\";\nimport DEFAULT_TOKEN_LIST from \"@uniswap/default-token-list\";\nimport { ChainId, Token } from \"@uniswap/sdk\";\nimport { Tags, TokenInfo, TokenList } from \"@uniswap/token-lists\";\nimport { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"../index\";\nimport sortByListPriority from \"utils/listSort\";\nimport UNSUPPORTED_TOKEN_LIST from \"../../constants/tokenLists/uniswap-v2-unsupported.tokenlist.json\";\n\ntype TagDetails = Tags[keyof Tags];\nexport interface TagInfo extends TagDetails {\n  id: string;\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo;\n  public readonly tags: TagInfo[];\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(\n      tokenInfo.chainId,\n      tokenInfo.address,\n      tokenInfo.decimals,\n      tokenInfo.symbol,\n      tokenInfo.name\n    );\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI;\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  {\n    [chainId in ChainId]: Readonly<{\n      [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList };\n    }>;\n  }\n>;\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.KOVAN]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.ROPSTEN]: {},\n  [ChainId.GÖRLI]: {},\n  [ChainId.MAINNET]: {},\n};\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== \"undefined\"\n    ? new WeakMap<TokenList, TokenAddressMap>()\n    : null;\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list);\n  if (result) return result;\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined;\n            return { ...list.tags[tagId], id: tagId };\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? [];\n      const token = new WrappedTokenInfo(tokenInfo, tags);\n      if (tokenMap[token.chainId][token.address] !== undefined)\n        throw Error(\"Duplicate tokens.\");\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list: list,\n          },\n        },\n      };\n    },\n    { ...EMPTY_LIST }\n  );\n  listCache?.set(list, map);\n  return map;\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null;\n    readonly pendingUpdate: TokenList | null;\n    readonly loadingRequestId: string | null;\n    readonly error: string | null;\n  };\n} {\n  return useSelector<AppState, AppState[\"lists\"][\"byUrl\"]>(\n    (state) => state.lists.byUrl\n  );\n}\n\nfunction combineMaps(\n  map1: TokenAddressMap,\n  map2: TokenAddressMap\n): TokenAddressMap {\n  return {\n    56: { ...map1[56], ...map2[56] },\n    97: { ...map1[97], ...map2[97] },\n  };\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(\n  urls: string[] | undefined\n): TokenAddressMap {\n  const lists = useAllLists();\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current;\n          if (!current) return allTokens;\n          try {\n            const newTokens = Object.assign(listToTokenMap(current));\n            return combineMaps(allTokens, newTokens);\n          } catch (error) {\n            console.error(\"Could not show token list due to error\", error);\n            return allTokens;\n          }\n        }, EMPTY_LIST)\n    );\n  }, [lists, urls]);\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState[\"lists\"][\"activeListUrls\"]>(\n    (state) => state.lists.activeListUrls\n  )?.filter((url) => !UNSUPPORTED_LIST_URLS.includes(url));\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter(\n    (url) =>\n      !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url)\n  );\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls();\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls);\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST);\n  return combineMaps(activeTokens, defaultTokenMap);\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST);\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST);\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(\n    UNSUPPORTED_LIST_URLS\n  );\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap);\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls?.includes(url));\n}\n"]},"metadata":{},"sourceType":"module"}