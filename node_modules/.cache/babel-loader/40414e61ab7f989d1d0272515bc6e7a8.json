{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Pool/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { JSBI } from '@uniswap/sdk';\nimport { Link } from 'react-router-dom';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport FullPositionCard from '../../components/PositionCard';\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'; // import { StyledInternalLink, ExternalLink, TYPE, HideSmall } from '../../theme'\n\nimport { StyledInternalLink, TYPE, HideSmall } from '../../theme';\nimport { Text } from 'rebass';\nimport Card from '../../components/Card';\nimport { RowBetween, RowFixed } from '../../components/Row';\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button';\nimport { AutoColumn } from '../../components/Column';\nimport { useActiveWeb3React } from '../../hooks';\nimport { usePairs } from '../../data/Reserves';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport { Dots } from '../../components/swap/styleds'; // import { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\n\nimport { useStakingInfo } from '../../state/stake/hooks';\nimport { BIG_INT_ZERO } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`; // const VoteCard = styled(DataCard)`\n//   background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n//   overflow: hidden;\n// `\n\n_c = PageWrapper;\nconst TitleRow = styled(RowBetween)`\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    flex-direction: column-reverse;\n  `};\n`;\n_c2 = TitleRow;\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`;\n_c3 = ButtonRow;\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  width: fit-content;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`;\n_c4 = ResponsiveButtonPrimary;\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  width: fit-content;\n  ${({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`;\n_c5 = ResponsiveButtonSecondary;\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({\n  theme\n}) => theme.text4};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n_c6 = EmptyProposals;\nexport default function Pool() {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const {\n    account\n  } = useActiveWeb3React(); // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs();\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => ({\n    liquidityToken: toV2LiquidityToken(tokens),\n    tokens\n  })), [trackedTokenPairs]);\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [tokenPairsWithLiquidityTokens]);\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, liquidityTokens); // fetch the reserves for all V2 pools in which the user has a balance\n\n  const liquidityTokensWithBalances = useMemo(() => tokenPairsWithLiquidityTokens.filter(({\n    liquidityToken\n  }) => {\n    var _v2PairsBalances$liqu;\n\n    return (_v2PairsBalances$liqu = v2PairsBalances[liquidityToken.address]) === null || _v2PairsBalances$liqu === void 0 ? void 0 : _v2PairsBalances$liqu.greaterThan('0');\n  }), [tokenPairsWithLiquidityTokens, v2PairsBalances]);\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({\n    tokens\n  }) => tokens));\n  const v2IsLoading = fetchingV2PairBalances || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.length) < liquidityTokensWithBalances.length || (v2Pairs === null || v2Pairs === void 0 ? void 0 : v2Pairs.some(V2Pair => !V2Pair));\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter(v2Pair => Boolean(v2Pair));\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens(); // show liquidity even if its deposited in rewards contract\n\n  const stakingInfo = useStakingInfo();\n  const stakingInfosWithBalance = stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.filter(pool => JSBI.greaterThan(pool.stakedAmount.raw, BIG_INT_ZERO));\n  const stakingPairs = usePairs(stakingInfosWithBalance === null || stakingInfosWithBalance === void 0 ? void 0 : stakingInfosWithBalance.map(stakingInfo => stakingInfo.tokens)); // remove any pairs that also are included in pairs with stake in mining pool\n\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter(v2Pair => {\n    return (stakingPairs === null || stakingPairs === void 0 ? void 0 : stakingPairs.map(stakingPair => stakingPair[1]).filter(stakingPair => (stakingPair === null || stakingPair === void 0 ? void 0 : stakingPair.liquidityToken.address) === v2Pair.liquidityToken.address).length) === 0;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PageWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n        active: 'pool'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"lg\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TitleRow, {\n            style: {\n              marginTop: '1rem'\n            },\n            padding: '0',\n            children: [/*#__PURE__*/_jsxDEV(HideSmall, {\n              children: /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n                style: {\n                  marginTop: '0.5rem',\n                  justifySelf: 'flex-start'\n                },\n                children: \"Your liquidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonRow, {\n              children: [/*#__PURE__*/_jsxDEV(ResponsiveButtonSecondary, {\n                as: Link,\n                padding: \"6px 8px\",\n                to: \"/create/ETH\",\n                children: \"Create a pair\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveButtonPrimary, {\n                id: \"join-pool-button\",\n                as: Link,\n                padding: \"6px 8px\",\n                borderRadius: \"12px\",\n                to: \"/add/ETH\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 16,\n                  children: \"Add Liquidity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), !account ? /*#__PURE__*/_jsxDEV(Card, {\n            padding: \"40px\",\n            children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n              color: theme.text3,\n              textAlign: \"center\",\n              children: \"Connect to a wallet to view your liquidity.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this) : v2IsLoading ? /*#__PURE__*/_jsxDEV(EmptyProposals, {\n            children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n              color: theme.text3,\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Dots, {\n                children: \"Loading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this) : (allV2PairsWithLiquidity === null || allV2PairsWithLiquidity === void 0 ? void 0 : allV2PairsWithLiquidity.length) > 0 || (stakingPairs === null || stakingPairs === void 0 ? void 0 : stakingPairs.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [v2PairsWithoutStakedAmount.map(v2Pair => /*#__PURE__*/_jsxDEV(FullPositionCard, {\n              pair: v2Pair\n            }, v2Pair.liquidityToken.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)), stakingPairs.map((stakingPair, i) => stakingPair[1] &&\n            /*#__PURE__*/\n            // skip pairs that arent loaded\n            _jsxDEV(FullPositionCard, {\n              pair: stakingPair[1],\n              stakedBalance: stakingInfosWithBalance[i].stakedAmount\n            }, stakingInfosWithBalance[i].stakingRewardAddress, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(EmptyProposals, {\n            children: /*#__PURE__*/_jsxDEV(TYPE.body, {\n              color: theme.text3,\n              textAlign: \"center\",\n              children: \"No liquidity found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: 'center',\n            gap: \"md\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              textAlign: \"center\",\n              fontSize: 14,\n              style: {\n                padding: '.5rem 0 .5rem 0'\n              },\n              children: [hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\", ' ', /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                id: \"import-pool-link\",\n                to: hasV1Liquidity ? '/migrate/v1' : '/find',\n                children: hasV1Liquidity ? 'Migrate now.' : 'Import it.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Pool, \"3iSL5hEAma3K/S4SiWCqrwBLRpc=\", false, function () {\n  return [useActiveWeb3React, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, usePairs, useUserHasLiquidityInAllTokens, useStakingInfo, usePairs];\n});\n\n_c7 = Pool;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"PageWrapper\");\n$RefreshReg$(_c2, \"TitleRow\");\n$RefreshReg$(_c3, \"ButtonRow\");\n$RefreshReg$(_c4, \"ResponsiveButtonPrimary\");\n$RefreshReg$(_c5, \"ResponsiveButtonSecondary\");\n$RefreshReg$(_c6, \"EmptyProposals\");\n$RefreshReg$(_c7, \"Pool\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Pool/index.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","JSBI","Link","SwapPoolTabs","FullPositionCard","useUserHasLiquidityInAllTokens","useTokenBalancesWithLoadingIndicator","StyledInternalLink","TYPE","HideSmall","Text","Card","RowBetween","RowFixed","ButtonPrimary","ButtonSecondary","AutoColumn","useActiveWeb3React","usePairs","toV2LiquidityToken","useTrackedTokenPairs","Dots","useStakingInfo","BIG_INT_ZERO","PageWrapper","TitleRow","theme","mediaWidth","upToSmall","ButtonRow","ResponsiveButtonPrimary","ResponsiveButtonSecondary","EmptyProposals","div","text4","Pool","account","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","liquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","undefined","liquidityTokensWithBalances","filter","address","greaterThan","v2Pairs","v2IsLoading","length","some","V2Pair","allV2PairsWithLiquidity","pair","v2Pair","Boolean","hasV1Liquidity","stakingInfo","stakingInfosWithBalance","pool","stakedAmount","raw","stakingPairs","v2PairsWithoutStakedAmount","stakingPair","width","marginTop","justifySelf","text3","i","stakingRewardAddress","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,mBAArC;AACA,SAAeC,IAAf,QAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,iCAA7B;AAEA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAASC,8BAAT,QAA+C,eAA/C;AACA,SAASC,oCAAT,QAAqD,0BAArD,C,CACA;;AACA,SAASC,kBAAT,EAA6BC,IAA7B,EAAmCC,SAAnC,QAAoD,aAApD;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,sBAArC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,yBAA/C;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,kBAAT,EAA6BC,oBAA7B,QAAyD,wBAAzD;AACA,SAASC,IAAT,QAAqB,+BAArB,C,CACA;;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,YAAT,QAA6B,iBAA7B;;;AAEA,MAAMC,WAAW,GAAGzB,MAAM,CAACiB,UAAD,CAAa;AACvC;AACA;AACA,CAHA,C,CAKA;AACA;AACA;AACA;;KARMQ,W;AAUN,MAAMC,QAAQ,GAAG1B,MAAM,CAACa,UAAD,CAAa;AACpC,IAAI,CAAC;AAAEc,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA;AACA;AACA;AACA,GAAI;AACJ,CAPA;MAAMH,Q;AASN,MAAMI,SAAS,GAAG9B,MAAM,CAACc,QAAD,CAAW;AACnC;AACA,IAAI,CAAC;AAAEa,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA;AACA;AACA,GAAI;AACJ,CAPA;MAAMC,S;AASN,MAAMC,uBAAuB,GAAG/B,MAAM,CAACe,aAAD,CAAgB;AACtD;AACA,IAAI,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA,GAAI;AACJ,CALA;MAAME,uB;AAON,MAAMC,yBAAyB,GAAGhC,MAAM,CAACgB,eAAD,CAAkB;AAC1D;AACA,IAAI,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UAAN,CAAiBC,SAAU;AAC9C;AACA,GAAI;AACJ,CALA;MAAMG,yB;AAON,MAAMC,cAAc,GAAGjC,MAAM,CAACkC,GAAI;AAClC,sBAAsB,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACQ,KAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMF,c;AAUN,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAC7B,QAAMT,KAAK,GAAG7B,UAAU,CAACG,YAAD,CAAxB;AACA,QAAM;AAAEoC,IAAAA;AAAF,MAAcnB,kBAAkB,EAAtC,CAF6B,CAI7B;;AACA,QAAMoB,iBAAiB,GAAGjB,oBAAoB,EAA9C;AACA,QAAMkB,6BAA6B,GAAGxC,OAAO,CAC3C,MAAMuC,iBAAiB,CAACE,GAAlB,CAAsBC,MAAM,KAAK;AAAEC,IAAAA,cAAc,EAAEtB,kBAAkB,CAACqB,MAAD,CAApC;AAA8CA,IAAAA;AAA9C,GAAL,CAA5B,CADqC,EAE3C,CAACH,iBAAD,CAF2C,CAA7C;AAIA,QAAMK,eAAe,GAAG5C,OAAO,CAAC,MAAMwC,6BAA6B,CAACC,GAA9B,CAAkCI,KAAK,IAAIA,KAAK,CAACF,cAAjD,CAAP,EAAyE,CACtGH,6BADsG,CAAzE,CAA/B;AAGA,QAAM,CAACM,eAAD,EAAkBC,sBAAlB,IAA4CvC,oCAAoC,CACpF8B,OADoF,aACpFA,OADoF,cACpFA,OADoF,GACzEU,SADyE,EAEpFJ,eAFoF,CAAtF,CAb6B,CAkB7B;;AACA,QAAMK,2BAA2B,GAAGjD,OAAO,CACzC,MACEwC,6BAA6B,CAACU,MAA9B,CAAqC,CAAC;AAAEP,IAAAA;AAAF,GAAD;AAAA;;AAAA,oCACnCG,eAAe,CAACH,cAAc,CAACQ,OAAhB,CADoB,0DACnC,sBAAyCC,WAAzC,CAAqD,GAArD,CADmC;AAAA,GAArC,CAFuC,EAKzC,CAACZ,6BAAD,EAAgCM,eAAhC,CALyC,CAA3C;AAQA,QAAMO,OAAO,GAAGjC,QAAQ,CAAC6B,2BAA2B,CAACR,GAA5B,CAAgC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgBA,MAAhD,CAAD,CAAxB;AACA,QAAMY,WAAW,GACfP,sBAAsB,IAAI,CAAAM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEE,MAAT,IAAkBN,2BAA2B,CAACM,MAAxE,KAAkFF,OAAlF,aAAkFA,OAAlF,uBAAkFA,OAAO,CAAEG,IAAT,CAAcC,MAAM,IAAI,CAACA,MAAzB,CAAlF,CADF;AAGA,QAAMC,uBAAuB,GAAGL,OAAO,CAACZ,GAAR,CAAY,CAAC,GAAGkB,IAAH,CAAD,KAAcA,IAA1B,EAAgCT,MAAhC,CAAwCU,MAAD,IAA4BC,OAAO,CAACD,MAAD,CAA1E,CAAhC;AAEA,QAAME,cAAc,GAAGvD,8BAA8B,EAArD,CAjC6B,CAmC7B;;AACA,QAAMwD,WAAW,GAAGvC,cAAc,EAAlC;AACA,QAAMwC,uBAAuB,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEb,MAAb,CAAoBe,IAAI,IAAI9D,IAAI,CAACiD,WAAL,CAAiBa,IAAI,CAACC,YAAL,CAAkBC,GAAnC,EAAwC1C,YAAxC,CAA5B,CAAhC;AACA,QAAM2C,YAAY,GAAGhD,QAAQ,CAAC4C,uBAAD,aAACA,uBAAD,uBAACA,uBAAuB,CAAEvB,GAAzB,CAA6BsB,WAAW,IAAIA,WAAW,CAACrB,MAAxD,CAAD,CAA7B,CAtC6B,CAwC7B;;AACA,QAAM2B,0BAA0B,GAAGX,uBAAuB,CAACR,MAAxB,CAA+BU,MAAM,IAAI;AAC1E,WACE,CAAAQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CACR3B,GADJ,CACQ6B,WAAW,IAAIA,WAAW,CAAC,CAAD,CADlC,EAEGpB,MAFH,CAEUoB,WAAW,IAAI,CAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAE3B,cAAb,CAA4BQ,OAA5B,MAAwCS,MAAM,CAACjB,cAAP,CAAsBQ,OAFvF,EAEgGI,MAFhG,MAE2G,CAH7G;AAKD,GANkC,CAAnC;AAQA,sBACE;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eA4BE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,IAAhB;AAAqB,QAAA,OAAO,EAAC,QAA7B;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC,IAAhB;AAAqB,UAAA,KAAK,EAAE;AAAEgB,YAAAA,KAAK,EAAE;AAAT,WAA5B;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAjB;AAAwC,YAAA,OAAO,EAAE,GAAjD;AAAA,oCACE,QAAC,SAAD;AAAA,qCACE,QAAC,IAAD,CAAM,YAAN;AAAmB,gBAAA,KAAK,EAAE;AAAEA,kBAAAA,SAAS,EAAE,QAAb;AAAuBC,kBAAAA,WAAW,EAAE;AAApC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,SAAD;AAAA,sCACE,QAAC,yBAAD;AAA2B,gBAAA,EAAE,EAAErE,IAA/B;AAAqC,gBAAA,OAAO,EAAC,SAA7C;AAAuD,gBAAA,EAAE,EAAC,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,uBAAD;AACE,gBAAA,EAAE,EAAC,kBADL;AAEE,gBAAA,EAAE,EAAEA,IAFN;AAGE,gBAAA,OAAO,EAAC,SAHV;AAIE,gBAAA,YAAY,EAAC,MAJf;AAKE,gBAAA,EAAE,EAAC,UALL;AAAA,uCAOE,QAAC,IAAD;AAAM,kBAAA,UAAU,EAAE,GAAlB;AAAuB,kBAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAyBG,CAACkC,OAAD,gBACC,QAAC,IAAD;AAAM,YAAA,OAAO,EAAC,MAAd;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,KAAK,EAAEV,KAAK,CAAC8C,KAAxB;AAA+B,cAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD,GAMGpB,WAAW,gBACb,QAAC,cAAD;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,KAAK,EAAE1B,KAAK,CAAC8C,KAAxB;AAA+B,cAAA,SAAS,EAAC,QAAzC;AAAA,qCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADa,GAMX,CAAAhB,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,YAAAA,uBAAuB,CAAEH,MAAzB,IAAkC,CAAlC,IAAuC,CAAAa,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEb,MAAd,IAAuB,CAA9D,gBACF;AAAA,uBASGc,0BAA0B,CAAC5B,GAA3B,CAA+BmB,MAAM,iBACpC,QAAC,gBAAD;AAAsD,cAAA,IAAI,EAAEA;AAA5D,eAAuBA,MAAM,CAACjB,cAAP,CAAsBQ,OAA7C;AAAA;AAAA;AAAA;AAAA,oBADD,CATH,EAYGiB,YAAY,CAAC3B,GAAb,CACC,CAAC6B,WAAD,EAAcK,CAAd,KACEL,WAAW,CAAC,CAAD,CAAX;AAAA;AAAoB;AAClB,oBAAC,gBAAD;AAEE,cAAA,IAAI,EAAEA,WAAW,CAAC,CAAD,CAFnB;AAGE,cAAA,aAAa,EAAEN,uBAAuB,CAACW,CAAD,CAAvB,CAA2BT;AAH5C,eACOF,uBAAuB,CAACW,CAAD,CAAvB,CAA2BC,oBADlC;AAAA;AAAA;AAAA;AAAA,oBAHL,CAZH;AAAA,0BADE,gBAyBF,QAAC,cAAD;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,KAAK,EAAEhD,KAAK,CAAC8C,KAAxB;AAA+B,cAAA,SAAS,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9DJ,eAqEE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,QAArB;AAA+B,YAAA,GAAG,EAAC,IAAnC;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,QAAhB;AAAyB,cAAA,QAAQ,EAAE,EAAnC;AAAuC,cAAA,KAAK,EAAE;AAAEG,gBAAAA,OAAO,EAAE;AAAX,eAA9C;AAAA,yBACGf,cAAc,GAAG,6BAAH,GAAmC,8BADpD,EACoF,GADpF,eAEE,QAAC,kBAAD;AAAoB,gBAAA,EAAE,EAAC,kBAAvB;AAA0C,gBAAA,EAAE,EAAEA,cAAc,GAAG,aAAH,GAAmB,OAA/E;AAAA,0BACGA,cAAc,GAAG,cAAH,GAAoB;AADrC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiHD;;GAlKuBzB,I;UAEFlB,kB,EAGMG,oB,EAQwBd,oC,EAclCY,Q,EAMOb,8B,EAGHiB,c,EAECJ,Q;;;MAtCCiB,I","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Pair, JSBI } from '@uniswap/sdk'\nimport { Link } from 'react-router-dom'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\n\nimport FullPositionCard from '../../components/PositionCard'\nimport { useUserHasLiquidityInAllTokens } from '../../data/V1'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\n// import { StyledInternalLink, ExternalLink, TYPE, HideSmall } from '../../theme'\nimport { StyledInternalLink, TYPE, HideSmall } from '../../theme'\nimport { Text } from 'rebass'\nimport Card from '../../components/Card'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport { ButtonPrimary, ButtonSecondary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { usePairs } from '../../data/Reserves'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport { Dots } from '../../components/swap/styleds'\n// import { CardSection, DataCard, CardNoise, CardBGImage } from '../../components/earn/styled'\n\nimport { useStakingInfo } from '../../state/stake/hooks'\nimport { BIG_INT_ZERO } from '../../constants'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\n// const VoteCard = styled(DataCard)`\n//   background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n//   overflow: hidden;\n// `\n\nconst TitleRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    flex-direction: column-reverse;\n  `};\n`\n\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`\n\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  width: fit-content;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  width: fit-content;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({ theme }) => theme.text4};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map(tokens => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map(tpwlt => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some(V2Pair => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  const hasV1Liquidity = useUserHasLiquidityInAllTokens()\n\n  // show liquidity even if its deposited in rewards contract\n  const stakingInfo = useStakingInfo()\n  const stakingInfosWithBalance = stakingInfo?.filter(pool => JSBI.greaterThan(pool.stakedAmount.raw, BIG_INT_ZERO))\n  const stakingPairs = usePairs(stakingInfosWithBalance?.map(stakingInfo => stakingInfo.tokens))\n\n  // remove any pairs that also are included in pairs with stake in mining pool\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity.filter(v2Pair => {\n    return (\n      stakingPairs\n        ?.map(stakingPair => stakingPair[1])\n        .filter(stakingPair => stakingPair?.liquidityToken.address === v2Pair.liquidityToken.address).length === 0\n    )\n  })\n\n  return (\n    <>\n      <PageWrapper>\n        <SwapPoolTabs active={'pool'} />\n        {/* <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>Liquidity provider rewards</TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  {`Liquidity providers earn a 0.3% fee on all trades proportional to their share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.`}\n                </TYPE.white>\n              </RowBetween>\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                target=\"_blank\"\n                href=\"https://uniswap.org/docs/v2/core-concepts/pools/\"\n              >\n                <TYPE.white fontSize={14}>Read more about providing liquidity</TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard> */}\n\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <AutoColumn gap=\"lg\" style={{ width: '100%' }}>\n            <TitleRow style={{ marginTop: '1rem' }} padding={'0'}>\n              <HideSmall>\n                <TYPE.mediumHeader style={{ marginTop: '0.5rem', justifySelf: 'flex-start' }}>\n                  Your liquidity\n                </TYPE.mediumHeader>\n              </HideSmall>\n              <ButtonRow>\n                <ResponsiveButtonSecondary as={Link} padding=\"6px 8px\" to=\"/create/ETH\">\n                  Create a pair\n                </ResponsiveButtonSecondary>\n                <ResponsiveButtonPrimary\n                  id=\"join-pool-button\"\n                  as={Link}\n                  padding=\"6px 8px\"\n                  borderRadius=\"12px\"\n                  to=\"/add/ETH\"\n                >\n                  <Text fontWeight={500} fontSize={16}>\n                    Add Liquidity\n                  </Text>\n                </ResponsiveButtonPrimary>\n              </ButtonRow>\n            </TitleRow>\n\n            {!account ? (\n              <Card padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  Connect to a wallet to view your liquidity.\n                </TYPE.body>\n              </Card>\n            ) : v2IsLoading ? (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Dots>Loading</Dots>\n                </TYPE.body>\n              </EmptyProposals>\n            ) : allV2PairsWithLiquidity?.length > 0 || stakingPairs?.length > 0 ? (\n              <>\n                {/* <ButtonSecondary>\n                  <RowBetween>\n                    <ExternalLink href={'https://uniswap.info/account/' + account}>\n                      Account analytics and accrued fees\n                    </ExternalLink>\n                    <span> ↗</span>\n                  </RowBetween>\n                </ButtonSecondary> */}\n                {v2PairsWithoutStakedAmount.map(v2Pair => (\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                ))}\n                {stakingPairs.map(\n                  (stakingPair, i) =>\n                    stakingPair[1] && ( // skip pairs that arent loaded\n                      <FullPositionCard\n                        key={stakingInfosWithBalance[i].stakingRewardAddress}\n                        pair={stakingPair[1]}\n                        stakedBalance={stakingInfosWithBalance[i].stakedAmount}\n                      />\n                    )\n                )}\n              </>\n            ) : (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  No liquidity found.\n                </TYPE.body>\n              </EmptyProposals>\n            )}\n\n            <AutoColumn justify={'center'} gap=\"md\">\n              <Text textAlign=\"center\" fontSize={14} style={{ padding: '.5rem 0 .5rem 0' }}>\n                {hasV1Liquidity ? 'Uniswap V1 liquidity found!' : \"Don't see a pool you joined?\"}{' '}\n                <StyledInternalLink id=\"import-pool-link\" to={hasV1Liquidity ? '/migrate/v1' : '/find'}>\n                  {hasV1Liquidity ? 'Migrate now.' : 'Import it.'}\n                </StyledInternalLink>\n              </Text>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </PageWrapper>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}