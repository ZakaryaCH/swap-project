{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, memo, useContext } from 'react';\nimport { ChevronRight } from 'react-feather';\nimport { Flex } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { TYPE } from '../../theme';\nimport { unwrappedToken } from 'utils/wrappedCurrency';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function SwapRoute({\n  trade\n}) {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    children: trade.route.path.map((token, i, path) => {\n      const isLastItem = i === path.length - 1;\n      const currency = unwrappedToken(token);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"end\",\n          children: /*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            color: theme.text1,\n            ml: \"0.125rem\",\n            mr: \"0.125rem\",\n            children: currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), isLastItem ? null : /*#__PURE__*/_jsxDEV(ChevronRight, {\n          size: 12,\n          color: theme.text2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 34\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}, \"+C1P7ukOg/azcV4AZ819oyezFOE=\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapRoute.tsx"],"names":["React","Fragment","memo","useContext","ChevronRight","Flex","ThemeContext","TYPE","unwrappedToken","SwapRoute","trade","theme","route","path","map","token","i","isLastItem","length","currency","text1","symbol","text2"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,UAAhC,QAAkD,OAAlD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,kCAAeN,IAAI,SAAC,SAASO,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAgD;AAAA;;AAClE,QAAMC,KAAK,GAAGR,UAAU,CAACG,YAAD,CAAxB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAmC,IAAA,cAAc,EAAC,UAAlD;AAA6D,IAAA,UAAU,EAAC,QAAxE;AAAA,cACGI,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,CAAR,EAAWH,IAAX,KAAoB;AACxC,YAAMI,UAAmB,GAAGD,CAAC,KAAKH,IAAI,CAACK,MAAL,GAAc,CAAhD;AACA,YAAMC,QAAQ,GAAGX,cAAc,CAACO,KAAD,CAA/B;AACA,0BACE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,KAAjB;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,QAAQ,EAAE,EAAtB;AAA0B,YAAA,KAAK,EAAEJ,KAAK,CAACS,KAAvC;AAA8C,YAAA,EAAE,EAAC,UAAjD;AAA4D,YAAA,EAAE,EAAC,UAA/D;AAAA,sBACGD,QAAQ,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAMGJ,UAAU,GAAG,IAAH,gBAAU,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE,EAApB;AAAwB,UAAA,KAAK,EAAEN,KAAK,CAACW;AAArC;AAAA;AAAA;AAAA;AAAA,gBANvB;AAAA,SAAeN,CAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAbA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApBkB,kCAAnB","sourcesContent":["import { Trade } from '@uniswap/sdk'\nimport React, { Fragment, memo, useContext } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Flex } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { TYPE } from '../../theme'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <TYPE.black fontSize={14} color={theme.text1} ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </TYPE.black>\n            </Flex>\n            {isLastItem ? null : <ChevronRight size={12} color={theme.text2} />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}