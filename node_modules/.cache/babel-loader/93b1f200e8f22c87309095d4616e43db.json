{"ast":null,"code":"import { Web3Provider } from \"@ethersproject/providers\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { PortisConnector } from \"@web3-react/portis-connector\";\nimport { FortmaticConnector } from \"./Fortmatic\";\nimport { NetworkConnector } from \"./NetworkConnector\";\nimport { ChainId, RpcUrl } from \"types\";\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID;\nexport const network = new NetworkConnector({\n  urls: {\n    [ChainId.MAINNET]: RpcUrl.MAINNET,\n    [ChainId.TESTNET]: RpcUrl.TESTNET\n  }\n});\nlet networkLibrary;\nexport function getNetworkLibrary() {\n  var _networkLibrary;\n\n  return networkLibrary = (_networkLibrary = networkLibrary) !== null && _networkLibrary !== void 0 ? _networkLibrary : new Web3Provider(network.provider);\n}\nexport const injected = new InjectedConnector({\n  supportedChainIds: [ChainId.MAINNET, ChainId.TESTNET]\n}); // mainnet only\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    [ChainId.MAINNET]: RpcUrl.MAINNET,\n    [ChainId.TESTNET]: RpcUrl.TESTNET\n  },\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true,\n  pollingInterval: 15000\n}); // mainnet only\n\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY !== null && FORMATIC_KEY !== void 0 ? FORMATIC_KEY : \"\",\n  chainId: 1\n}); // mainnet only\n\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID !== null && PORTIS_ID !== void 0 ? PORTIS_ID : \"\",\n  networks: [1]\n}); // mainnet only\n\nexport const walletlink = new WalletLinkConnector({\n  url: RpcUrl.MAINNET,\n  appName: \"Uniswap\",\n  appLogoUrl: \"https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg\"\n});","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/connectors/index.ts"],"names":["Web3Provider","InjectedConnector","WalletConnectConnector","WalletLinkConnector","PortisConnector","FortmaticConnector","NetworkConnector","ChainId","RpcUrl","FORMATIC_KEY","process","env","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","network","urls","MAINNET","TESTNET","networkLibrary","getNetworkLibrary","provider","injected","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","fortmatic","apiKey","chainId","portis","dAppId","networks","walletlink","url","appName","appLogoUrl"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,eAAT,QAAgC,8BAAhC;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAjC;AACA,MAAMC,SAAS,GAAGH,OAAO,CAACC,GAAR,CAAYG,mBAA9B;AAEA,OAAO,MAAMC,OAAO,GAAG,IAAIT,gBAAJ,CAAqB;AAC1CU,EAAAA,IAAI,EAAE;AACJ,KAACT,OAAO,CAACU,OAAT,GAAmBT,MAAM,CAACS,OADtB;AAEJ,KAACV,OAAO,CAACW,OAAT,GAAmBV,MAAM,CAACU;AAFtB;AADoC,CAArB,CAAhB;AAOP,IAAIC,cAAJ;AACA,OAAO,SAASC,iBAAT,GAA2C;AAAA;;AAChD,SAAQD,cAAc,sBACpBA,cADoB,6DACF,IAAInB,YAAJ,CAAiBe,OAAO,CAACM,QAAzB,CADpB;AAED;AAED,OAAO,MAAMC,QAAQ,GAAG,IAAIrB,iBAAJ,CAAsB;AAC5CsB,EAAAA,iBAAiB,EAAE,CAAChB,OAAO,CAACU,OAAT,EAAkBV,OAAO,CAACW,OAA1B;AADyB,CAAtB,CAAjB,C,CAIP;;AACA,OAAO,MAAMM,aAAa,GAAG,IAAItB,sBAAJ,CAA2B;AACtDuB,EAAAA,GAAG,EAAE;AAAE,KAAClB,OAAO,CAACU,OAAT,GAAmBT,MAAM,CAACS,OAA5B;AAAqC,KAACV,OAAO,CAACW,OAAT,GAAmBV,MAAM,CAACU;AAA/D,GADiD;AAEtDQ,EAAAA,MAAM,EAAE,kCAF8C;AAGtDC,EAAAA,MAAM,EAAE,IAH8C;AAItDC,EAAAA,eAAe,EAAE;AAJqC,CAA3B,CAAtB,C,CAOP;;AACA,OAAO,MAAMC,SAAS,GAAG,IAAIxB,kBAAJ,CAAuB;AAC9CyB,EAAAA,MAAM,EAAErB,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkB,EADsB;AAE9CsB,EAAAA,OAAO,EAAE;AAFqC,CAAvB,CAAlB,C,CAKP;;AACA,OAAO,MAAMC,MAAM,GAAG,IAAI5B,eAAJ,CAAoB;AACxC6B,EAAAA,MAAM,EAAEpB,SAAF,aAAEA,SAAF,cAAEA,SAAF,GAAe,EADmB;AAExCqB,EAAAA,QAAQ,EAAE,CAAC,CAAD;AAF8B,CAApB,CAAf,C,CAKP;;AACA,OAAO,MAAMC,UAAU,GAAG,IAAIhC,mBAAJ,CAAwB;AAChDiC,EAAAA,GAAG,EAAE5B,MAAM,CAACS,OADoC;AAEhDoB,EAAAA,OAAO,EAAE,SAFuC;AAGhDC,EAAAA,UAAU,EACR;AAJ8C,CAAxB,CAAnB","sourcesContent":["import { Web3Provider } from \"@ethersproject/providers\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\nimport { PortisConnector } from \"@web3-react/portis-connector\";\n\nimport { FortmaticConnector } from \"./Fortmatic\";\nimport { NetworkConnector } from \"./NetworkConnector\";\nimport { ChainId, RpcUrl } from \"types\";\n\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY;\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID;\n\nexport const network = new NetworkConnector({\n  urls: {\n    [ChainId.MAINNET]: RpcUrl.MAINNET,\n    [ChainId.TESTNET]: RpcUrl.TESTNET,\n  },\n});\n\nlet networkLibrary: Web3Provider | undefined;\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary =\n    networkLibrary ?? new Web3Provider(network.provider as any));\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [ChainId.MAINNET, ChainId.TESTNET],\n});\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [ChainId.MAINNET]: RpcUrl.MAINNET, [ChainId.TESTNET]: RpcUrl.TESTNET },\n  bridge: \"https://bridge.walletconnect.org\",\n  qrcode: true,\n  pollingInterval: 15000,\n});\n\n// mainnet only\nexport const fortmatic = new FortmaticConnector({\n  apiKey: FORMATIC_KEY ?? \"\",\n  chainId: 1,\n});\n\n// mainnet only\nexport const portis = new PortisConnector({\n  dAppId: PORTIS_ID ?? \"\",\n  networks: [1],\n});\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: RpcUrl.MAINNET,\n  appName: \"Uniswap\",\n  appLogoUrl:\n    \"https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg\",\n});\n"]},"metadata":{},"sourceType":"module"}