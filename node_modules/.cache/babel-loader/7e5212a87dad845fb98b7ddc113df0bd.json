{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/RemoveV1Exchange.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { JSBI, Token, TokenAmount, WETH, Fraction, Percent, CurrencyAmount } from '@uniswap/sdk';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Redirect } from 'react-router';\nimport { ButtonConfirmed } from '../../components/Button';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { AutoRow } from '../../components/Row';\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useToken } from '../../hooks/Tokens';\nimport { useV1ExchangeContract } from '../../hooks/useContract';\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks';\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks';\nimport { useTokenBalance, useETHBalances } from '../../state/wallet/hooks';\nimport { BackArrow, TYPE } from '../../theme';\nimport { isAddress } from '../../utils';\nimport { BodyWrapper } from '../AppBody';\nimport { EmptyState } from './EmptyState';\nimport { V1LiquidityInfo } from './MigrateV1Exchange';\nimport { AddressZero } from '@ethersproject/constants';\nimport { Dots } from '../../components/swap/styleds';\nimport { useTotalSupply } from '../../data/TotalSupply';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token\n}) {\n  _s();\n\n  var _useETHBalances;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n  const [confirmingRemoval, setConfirmingRemoval] = useState(false);\n  const [pendingRemovalHash, setPendingRemovalHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const addTransaction = useTransactionAdder();\n  const isRemovalPending = useIsTransactionPending(pendingRemovalHash !== null && pendingRemovalHash !== void 0 ? pendingRemovalHash : undefined);\n  const remove = useCallback(() => {\n    if (!liquidityTokenAmount) return;\n    setConfirmingRemoval(true);\n    exchangeContract.removeLiquidity(liquidityTokenAmount.raw.toString(), 1, // min_eth, this is safe because we're removing liquidity\n    1, // min_tokens, this is safe because we're removing liquidity\n    Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW).then(response => {\n      ReactGA.event({\n        category: 'Remove',\n        action: 'V1',\n        label: token === null || token === void 0 ? void 0 : token.symbol\n      });\n      addTransaction(response, {\n        summary: `Remove ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n      });\n      setPendingRemovalHash(response.hash);\n    }).catch(error => {\n      console.error(error);\n      setConfirmingRemoval(false);\n    });\n  }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction]);\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const isSuccessfullyRemoved = !!pendingRemovalHash && noLiquidityTokens;\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: \"This tool will remove your V1 liquidity and send the underlying assets to your wallet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: [/*#__PURE__*/_jsxDEV(V1LiquidityInfo, {\n        token: token,\n        liquidityTokenAmount: liquidityTokenAmount,\n        tokenWorth: tokenWorth,\n        ethWorth: ethWorth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginTop: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n          confirmed: isSuccessfullyRemoved,\n          disabled: isSuccessfullyRemoved || noLiquidityTokens || isRemovalPending || confirmingRemoval,\n          onClick: remove,\n          children: isSuccessfullyRemoved ? 'Success' : isRemovalPending ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: \"Removing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 69\n          }, this) : 'Remove'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n      style: {\n        textAlign: 'center'\n      },\n      children: `Your Uniswap V1 ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH liquidity will be redeemed for underlying assets.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(V1PairRemoval, \"bpW6meX+yWzGx2OzbdM3QatIJuI=\", false, function () {\n  return [useActiveWeb3React, useTotalSupply, useETHBalances, useTokenBalance, useTransactionAdder, useIsTransactionPending];\n});\n\n_c = V1PairRemoval;\nexport default function RemoveV1Exchange({\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s2();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined, true);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1') : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    id: \"remove-v1-exchange\",\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Remove V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Remove your Uniswap V1 liquidity tokens.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n        children: \"You must connect an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : userLiquidityBalance && token && exchangeContract ? /*#__PURE__*/_jsxDEV(V1PairRemoval, {\n        exchangeContract: exchangeContract,\n        liquidityTokenAmount: userLiquidityBalance,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n        message: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(RemoveV1Exchange, \"z1J1fbUzEnt2GJn4Tr7V1Id5IB8=\", false, function () {\n  return [useActiveWeb3React, useV1ExchangeContract, useSingleCallResult, useToken, useTokenBalance];\n});\n\n_c2 = RemoveV1Exchange;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"V1PairRemoval\");\n$RefreshReg$(_c2, \"RemoveV1Exchange\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/RemoveV1Exchange.tsx"],"names":["JSBI","Token","TokenAmount","WETH","Fraction","Percent","CurrencyAmount","React","useCallback","useMemo","useState","ReactGA","Redirect","ButtonConfirmed","LightCard","AutoColumn","QuestionHelper","AutoRow","DEFAULT_DEADLINE_FROM_NOW","useActiveWeb3React","useToken","useV1ExchangeContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useTokenBalance","useETHBalances","BackArrow","TYPE","isAddress","BodyWrapper","EmptyState","V1LiquidityInfo","AddressZero","Dots","useTotalSupply","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","V1PairRemoval","exchangeContract","liquidityTokenAmount","token","chainId","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","confirmingRemoval","setConfirmingRemoval","pendingRemovalHash","setPendingRemovalHash","shareFraction","raw","ethWorth","ether","multiply","quotient","tokenWorth","addTransaction","isRemovalPending","undefined","remove","removeLiquidity","toString","Math","floor","Date","getTime","then","response","event","category","action","label","symbol","summary","equals","hash","catch","error","console","noLiquidityTokens","equalTo","isSuccessfullyRemoved","fontWeight","display","marginTop","textAlign","RemoveV1Exchange","match","params","validatedAddress","account","tokenAddress","result","liquidityToken","userLiquidityBalance","padding","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/abstract-provider'\nimport { JSBI, Token, TokenAmount, WETH, Fraction, Percent, CurrencyAmount } from '@uniswap/sdk'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { ButtonConfirmed } from '../../components/Button'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow } from '../../components/Row'\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useToken } from '../../hooks/Tokens'\nimport { useV1ExchangeContract } from '../../hooks/useContract'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from '../../state/transactions/hooks'\nimport { useTokenBalance, useETHBalances } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../theme'\nimport { isAddress } from '../../utils'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport { V1LiquidityInfo } from './MigrateV1Exchange'\nimport { AddressZero } from '@ethersproject/constants'\nimport { Dots } from '../../components/swap/styleds'\nimport { Contract } from '@ethersproject/contracts'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18))\nconst ZERO = JSBI.BigInt(0)\nconst ONE = JSBI.BigInt(1)\nconst ZERO_FRACTION = new Fraction(ZERO, ONE)\n\nfunction V1PairRemoval({\n  exchangeContract,\n  liquidityTokenAmount,\n  token\n}: {\n  exchangeContract: Contract\n  liquidityTokenAmount: TokenAmount\n  token: Token\n}) {\n  const { chainId } = useActiveWeb3React()\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token)\n  const exchangeETHBalance = useETHBalances([liquidityTokenAmount.token.address])?.[liquidityTokenAmount.token.address]\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token)\n\n  const [confirmingRemoval, setConfirmingRemoval] = useState<boolean>(false)\n  const [pendingRemovalHash, setPendingRemovalHash] = useState<string | null>(null)\n\n  const shareFraction: Fraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient)\n    : CurrencyAmount.ether(ZERO)\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient)\n    : new TokenAmount(token, ZERO)\n\n  const addTransaction = useTransactionAdder()\n  const isRemovalPending = useIsTransactionPending(pendingRemovalHash ?? undefined)\n\n  const remove = useCallback(() => {\n    if (!liquidityTokenAmount) return\n\n    setConfirmingRemoval(true)\n    exchangeContract\n      .removeLiquidity(\n        liquidityTokenAmount.raw.toString(),\n        1, // min_eth, this is safe because we're removing liquidity\n        1, // min_tokens, this is safe because we're removing liquidity\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: 'Remove',\n          action: 'V1',\n          label: token?.symbol\n        })\n\n        addTransaction(response, {\n          summary: `Remove ${chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH V1 liquidity`\n        })\n        setPendingRemovalHash(response.hash)\n      })\n      .catch((error: Error) => {\n        console.error(error)\n        setConfirmingRemoval(false)\n      })\n  }, [exchangeContract, liquidityTokenAmount, token, chainId, addTransaction])\n\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO)\n\n  const isSuccessfullyRemoved = !!pendingRemovalHash && noLiquidityTokens\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will remove your V1 liquidity and send the underlying assets to your wallet.\n      </TYPE.body>\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: 'flex', marginTop: '1rem' }}>\n          <ButtonConfirmed\n            confirmed={isSuccessfullyRemoved}\n            disabled={isSuccessfullyRemoved || noLiquidityTokens || isRemovalPending || confirmingRemoval}\n            onClick={remove}\n          >\n            {isSuccessfullyRemoved ? 'Success' : isRemovalPending ? <Dots>Removing</Dots> : 'Remove'}\n          </ButtonConfirmed>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: 'center' }}>\n        {`Your Uniswap V1 ${\n          chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol\n        }/ETH liquidity will be redeemed for underlying assets.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  )\n}\n\nexport default function RemoveV1Exchange({\n  match: {\n    params: { address }\n  }\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address)\n  const { chainId, account } = useActiveWeb3React()\n\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined, true)\n  const tokenAddress = useSingleCallResult(exchangeContract, 'tokenAddress', undefined, NEVER_RELOAD)?.result?.[0]\n  const token = useToken(tokenAddress)\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, 'Uniswap V1')\n        : undefined,\n    [chainId, validatedAddress, token]\n  )\n  const userLiquidityBalance = useTokenBalance(account ?? undefined, liquidityToken)\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error('Invalid address in path', address)\n    return <Redirect to=\"/migrate/v1\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }} id=\"remove-v1-exchange\">\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Remove V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Remove your Uniswap V1 liquidity tokens.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : userLiquidityBalance && token && exchangeContract ? (\n          <V1PairRemoval\n            exchangeContract={exchangeContract}\n            liquidityTokenAmount={userLiquidityBalance}\n            token={token}\n          />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}