{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$();\n\nimport { abi as GOVERNANCE_ABI } from \"@uniswap/governance/build/GovernorAlpha.json\";\nimport { abi as UNI_ABI } from \"@uniswap/governance/build/Uni.json\";\nimport { abi as STAKING_REWARDS_ABI } from \"@uniswap/liquidity-staker/build/StakingRewards.json\";\nimport { ChainId } from \"../types\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/IUniswapV2Pair.json\";\nimport { useMemo } from \"react\";\nimport { GOVERNANCE_ADDRESS } from \"../constants\";\nimport { ARGENT_WALLET_DETECTOR_ABI, ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS } from \"../constants/abis/argent-wallet-detector\";\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\nimport { ERC20_BYTES32_ABI } from \"../constants/abis/erc20\";\nimport ERC20_ABI from \"../constants/abis/erc20.json\";\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from \"../constants/abis/migrator\";\nimport UNISOCKS_ABI from \"../constants/abis/unisocks.json\";\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\nimport { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from \"../constants/v1\";\nimport { getContract } from \"../utils\";\nimport { useActiveWeb3React } from \"./index\"; // returns null on errors\n\nfunction useContract(address, ABI, withSignerIfPossible = true) {\n  _s();\n\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"bS5GtDgwY2raBDSgRZeif67r/2o=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useV1FactoryContract() {\n  _s2();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && V1_FACTORY_ADDRESSES[chainId], V1_FACTORY_ABI, false);\n}\n\n_s2(useV1FactoryContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useV2MigratorContract() {\n  _s3();\n\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\n\n_s3(useV2MigratorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV1ExchangeContract(address, withSignerIfPossible) {\n  _s4();\n\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\n\n_s4(useV1ExchangeContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  _s5();\n\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\n_s5(useTokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useArgentWalletDetectorContract() {\n  _s6();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined, ARGENT_WALLET_DETECTOR_ABI, false);\n}\n\n_s6(useArgentWalletDetectorContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  _s7();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\n_s7(useENSRegistrarContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  _s8();\n\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\n_s8(useENSResolverContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  _s9();\n\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\n_s9(useBytes32TokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  _s10();\n\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\n_s10(usePairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useMulticallContract() {\n  _s11();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\n_s11(useMulticallContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useMerkleDistributorContract() {// const { chainId } = useActiveWeb3React();\n  // return useContract(\n  //   chainId ? MERKLE_DISTRIBUTOR_ADDRESS[chainId] : undefined,\n  //   MERKLE_DISTRIBUTOR_ABI,\n  //   true\n  // );\n}\nexport function useGovernanceContract() {\n  _s12();\n\n  return useContract(GOVERNANCE_ADDRESS, GOVERNANCE_ABI, true);\n}\n\n_s12(useGovernanceContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useUniContract() {\n  _s13();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? UNI[chainId].address : undefined, UNI_ABI, true);\n}\n\n_s13(useUniContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  _s14();\n\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n\n_s14(useStakingContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useSocksController() {\n  _s15();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? \"0x65770b5283117639760beA3F867b69b3697a91dd\" : undefined, UNISOCKS_ABI, false);\n}\n\n_s15(useSocksController, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/hooks/useContract.ts"],"names":["abi","GOVERNANCE_ABI","UNI_ABI","STAKING_REWARDS_ABI","ChainId","IUniswapV2PairABI","useMemo","GOVERNANCE_ADDRESS","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","MIGRATOR_ABI","MIGRATOR_ADDRESS","UNISOCKS_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","V1_EXCHANGE_ABI","V1_FACTORY_ABI","V1_FACTORY_ADDRESSES","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useV1FactoryContract","chainId","useV2MigratorContract","useV1ExchangeContract","useTokenContract","tokenAddress","useArgentWalletDetectorContract","MAINNET","useENSRegistrarContract","TESTNET","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useMerkleDistributorContract","useGovernanceContract","useUniContract","UNI","useStakingContract","stakingAddress","useSocksController"],"mappings":";;;;;;;;;;;;;;;;AACA,SAASA,GAAG,IAAIC,cAAhB,QAAsC,8CAAtC;AACA,SAASD,GAAG,IAAIE,OAAhB,QAA+B,oCAA/B;AACA,SAASF,GAAG,IAAIG,mBAAhB,QAA2C,qDAA3C;AAGA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASJ,GAAG,IAAIK,iBAAhB,QAAyC,4CAAzC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,SACEC,0BADF,EAEEC,sCAFF,QAGO,0CAHP;AAIA,OAAOC,uBAAP,MAAoC,4CAApC;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,4BAA/C;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,wBAAlD;AACA,SACEC,eADF,EAEEC,cAFF,EAGEC,oBAHF,QAIO,iBAJP;AAKA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,kBAAT,QAAmC,SAAnC,C,CAEA;;AACA,SAASC,WAAT,CACEC,OADF,EAEEC,GAFF,EAGEC,oBAAoB,GAAG,IAHzB,EAImB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBN,kBAAkB,EAA/C;AAEA,SAAOjB,OAAO,CAAC,MAAM;AACnB,QAAI,CAACmB,OAAD,IAAY,CAACC,GAAb,IAAoB,CAACE,OAAzB,EAAkC,OAAO,IAAP;;AAClC,QAAI;AACF,aAAON,WAAW,CAChBG,OADgB,EAEhBC,GAFgB,EAGhBE,OAHgB,EAIhBD,oBAAoB,IAAIE,OAAxB,GAAkCA,OAAlC,GAA4CC,SAJ5B,CAAlB;AAMD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,aAAO,IAAP;AACD;AACF,GAba,EAaX,CAACN,OAAD,EAAUC,GAAV,EAAeE,OAAf,EAAwBD,oBAAxB,EAA8CE,OAA9C,CAbW,CAAd;AAcD;;GArBQL,W;UAKsBD,kB;;;AAkB/B,OAAO,SAASU,oBAAT,GAAiD;AAAA;;AACtD,QAAM;AAAEC,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,SAAOC,WAAW,CAChBU,OAAO,IAAIb,oBAAoB,CAACa,OAAD,CADf,EAEhBd,cAFgB,EAGhB,KAHgB,CAAlB;AAKD;;IAPea,oB;UACMV,kB,EACbC,W;;;AAOT,OAAO,SAASW,qBAAT,GAAkD;AAAA;;AACvD,SAAOX,WAAW,CAACT,gBAAD,EAAmBD,YAAnB,EAAiC,IAAjC,CAAlB;AACD;;IAFeqB,qB;UACPX,W;;;AAGT,OAAO,SAASY,qBAAT,CACLX,OADK,EAELE,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAACC,OAAD,EAAUN,eAAV,EAA2BQ,oBAA3B,CAAlB;AACD;;IALeS,qB;UAIPZ,W;;;AAGT,OAAO,SAASa,gBAAT,CACLC,YADK,EAELX,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAACc,YAAD,EAAezB,SAAf,EAA0Bc,oBAA1B,CAAlB;AACD;;IALeU,gB;UAIPb,W;;;AAGT,OAAO,SAASe,+BAAT,GAA4D;AAAA;;AACjE,QAAM;AAAEL,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,SAAOC,WAAW,CAChBU,OAAO,KAAK9B,OAAO,CAACoC,OAApB,GACI/B,sCADJ,GAEIqB,SAHY,EAIhBtB,0BAJgB,EAKhB,KALgB,CAAlB;AAOD;;IATe+B,+B;UACMhB,kB,EACbC,W;;;AAST,OAAO,SAASiB,uBAAT,CACLd,oBADK,EAEY;AAAA;;AACjB,QAAM;AAAEO,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,MAAIE,OAAJ;;AACA,MAAIS,OAAJ,EAAa;AACX,YAAQA,OAAR;AACE,WAAK9B,OAAO,CAACoC,OAAb;AACA,WAAKpC,OAAO,CAACsC,OAAb;AACEjB,QAAAA,OAAO,GAAG,4CAAV;AACA;AAJJ;AAMD;;AACD,SAAOD,WAAW,CAACC,OAAD,EAAUd,OAAV,EAAmBgB,oBAAnB,CAAlB;AACD;;IAdec,uB;UAGMlB,kB,EAUbC,W;;;AAGT,OAAO,SAASmB,sBAAT,CACLlB,OADK,EAELE,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAACC,OAAD,EAAUf,uBAAV,EAAmCiB,oBAAnC,CAAlB;AACD;;IALegB,sB;UAIPnB,W;;;AAGT,OAAO,SAASoB,uBAAT,CACLN,YADK,EAELX,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAACc,YAAD,EAAe1B,iBAAf,EAAkCe,oBAAlC,CAAlB;AACD;;IALeiB,uB;UAIPpB,W;;;AAGT,OAAO,SAASqB,eAAT,CACLC,WADK,EAELnB,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAACsB,WAAD,EAAczC,iBAAd,EAAiCsB,oBAAjC,CAAlB;AACD;;KALekB,e;UAIPrB,W;;;AAGT,OAAO,SAASuB,oBAAT,GAAiD;AAAA;;AACtD,QAAM;AAAEb,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,SAAOC,WAAW,CAChBU,OAAO,IAAIhB,kBAAkB,CAACgB,OAAD,CADb,EAEhBjB,aAFgB,EAGhB,KAHgB,CAAlB;AAKD;;KAPe8B,oB;UACMxB,kB,EACbC,W;;;AAOT,OAAO,SAASwB,4BAAT,GAA8C,CACnD;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,SAASC,qBAAT,GAAkD;AAAA;;AACvD,SAAOzB,WAAW,CAACjB,kBAAD,EAAqBN,cAArB,EAAqC,IAArC,CAAlB;AACD;;KAFegD,qB;UACPzB,W;;;AAGT,OAAO,SAAS0B,cAAT,GAA2C;AAAA;;AAChD,QAAM;AAAEhB,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,SAAOC,WAAW,CAACU,OAAO,GAAGiB,GAAG,CAACjB,OAAD,CAAH,CAAaT,OAAhB,GAA0BK,SAAlC,EAA6C5B,OAA7C,EAAsD,IAAtD,CAAlB;AACD;;KAHegD,c;UACM3B,kB,EACbC,W;;;AAGT,OAAO,SAAS4B,kBAAT,CACLC,cADK,EAEL1B,oBAFK,EAGY;AAAA;;AACjB,SAAOH,WAAW,CAAC6B,cAAD,EAAiBlD,mBAAjB,EAAsCwB,oBAAtC,CAAlB;AACD;;KALeyB,kB;UAIP5B,W;;;AAGT,OAAO,SAAS8B,kBAAT,GAA+C;AAAA;;AACpD,QAAM;AAAEpB,IAAAA;AAAF,MAAcX,kBAAkB,EAAtC;AACA,SAAOC,WAAW,CAChBU,OAAO,KAAK9B,OAAO,CAACoC,OAApB,GACI,4CADJ,GAEIV,SAHY,EAIhBd,YAJgB,EAKhB,KALgB,CAAlB;AAOD;;KATesC,kB;UACM/B,kB,EACbC,W","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\nimport { abi as GOVERNANCE_ABI } from \"@uniswap/governance/build/GovernorAlpha.json\";\nimport { abi as UNI_ABI } from \"@uniswap/governance/build/Uni.json\";\nimport { abi as STAKING_REWARDS_ABI } from \"@uniswap/liquidity-staker/build/StakingRewards.json\";\nimport { abi as MERKLE_DISTRIBUTOR_ABI } from \"@uniswap/merkle-distributor/build/MerkleDistributor.json\";\nimport { WETH } from \"@uniswap/sdk\";\nimport { ChainId } from \"../types\";\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/IUniswapV2Pair.json\";\nimport { useMemo } from \"react\";\nimport { GOVERNANCE_ADDRESS } from \"../constants\";\nimport {\n  ARGENT_WALLET_DETECTOR_ABI,\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\n} from \"../constants/abis/argent-wallet-detector\";\nimport ENS_PUBLIC_RESOLVER_ABI from \"../constants/abis/ens-public-resolver.json\";\nimport ENS_ABI from \"../constants/abis/ens-registrar.json\";\nimport { ERC20_BYTES32_ABI } from \"../constants/abis/erc20\";\nimport ERC20_ABI from \"../constants/abis/erc20.json\";\nimport { MIGRATOR_ABI, MIGRATOR_ADDRESS } from \"../constants/abis/migrator\";\nimport UNISOCKS_ABI from \"../constants/abis/unisocks.json\";\nimport WETH_ABI from \"../constants/abis/weth.json\";\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from \"../constants/multicall\";\nimport {\n  V1_EXCHANGE_ABI,\n  V1_FACTORY_ABI,\n  V1_FACTORY_ADDRESSES,\n} from \"../constants/v1\";\nimport { getContract } from \"../utils\";\nimport { useActiveWeb3React } from \"./index\";\n\n// returns null on errors\nfunction useContract(\n  address: string | undefined,\n  ABI: any,\n  withSignerIfPossible = true\n): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(\n        address,\n        ABI,\n        library,\n        withSignerIfPossible && account ? account : undefined\n      );\n    } catch (error) {\n      console.error(\"Failed to get contract\", error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useV1FactoryContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId && V1_FACTORY_ADDRESSES[chainId],\n    V1_FACTORY_ABI,\n    false\n  );\n}\n\nexport function useV2MigratorContract(): Contract | null {\n  return useContract(MIGRATOR_ADDRESS, MIGRATOR_ABI, true);\n}\n\nexport function useV1ExchangeContract(\n  address?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(address, V1_EXCHANGE_ABI, withSignerIfPossible);\n}\n\nexport function useTokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\nexport function useArgentWalletDetectorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET\n      ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS\n      : undefined,\n    ARGENT_WALLET_DETECTOR_ABI,\n    false\n  );\n}\n\nexport function useENSRegistrarContract(\n  withSignerIfPossible?: boolean\n): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  let address: string | undefined;\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n        break;\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\nexport function useENSResolverContract(\n  address: string | undefined,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\nexport function useBytes32TokenContract(\n  tokenAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\nexport function usePairContract(\n  pairAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId && MULTICALL_NETWORKS[chainId],\n    MULTICALL_ABI,\n    false\n  );\n}\n\nexport function useMerkleDistributorContract(): null {\n  // const { chainId } = useActiveWeb3React();\n  // return useContract(\n  //   chainId ? MERKLE_DISTRIBUTOR_ADDRESS[chainId] : undefined,\n  //   MERKLE_DISTRIBUTOR_ABI,\n  //   true\n  // );\n}\n\nexport function useGovernanceContract(): Contract | null {\n  return useContract(GOVERNANCE_ADDRESS, GOVERNANCE_ABI, true);\n}\n\nexport function useUniContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(chainId ? UNI[chainId].address : undefined, UNI_ABI, true);\n}\n\nexport function useStakingContract(\n  stakingAddress?: string,\n  withSignerIfPossible?: boolean\n): Contract | null {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n\nexport function useSocksController(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET\n      ? \"0x65770b5283117639760beA3F867b69b3697a91dd\"\n      : undefined,\n    UNISOCKS_ABI,\n    false\n  );\n}\n"]},"metadata":{},"sourceType":"module"}