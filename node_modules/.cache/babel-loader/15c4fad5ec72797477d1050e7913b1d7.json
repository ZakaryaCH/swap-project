{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/QuestionHelper/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { HelpCircle as Question } from 'react-feather';\nimport styled from 'styled-components';\nimport Tooltip from '../Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  color: ${({\n  theme\n}) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`;\n_c = QuestionWrapper;\nconst LightQuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  width: 24px;\n  height: 24px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: ${({\n  theme\n}) => theme.white};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`;\n_c2 = LightQuestionWrapper;\nconst QuestionMark = styled.span`\n  font-size: 1rem;\n`;\n_c3 = QuestionMark;\nexport default function QuestionHelper({\n  text\n}) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const open = useCallback(() => setShow(true), [setShow]);\n  const close = useCallback(() => setShow(false), [setShow]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      marginLeft: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      text: text,\n      show: show,\n      children: /*#__PURE__*/_jsxDEV(QuestionWrapper, {\n        onClick: open,\n        onMouseEnter: open,\n        onMouseLeave: close,\n        children: /*#__PURE__*/_jsxDEV(Question, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuestionHelper, \"eXsk1suRR99lL52D8bZHiNPxuRg=\");\n\n_c4 = QuestionHelper;\nexport function LightQuestionHelper({\n  text\n}) {\n  _s2();\n\n  const [show, setShow] = useState(false);\n  const open = useCallback(() => setShow(true), [setShow]);\n  const close = useCallback(() => setShow(false), [setShow]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      marginLeft: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n      text: text,\n      show: show,\n      children: /*#__PURE__*/_jsxDEV(LightQuestionWrapper, {\n        onClick: open,\n        onMouseEnter: open,\n        onMouseLeave: close,\n        children: /*#__PURE__*/_jsxDEV(QuestionMark, {\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LightQuestionHelper, \"eXsk1suRR99lL52D8bZHiNPxuRg=\");\n\n_c5 = LightQuestionHelper;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"QuestionWrapper\");\n$RefreshReg$(_c2, \"LightQuestionWrapper\");\n$RefreshReg$(_c3, \"QuestionMark\");\n$RefreshReg$(_c4, \"QuestionHelper\");\n$RefreshReg$(_c5, \"LightQuestionHelper\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/QuestionHelper/index.tsx"],"names":["React","useCallback","useState","HelpCircle","Question","styled","Tooltip","QuestionWrapper","div","theme","bg2","text2","LightQuestionWrapper","white","QuestionMark","span","QuestionHelper","text","show","setShow","open","close","marginLeft","LightQuestionHelper"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Tooltip from '../Tooltip'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst LightQuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  width: 24px;\n  height: 24px;\n  background-color: rgba(255, 255, 255, 0.1);\n  color: ${({ theme }) => theme.white};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionMark = styled.span`\n  font-size: 1rem;\n`\n\nexport default function QuestionHelper({ text }: { text: string }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <Question size={16} />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n\nexport function LightQuestionHelper({ text }: { text: string }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show}>\n        <LightQuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <QuestionMark>?</QuestionMark>\n        </LightQuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}