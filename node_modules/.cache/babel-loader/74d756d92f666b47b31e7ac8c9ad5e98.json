{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/CurrencyLogo/index.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Logo from \"../Logo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getTokenLogoURL = address => `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\nconst StyledEthereumLogo = styled.img`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`;\nconst StyledLogo = styled(Logo)`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  border-radius: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({\n  theme\n}) => theme.white};\n`;\n_c = StyledLogo;\nexport default function CurrencyLogo({\n  token,\n  size = \"24px\",\n  style\n}) {\n  var _token$symbol;\n\n  if (!token) return null;\n  return /*#__PURE__*/_jsxDEV(StyledLogo, {\n    size: size,\n    src: token.logoURI,\n    alt: `${(_token$symbol = token === null || token === void 0 ? void 0 : token.symbol) !== null && _token$symbol !== void 0 ? _token$symbol : \"token\"} logo`,\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CurrencyLogo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLogo\");\n$RefreshReg$(_c2, \"CurrencyLogo\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/CurrencyLogo/index.tsx"],"names":["React","styled","Logo","getTokenLogoURL","address","StyledEthereumLogo","img","size","StyledLogo","theme","white","CurrencyLogo","token","style","logoURI","symbol"],"mappings":";AACA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,OAAO,MAAMC,eAAe,GAAIC,OAAD,IAC5B,2FAA0FA,OAAQ,WAD9F;AAGP,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAsB;AACxD,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC9B,YAAY,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC/B;AACA;AACA,CALA;AAOA,MAAMC,UAAU,GAAGP,MAAM,CAACC,IAAD,CAAyB;AAClD,WAAW,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC9B,YAAY,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AAC/B,mBAAmB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;AACtC;AACA,sBAAsB,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;AACjD,CANA;KAAMF,U;AAQN,eAAe,SAASG,YAAT,CAAsB;AACnCC,EAAAA,KADmC;AAEnCL,EAAAA,IAAI,GAAG,MAF4B;AAGnCM,EAAAA;AAHmC,CAAtB,EAQZ;AAAA;;AACD,MAAI,CAACD,KAAL,EAAY,OAAO,IAAP;AAEZ,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,GAAG,EAAEK,KAAK,CAACE,OAFb;AAGE,IAAA,GAAG,EAAG,GAAD,iBAAGF,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEG,MAAV,yDAAoB,OAAQ,OAHnC;AAIE,IAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;MAnBuBF,Y","sourcesContent":["import { ETHER } from \"@uniswap/sdk\";\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Token } from \"../../types\";\n\nimport EthereumLogo from \"../../assets/images/ethereum-logo.png\";\nimport useHttpLocations from \"../../hooks/useHttpLocations\";\nimport Logo from \"../Logo\";\n\nexport const getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n\nconst StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`;\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.white};\n`;\n\nexport default function CurrencyLogo({\n  token,\n  size = \"24px\",\n  style,\n}: {\n  token?: Token;\n  size?: string;\n  style?: React.CSSProperties;\n}) {\n  if (!token) return null;\n\n  return (\n    <StyledLogo\n      size={size}\n      src={token.logoURI}\n      alt={`${token?.symbol ?? \"token\"} logo`}\n      style={style}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}