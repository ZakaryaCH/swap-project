{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapModalFooter.tsx\",\n    _s = $RefreshSig$();\n\nimport { TradeType } from '@uniswap/sdk';\nimport React, { useContext, useMemo, useState } from 'react';\nimport { Repeat } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { Field } from '../../state/swap/actions';\nimport { TYPE } from '../../theme';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, formatExecutionPrice, warningSeverity } from '../../utils/prices';\nimport { ButtonError } from '../Button';\nimport { AutoColumn } from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { AutoRow, RowBetween, RowFixed } from '../Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}) {\n  _s();\n\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2, _slippageAdjustedAmou3, _slippageAdjustedAmou4;\n\n  const [showInverted, setShowInverted] = useState(false);\n  const theme = useContext(ThemeContext);\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [allowedSlippage, trade]);\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = useMemo(() => computeTradePriceBreakdown(trade), [trade]);\n  const severity = warningSeverity(priceImpactWithoutFee);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"0px\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 400,\n          fontSize: 14,\n          color: theme.text2,\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          fontSize: 14,\n          color: theme.text1,\n          style: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            display: 'flex',\n            textAlign: 'right',\n            paddingLeft: '10px'\n          },\n          children: [formatExecutionPrice(trade, showInverted), /*#__PURE__*/_jsxDEV(StyledBalanceMaxMini, {\n            onClick: () => setShowInverted(!showInverted),\n            children: /*#__PURE__*/_jsxDEV(Repeat, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            fontWeight: 400,\n            color: theme.text2,\n            children: trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            children: trade.tradeType === TradeType.EXACT_INPUT ? (_slippageAdjustedAmou = (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)) !== null && _slippageAdjustedAmou !== void 0 ? _slippageAdjustedAmou : '-' : (_slippageAdjustedAmou3 = (_slippageAdjustedAmou4 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou4 === void 0 ? void 0 : _slippageAdjustedAmou4.toSignificant(4)) !== null && _slippageAdjustedAmou3 !== void 0 ? _slippageAdjustedAmou3 : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            marginLeft: '4px',\n            children: trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n            color: theme.text2,\n            fontSize: 14,\n            fontWeight: 400,\n            children: \"Price Impact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"The difference between the market price and your price due to trade size.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n          priceImpact: priceImpactWithoutFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.black, {\n            fontSize: 14,\n            fontWeight: 400,\n            color: theme.text2,\n            children: \"Liquidity Provider Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n          fontSize: 14,\n          children: realizedLPFee ? (realizedLPFee === null || realizedLPFee === void 0 ? void 0 : realizedLPFee.toSignificant(6)) + ' ' + trade.inputAmount.currency.symbol : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      children: [/*#__PURE__*/_jsxDEV(ButtonError, {\n        onClick: onConfirm,\n        disabled: disabledConfirm,\n        error: severity > 2,\n        style: {\n          margin: '10px 0 0 0'\n        },\n        id: \"confirm-swap-or-send\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 20,\n          fontWeight: 500,\n          children: severity > 2 ? 'Swap Anyway' : 'Confirm Swap'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n        error: swapErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SwapModalFooter, \"MBf6hvR8/dZHr1wiGZEPXr/eXy4=\");\n\n_c = SwapModalFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapModalFooter\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/swap/SwapModalFooter.tsx"],"names":["TradeType","React","useContext","useMemo","useState","Repeat","Text","ThemeContext","Field","TYPE","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","formatExecutionPrice","warningSeverity","ButtonError","AutoColumn","QuestionHelper","AutoRow","RowBetween","RowFixed","FormattedPriceImpact","StyledBalanceMaxMini","SwapCallbackError","SwapModalFooter","trade","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","theme","slippageAdjustedAmounts","priceImpactWithoutFee","realizedLPFee","severity","text2","text1","justifyContent","alignItems","display","textAlign","paddingLeft","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","outputAmount","currency","symbol","inputAmount","margin"],"mappings":"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","sourcesContent":["import { Trade, TradeType } from '@uniswap/sdk'\nimport React, { useContext, useMemo, useState } from 'react'\nimport { Repeat } from 'react-feather'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { Field } from '../../state/swap/actions'\nimport { TYPE } from '../../theme'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity\n} from '../../utils/prices'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const theme = useContext(ThemeContext)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontWeight={400} fontSize={14} color={theme.text2}>\n            Price\n          </Text>\n          <Text\n            fontWeight={500}\n            fontSize={14}\n            color={theme.text1}\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px'\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </TYPE.black>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <TYPE.black fontSize={14}>\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </TYPE.black>\n            <TYPE.black fontSize={14} marginLeft={'4px'}>\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </TYPE.black>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black color={theme.text2} fontSize={14} fontWeight={400}>\n              Price Impact\n            </TYPE.black>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <TYPE.black fontSize={14} fontWeight={400} color={theme.text2}>\n              Liquidity Provider Fee\n            </TYPE.black>\n            <QuestionHelper text=\"A portion of each trade (0.30%) goes to liquidity providers as a protocol incentive.\" />\n          </RowFixed>\n          <TYPE.black fontSize={14}>\n            {realizedLPFee ? realizedLPFee?.toSignificant(6) + ' ' + trade.inputAmount.currency.symbol : '-'}\n          </TYPE.black>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <ButtonError\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          error={severity > 2}\n          style={{ margin: '10px 0 0 0' }}\n          id=\"confirm-swap-or-send\"\n        >\n          <Text fontSize={20} fontWeight={500}>\n            {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n          </Text>\n        </ButtonError>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}