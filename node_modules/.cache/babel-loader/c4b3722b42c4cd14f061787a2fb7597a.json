{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ImportList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ReactGA from \"react-ga\";\nimport { TYPE, CloseIcon } from \"theme\";\nimport Card from \"components/Card\";\nimport { AutoColumn } from \"components/Column\";\nimport { RowBetween, RowFixed, AutoRow } from \"components/Row\";\nimport { ArrowLeft, AlertTriangle } from \"react-feather\";\nimport useTheme from \"hooks/useTheme\";\nimport { transparentize } from \"polished\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { SectionBreak } from \"components/swap/styleds\";\nimport { ExternalLink } from \"../../theme/components\";\nimport ListLogo from \"components/ListLogo\";\nimport { PaddedColumn, Checkbox, TextDot } from \"./styleds\";\nimport { useDispatch } from \"react-redux\";\nimport { useFetchListCallback } from \"hooks/useFetchListCallback\";\nimport { removeList, enableList } from \"state/lists/actions\";\nimport { CurrencyModalView } from \"./CurrencySearchModal\";\nimport { useAllLists } from \"state/lists/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`;\n_c = Wrapper;\nexport function ImportList({\n  listURL,\n  list,\n  setModalView,\n  onDismiss\n}) {\n  _s();\n\n  var _lists$listURL;\n\n  const theme = useTheme();\n  const dispatch = useDispatch(); // user must accept\n\n  const [confirmed, setConfirmed] = useState(false);\n  const lists = useAllLists();\n  const fetchList = useFetchListCallback(); // monitor is list is loading\n\n  const adding = Boolean((_lists$listURL = lists[listURL]) === null || _lists$listURL === void 0 ? void 0 : _lists$listURL.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList().then(() => {\n      ReactGA.event({\n        category: \"Lists\",\n        action: \"Add List\",\n        label: \"1inch\"\n      }); // turn list on\n\n      dispatch(enableList(\"1inch\")); // go back to lists\n\n      setModalView(CurrencyModalView.manage);\n    }).catch(error => {\n      ReactGA.event({\n        category: \"Lists\",\n        action: \"Add List Failed\",\n        label: listURL\n      });\n      setAddError(error.message);\n      dispatch(removeList(listURL));\n    });\n  }, [adding, dispatch, fetchList, listURL, setModalView]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PaddedColumn, {\n      gap: \"14px\",\n      style: {\n        width: \"100%\",\n        flex: \"1 1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => setModalView(CurrencyModalView.manage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Import List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: onDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaddedColumn, {\n      gap: \"md\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          backgroundColor: theme.bg2,\n          padding: \"12px 20px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [list.logoURI && /*#__PURE__*/_jsxDEV(ListLogo, {\n                logoURI: list.logoURI,\n                size: \"40px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"sm\",\n                style: {\n                  marginLeft: \"20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n                  children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n                    fontWeight: 600,\n                    mr: \"6px\",\n                    children: list.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextDot, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n                    fontSize: \"16px\",\n                    ml: \"6px\",\n                    children: [list.tokens.length, \" tokens\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n                  href: `https://tokenlists.org/token-list?url=${listURL}`,\n                  children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n                    fontSize: \"12px\",\n                    color: theme.blue1,\n                    children: listURL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundColor: transparentize(0.8, theme.red1)\n          },\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"center\",\n            style: {\n              textAlign: \"center\",\n              gap: \"16px\",\n              marginBottom: \"12px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              stroke: theme.red1,\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n              fontWeight: 500,\n              fontSize: 20,\n              color: theme.red1,\n              children: [\"Import at your own risk\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            style: {\n              textAlign: \"center\",\n              gap: \"16px\",\n              marginBottom: \"12px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n              fontWeight: 500,\n              color: theme.red1,\n              children: \"By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n              fontWeight: 600,\n              color: theme.red1,\n              children: \"If you purchase a token from this list, you may not be able to sell it back.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n            justify: \"center\",\n            style: {\n              cursor: \"pointer\"\n            },\n            onClick: () => setConfirmed(!confirmed),\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"confirmed\",\n              type: \"checkbox\",\n              checked: confirmed,\n              onChange: () => setConfirmed(!confirmed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n              ml: \"10px\",\n              fontSize: \"16px\",\n              color: theme.red1,\n              fontWeight: 500,\n              children: \"I understand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          disabled: !confirmed,\n          altDisabledStyle: true,\n          borderRadius: \"20px\",\n          padding: \"10px 1rem\",\n          onClick: handleAddList,\n          children: \"Import\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), addError ? /*#__PURE__*/_jsxDEV(TYPE.error, {\n          title: addError,\n          style: {\n            textOverflow: \"ellipsis\",\n            overflow: \"hidden\"\n          },\n          error: true,\n          children: addError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportList, \"GitE8GKXlyElp9jw0h62gDljPQI=\", false, function () {\n  return [useTheme, useDispatch, useAllLists, useFetchListCallback];\n});\n\n_c2 = ImportList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ImportList\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ImportList.tsx"],"names":["React","useState","useCallback","styled","ReactGA","TYPE","CloseIcon","Card","AutoColumn","RowBetween","RowFixed","AutoRow","ArrowLeft","AlertTriangle","useTheme","transparentize","ButtonPrimary","SectionBreak","ExternalLink","ListLogo","PaddedColumn","Checkbox","TextDot","useDispatch","useFetchListCallback","removeList","enableList","CurrencyModalView","useAllLists","Wrapper","div","ImportList","listURL","list","setModalView","onDismiss","theme","dispatch","confirmed","setConfirmed","lists","fetchList","adding","Boolean","loadingRequestId","addError","setAddError","handleAddList","then","event","category","action","label","manage","catch","error","message","width","flex","cursor","bg2","logoURI","marginLeft","name","tokens","length","blue1","backgroundColor","red1","textAlign","gap","marginBottom","textOverflow","overflow"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport ReactGA from \"react-ga\";\nimport { TYPE, CloseIcon } from \"theme\";\nimport Card from \"components/Card\";\nimport { AutoColumn } from \"components/Column\";\nimport { RowBetween, RowFixed, AutoRow } from \"components/Row\";\nimport { ArrowLeft, AlertTriangle } from \"react-feather\";\nimport useTheme from \"hooks/useTheme\";\nimport { transparentize } from \"polished\";\nimport { ButtonPrimary } from \"components/Button\";\nimport { SectionBreak } from \"components/swap/styleds\";\nimport { ExternalLink } from \"../../theme/components\";\nimport ListLogo from \"components/ListLogo\";\nimport { PaddedColumn, Checkbox, TextDot } from \"./styleds\";\nimport { TokenList } from \"@uniswap/token-lists\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"state\";\nimport { useFetchListCallback } from \"hooks/useFetchListCallback\";\nimport { removeList, enableList } from \"state/lists/actions\";\nimport { CurrencyModalView } from \"./CurrencySearchModal\";\nimport { useAllLists } from \"state/lists/hooks\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`;\n\ninterface ImportProps {\n  listURL: string;\n  list: TokenList;\n  onDismiss: () => void;\n  setModalView: (view: CurrencyModalView) => void;\n}\n\nexport function ImportList({\n  listURL,\n  list,\n  setModalView,\n  onDismiss,\n}: ImportProps) {\n  const theme = useTheme();\n  const dispatch = useDispatch<AppDispatch>();\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false);\n\n  const lists = useAllLists();\n  const fetchList = useFetchListCallback();\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId);\n  const [addError, setAddError] = useState<string | null>(null);\n\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList()\n      .then(() => {\n        ReactGA.event({\n          category: \"Lists\",\n          action: \"Add List\",\n          label: \"1inch\",\n        });\n\n        // turn list on\n        dispatch(enableList(\"1inch\"));\n        // go back to lists\n        setModalView(CurrencyModalView.manage);\n      })\n      .catch((error) => {\n        ReactGA.event({\n          category: \"Lists\",\n          action: \"Add List Failed\",\n          label: listURL,\n        });\n        setAddError(error.message);\n        dispatch(removeList(listURL));\n      });\n  }, [adding, dispatch, fetchList, listURL, setModalView]);\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: \"100%\", flex: \"1 1\" }}>\n        <RowBetween>\n          <ArrowLeft\n            style={{ cursor: \"pointer\" }}\n            onClick={() => setModalView(CurrencyModalView.manage)}\n          />\n          <TYPE.mediumHeader>Import List</TYPE.mediumHeader>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <PaddedColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && (\n                  <ListLogo logoURI={list.logoURI} size=\"40px\" />\n                )}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: \"20px\" }}>\n                  <RowFixed>\n                    <TYPE.body fontWeight={600} mr=\"6px\">\n                      {list.name}\n                    </TYPE.body>\n                    <TextDot />\n                    <TYPE.main fontSize={\"16px\"} ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </TYPE.main>\n                  </RowFixed>\n                  <ExternalLink\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    <TYPE.main fontSize={\"12px\"} color={theme.blue1}>\n                      {listURL}\n                    </TYPE.main>\n                  </ExternalLink>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n          <Card style={{ backgroundColor: transparentize(0.8, theme.red1) }}>\n            <AutoColumn\n              justify=\"center\"\n              style={{ textAlign: \"center\", gap: \"16px\", marginBottom: \"12px\" }}\n            >\n              <AlertTriangle stroke={theme.red1} size={32} />\n              <TYPE.body fontWeight={500} fontSize={20} color={theme.red1}>\n                Import at your own risk{\" \"}\n              </TYPE.body>\n            </AutoColumn>\n\n            <AutoColumn\n              style={{ textAlign: \"center\", gap: \"16px\", marginBottom: \"12px\" }}\n            >\n              <TYPE.body fontWeight={500} color={theme.red1}>\n                By adding this list you are implicitly trusting that the data is\n                correct. Anyone can create a list, including creating fake\n                versions of existing lists and lists that claim to represent\n                projects that do not have one.\n              </TYPE.body>\n              <TYPE.body fontWeight={600} color={theme.red1}>\n                If you purchase a token from this list, you may not be able to\n                sell it back.\n              </TYPE.body>\n            </AutoColumn>\n            <AutoRow\n              justify=\"center\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => setConfirmed(!confirmed)}\n            >\n              <Checkbox\n                name=\"confirmed\"\n                type=\"checkbox\"\n                checked={confirmed}\n                onChange={() => setConfirmed(!confirmed)}\n              />\n              <TYPE.body\n                ml=\"10px\"\n                fontSize=\"16px\"\n                color={theme.red1}\n                fontWeight={500}\n              >\n                I understand\n              </TYPE.body>\n            </AutoRow>\n          </Card>\n\n          <ButtonPrimary\n            disabled={!confirmed}\n            altDisabledStyle={true}\n            borderRadius=\"20px\"\n            padding=\"10px 1rem\"\n            onClick={handleAddList}\n          >\n            Import\n          </ButtonPrimary>\n          {addError ? (\n            <TYPE.error\n              title={addError}\n              style={{ textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              error\n            >\n              {addError}\n            </TYPE.error>\n          ) : null}\n        </AutoColumn>\n        {/* </Card> */}\n      </PaddedColumn>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}