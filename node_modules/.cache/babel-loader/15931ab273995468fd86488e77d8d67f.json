{"ast":null,"code":"// import { TokenAmount } from \"@uniswap/sdk\";\n// import { ChainId } from \"../../types\";\n// import React, { useState } from \"react\";\n// import { Text } from \"rebass\";\n// import { NavLink } from \"react-router-dom\";\n// import { darken } from \"polished\";\n// import { useTranslation } from \"react-i18next\";\n// import styled from \"styled-components\";\n// import Logo from \"../../assets/svg/logo.svg\";\n// import LogoDark from \"../../assets/svg/logo_white.svg\";\n// // import Logo from '../../assets/logo.png'\n// // import LogoDark from '../../assets/logo.png'\n// import { useActiveWeb3React } from \"../../hooks\";\n// import { useDarkModeManager } from \"../../state/user/hooks\";\n// import {\n//   useETHBalances,\n//   useAggregateUniBalance,\n// } from \"../../state/wallet/hooks\";\n// import { CardNoise } from \"../earn/styled\";\n// import { CountUp } from \"use-count-up\";\n// // import { TYPE, ExternalLink } from '../../theme'\n// import { TYPE, ExternalLink } from \"../../theme\";\n// import { YellowCard } from \"../Card\";\n// // import { Moon, Sun } from 'react-feather'\n// import Menu from \"../Menu\";\n// import Row, { RowFixed } from \"../Row\";\n// import Web3Status from \"../Web3Status\";\n// import ClaimModal from \"../claim/ClaimModal\";\n// import {\n//   useToggleSelfClaimModal,\n//   useShowClaimPopup,\n// } from \"../../state/application/hooks\";\n// import { useUserHasAvailableClaim } from \"../../state/claim/hooks\";\n// import { useUserHasSubmittedClaim } from \"../../state/transactions/hooks\";\n// import { Dots } from \"../swap/styleds\";\n// import Modal from \"../Modal\";\n// import UniBalanceContent from \"./UniBalanceContent\";\n// import usePrevious from \"../../hooks/usePrevious\";\n// const HeaderFrame = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr 120px;\n//   align-items: center;\n//   justify-content: space-between;\n//   align-items: center;\n//   flex-direction: row;\n//   width: 100%;\n//   top: 0;\n//   position: relative;\n//   border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n//   padding: 1rem;\n//   z-index: 2;\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     grid-template-columns: 1fr;\n//     padding: 0 1rem;\n//     width: calc(100%);\n//     position: relative;\n//   `};\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//         padding: 0.5rem 1rem 0.5rem 0rem;\n//   `}\n// `;\n// const HeaderControls = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   justify-self: flex-end;\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     flex-direction: row;\n//     justify-content: space-between;\n//     justify-self: center;\n//     width: 100%;\n//     max-width: 960px;\n//     padding: 1rem;\n//     position: fixed;\n//     bottom: 0px;\n//     left: 0px;\n//     width: 100%;\n//     z-index: 99;\n//     height: 72px;\n//     border-radius: 12px 12px 0 0;\n//     background-color: ${({ theme }) => theme.bg1};\n//   `};\n// `;\n// const HeaderElement = styled.div`\n//   display: flex;\n//   align-items: center;\n//   /* addresses safari's lack of support for \"gap\" */\n//   & > *:not(:first-child) {\n//     margin-left: 8px;\n//   }\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    flex-direction: row-reverse;\n//     align-items: center;\n//   `};\n// `;\n// const HeaderElementWrap = styled.div`\n//   display: flex;\n//   align-items: center;\n// `;\n// const HeaderRow = styled(RowFixed)`\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    width: 100%;\n//   `};\n// `;\n// const HeaderLinks = styled(Row)`\n//   justify-content: center;\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     padding: 1rem 0 1rem 1rem;\n//     justify-content: flex-end;\n// `};\n// `;\n// const AccountElement = styled.div<{ active: boolean }>`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   background-color: ${({ theme, active }) => (!active ? theme.bg1 : theme.bg3)};\n//   border-radius: 12px;\n//   white-space: nowrap;\n//   width: 100%;\n//   cursor: pointer;\n//   :focus {\n//     border: 1px solid blue;\n//   }\n// `;\n// const UNIAmount = styled(AccountElement)`\n//   color: white;\n//   padding: 4px 8px;\n//   height: 36px;\n//   font-weight: 500;\n//   background-color: ${({ theme }) => theme.bg3};\n//   background: radial-gradient(\n//       174.47% 188.91% at 1.84% 0%,\n//       #ff007a 0%,\n//       #2172e5 100%\n//     ),\n//     #edeef2;\n// `;\n// const UNIWrapper = styled.span`\n//   width: fit-content;\n//   position: relative;\n//   cursor: pointer;\n//   :hover {\n//     opacity: 0.8;\n//   }\n//   :active {\n//     opacity: 0.9;\n//   }\n// `;\n// const HideSmall = styled.span`\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     display: none;\n//   `};\n// `;\n// const NetworkCard = styled(YellowCard)`\n//   border-radius: 12px;\n//   padding: 8px 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     margin: 0;\n//     margin-right: 0.5rem;\n//     width: initial;\n//     overflow: hidden;\n//     text-overflow: ellipsis;\n//     flex-shrink: 1;\n//   `};\n// `;\n// const BalanceText = styled(Text)`\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     display: none;\n//   `};\n// `;\n// const Title = styled.a`\n//   display: flex;\n//   align-items: center;\n//   pointer-events: auto;\n//   justify-self: flex-start;\n//   margin-right: 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     justify-self: center;\n//   `};\n//   :hover {\n//     cursor: pointer;\n//   }\n// `;\n// const UniIcon = styled.div`\n//   transition: transform 0.3s ease;\n//   margin-bottom: 12%;\n// `;\n// // const UniIcon = styled.div`\n// //   transition: transform 0.3s ease;\n// //   margin-bottom: 12%;\n// //   :hover {\n// //     transform: rotate(-5deg);\n// //   }\n// // `\n// const activeClassName = \"ACTIVE\";\n// const StyledNavLink = styled(NavLink).attrs({\n//   activeClassName,\n// })`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   border-radius: 3rem;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   color: ${({ theme }) => theme.text2};\n//   font-size: 1rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n//   &.${activeClassName} {\n//     border-radius: 12px;\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n//   :hover,\n//   :focus {\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n// `;\n// const StyledNavLink2 = styled(NavLink).attrs({\n//   activeClassName,\n// })`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   border-radius: 3rem;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   color: ${({ theme }) => theme.text2};\n//   font-size: 1rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n//   &.${activeClassName} {\n//     border-radius: 12px;\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n//   :hover,\n//   :focus {\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n// `;\n// const StyledExternalLink2 = styled(ExternalLink).attrs({\n//   activeClassName,\n// })<{ isActive?: boolean }>`\n//   color: white;\n//   margin-left: 5px;\n//   padding: 7px 4px 4px 4px;\n//   height: 36px;\n//   font-weight: 500;\n//   background-color: ${({ theme }) => theme.bg3};\n//   border-radius: 10px;\n//   background: radial-gradient(\n//       174.47% 188.91% at 1.84% 0%,\n//       #ff007a 0%,\n//       #2172e5 100%\n//     ),\n//     #edeef2;\n// `;\n// const StyledExternalLink3 = styled(ExternalLink).attrs({\n//   activeClassName,\n// })<{ isActive?: boolean }>`\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n// `;\n// export const StyledMenuButton = styled.button`\n//   position: relative;\n//   width: 100%;\n//   height: 100%;\n//   border: none;\n//   background-color: transparent;\n//   margin: 0;\n//   padding: 0;\n//   height: 35px;\n//   background-color: ${({ theme }) => theme.bg3};\n//   margin-left: 8px;\n//   padding: 0.15rem 0.5rem;\n//   border-radius: 0.5rem;\n//   :hover,\n//   :focus {\n//     cursor: pointer;\n//     outline: none;\n//     background-color: ${({ theme }) => theme.bg4};\n//   }\n//   svg {\n//     margin-top: 2px;\n//   }\n//   > * {\n//     stroke: ${({ theme }) => theme.text1};\n//   }\n// `;\n// const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n//   [ChainId.TESTNET]: \"TEST\",\n//   [ChainId.MAINNET]: \"MAIN\",\n// };\n// export default function Header() {\n//   const { account, chainId } = useActiveWeb3React();\n//   const { t } = useTranslation();\n//   const userEthBalance = useETHBalances(account ? [account] : [])?.[\n//     account ?? \"\"\n//   ];\n//   // const [isDark] = useDarkModeManager()\n//   const [darkMode] = useDarkModeManager();\n//   const toggleClaimModal = useToggleSelfClaimModal();\n//   const availableClaim: boolean = useUserHasAvailableClaim(account);\n//   const { claimTxn } = useUserHasSubmittedClaim(account ?? undefined);\n//   const aggregateBalance: TokenAmount | undefined = useAggregateUniBalance();\n//   const [showUniBalanceModal, setShowUniBalanceModal] = useState(false);\n//   const showClaimPopup = useShowClaimPopup();\n//   const countUpValue = aggregateBalance?.toFixed(0) ?? \"0\";\n//   const countUpValuePrevious = usePrevious(countUpValue) ?? \"0\";\n//   return (\n//     <HeaderFrame>\n//       <ClaimModal />\n//       <Modal\n//         isOpen={showUniBalanceModal}\n//         onDismiss={() => setShowUniBalanceModal(false)}\n//       >\n//         <UniBalanceContent setShowUniBalanceModal={setShowUniBalanceModal} />\n//       </Modal>\n//       <HeaderRow>\n//         <Title href=\".\">\n//           <UniIcon>\n//             <img width={\"60%\"} src={darkMode ? LogoDark : Logo} alt=\"logo\" />\n//           </UniIcon>\n//         </Title>\n//         <HeaderLinks>\n//           <StyledNavLink id={`swap-nav-link`} to={\"/swap\"}>\n//             {t(\"Swap\")}\n//           </StyledNavLink>\n//           <StyledExternalLink3\n//             id={`swap-nav-link`}\n//             href={\"https://www.pogoswap.io/staking\"}\n//           >\n//             {t(\"Staking\")}\n//           </StyledExternalLink3>\n//           <StyledExternalLink3\n//             id={`swap-nav-link`}\n//             href={\"https://www.pogoswap.io/projects\"}\n//           >\n//             {t(\"IDO\")}\n//           </StyledExternalLink3>\n//           <StyledNavLink2\n//             id={`pool-nav-link`}\n//             to={\"/pool\"}\n//             isActive={(match, { pathname }) =>\n//               Boolean(match) ||\n//               pathname.startsWith(\"/add\") ||\n//               pathname.startsWith(\"/remove\") ||\n//               pathname.startsWith(\"/create\") ||\n//               pathname.startsWith(\"/find\")\n//             }\n//           >\n//             {t(\"Pool\")}\n//           </StyledNavLink2>\n//           <StyledExternalLink2\n//             id={`swap-nav-link`}\n//             href={\"https://www.moonpay.com/\"}\n//           >\n//             {t(\"Buy\")}\n//           </StyledExternalLink2>\n//           {/* <StyledNavLink id={`stake-nav-link`} to={'/uni'}>\n//             UNI\n//           </StyledNavLink>\n//           <StyledNavLink id={`stake-nav-link`} to={'/vote'}>\n//             Vote\n//           </StyledNavLink>\n//           <StyledExternalLink id={`stake-nav-link`} href={'https://uniswap.info'}>\n//             Charts <span style={{ fontSize: '11px' }}>↗</span>\n//           </StyledExternalLink> */}\n//         </HeaderLinks>\n//       </HeaderRow>\n//       <HeaderControls>\n//         <HeaderElement>\n//           <HideSmall>\n//             {chainId && NETWORK_LABELS[chainId] && (\n//               <NetworkCard title={NETWORK_LABELS[chainId]}>\n//                 {NETWORK_LABELS[chainId]}\n//               </NetworkCard>\n//             )}\n//           </HideSmall>\n//           {availableClaim && !showClaimPopup && (\n//             <UNIWrapper onClick={toggleClaimModal}>\n//               <UNIAmount\n//                 active={!!account && !availableClaim}\n//                 style={{ pointerEvents: \"auto\" }}\n//               >\n//                 <TYPE.white padding=\"0 2px\">\n//                   {claimTxn && !claimTxn?.receipt ? (\n//                     <Dots>Claiming POGO</Dots>\n//                   ) : (\n//                     \"Claim POGO\"\n//                   )}\n//                 </TYPE.white>\n//               </UNIAmount>\n//               <CardNoise />\n//             </UNIWrapper>\n//           )}\n//           {!availableClaim && aggregateBalance && (\n//             <UNIWrapper onClick={() => setShowUniBalanceModal(true)}>\n//               <UNIAmount\n//                 active={!!account && !availableClaim}\n//                 style={{ pointerEvents: \"auto\" }}\n//               >\n//                 {account && (\n//                   <HideSmall>\n//                     <TYPE.white\n//                       style={{\n//                         paddingRight: \".4rem\",\n//                       }}\n//                     >\n//                       <CountUp\n//                         key={countUpValue}\n//                         isCounting\n//                         start={parseFloat(countUpValuePrevious)}\n//                         end={parseFloat(countUpValue)}\n//                         thousandsSeparator={\",\"}\n//                         duration={1}\n//                       />\n//                     </TYPE.white>\n//                   </HideSmall>\n//                 )}\n//                 POGO\n//               </UNIAmount>\n//               <CardNoise />\n//             </UNIWrapper>\n//           )}\n//           <AccountElement active={!!account} style={{ pointerEvents: \"auto\" }}>\n//             {account && userEthBalance ? (\n//               <BalanceText\n//                 style={{ flexShrink: 0 }}\n//                 pl=\"0.75rem\"\n//                 pr=\"0.5rem\"\n//                 fontWeight={500}\n//               >\n//                 {userEthBalance?.toSignificant(4)} ETH\n//               </BalanceText>\n//             ) : null}\n//             <Web3Status />\n//           </AccountElement>\n//         </HeaderElement>\n//         <HeaderElementWrap>\n//           {/* <StyledMenuButton onClick={() => toggleDarkMode()}>\n//             {darkMode ? <Moon size={20} /> : <Sun size={20} />}\n//           </StyledMenuButton> */}\n//           <Menu />\n//         </HeaderElementWrap>\n//       </HeaderControls>\n//     </HeaderFrame>\n//   );\n// }","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Header/index.tsx"],"names":[],"mappingssourcesContent":["// import { TokenAmount } from \"@uniswap/sdk\";\n// import { ChainId } from \"../../types\";\n// import React, { useState } from \"react\";\n// import { Text } from \"rebass\";\n// import { NavLink } from \"react-router-dom\";\n// import { darken } from \"polished\";\n// import { useTranslation } from \"react-i18next\";\n\n// import styled from \"styled-components\";\n\n// import Logo from \"../../assets/svg/logo.svg\";\n// import LogoDark from \"../../assets/svg/logo_white.svg\";\n// // import Logo from '../../assets/logo.png'\n// // import LogoDark from '../../assets/logo.png'\n// import { useActiveWeb3React } from \"../../hooks\";\n// import { useDarkModeManager } from \"../../state/user/hooks\";\n// import {\n//   useETHBalances,\n//   useAggregateUniBalance,\n// } from \"../../state/wallet/hooks\";\n// import { CardNoise } from \"../earn/styled\";\n// import { CountUp } from \"use-count-up\";\n// // import { TYPE, ExternalLink } from '../../theme'\n// import { TYPE, ExternalLink } from \"../../theme\";\n\n// import { YellowCard } from \"../Card\";\n// // import { Moon, Sun } from 'react-feather'\n// import Menu from \"../Menu\";\n\n// import Row, { RowFixed } from \"../Row\";\n// import Web3Status from \"../Web3Status\";\n// import ClaimModal from \"../claim/ClaimModal\";\n// import {\n//   useToggleSelfClaimModal,\n//   useShowClaimPopup,\n// } from \"../../state/application/hooks\";\n// import { useUserHasAvailableClaim } from \"../../state/claim/hooks\";\n// import { useUserHasSubmittedClaim } from \"../../state/transactions/hooks\";\n// import { Dots } from \"../swap/styleds\";\n// import Modal from \"../Modal\";\n// import UniBalanceContent from \"./UniBalanceContent\";\n// import usePrevious from \"../../hooks/usePrevious\";\n\n// const HeaderFrame = styled.div`\n//   display: grid;\n//   grid-template-columns: 1fr 120px;\n//   align-items: center;\n//   justify-content: space-between;\n//   align-items: center;\n//   flex-direction: row;\n//   width: 100%;\n//   top: 0;\n//   position: relative;\n//   border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n//   padding: 1rem;\n//   z-index: 2;\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     grid-template-columns: 1fr;\n//     padding: 0 1rem;\n//     width: calc(100%);\n//     position: relative;\n//   `};\n\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//         padding: 0.5rem 1rem 0.5rem 0rem;\n//   `}\n// `;\n\n// const HeaderControls = styled.div`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   justify-self: flex-end;\n\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     flex-direction: row;\n//     justify-content: space-between;\n//     justify-self: center;\n//     width: 100%;\n//     max-width: 960px;\n//     padding: 1rem;\n//     position: fixed;\n//     bottom: 0px;\n//     left: 0px;\n//     width: 100%;\n//     z-index: 99;\n//     height: 72px;\n//     border-radius: 12px 12px 0 0;\n//     background-color: ${({ theme }) => theme.bg1};\n//   `};\n// `;\n\n// const HeaderElement = styled.div`\n//   display: flex;\n//   align-items: center;\n\n//   /* addresses safari's lack of support for \"gap\" */\n//   & > *:not(:first-child) {\n//     margin-left: 8px;\n//   }\n\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    flex-direction: row-reverse;\n//     align-items: center;\n//   `};\n// `;\n\n// const HeaderElementWrap = styled.div`\n//   display: flex;\n//   align-items: center;\n// `;\n\n// const HeaderRow = styled(RowFixed)`\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//    width: 100%;\n//   `};\n// `;\n\n// const HeaderLinks = styled(Row)`\n//   justify-content: center;\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\n//     padding: 1rem 0 1rem 1rem;\n//     justify-content: flex-end;\n// `};\n// `;\n\n// const AccountElement = styled.div<{ active: boolean }>`\n//   display: flex;\n//   flex-direction: row;\n//   align-items: center;\n//   background-color: ${({ theme, active }) => (!active ? theme.bg1 : theme.bg3)};\n//   border-radius: 12px;\n//   white-space: nowrap;\n//   width: 100%;\n//   cursor: pointer;\n\n//   :focus {\n//     border: 1px solid blue;\n//   }\n// `;\n\n// const UNIAmount = styled(AccountElement)`\n//   color: white;\n//   padding: 4px 8px;\n//   height: 36px;\n//   font-weight: 500;\n//   background-color: ${({ theme }) => theme.bg3};\n//   background: radial-gradient(\n//       174.47% 188.91% at 1.84% 0%,\n//       #ff007a 0%,\n//       #2172e5 100%\n//     ),\n//     #edeef2;\n// `;\n\n// const UNIWrapper = styled.span`\n//   width: fit-content;\n//   position: relative;\n//   cursor: pointer;\n\n//   :hover {\n//     opacity: 0.8;\n//   }\n\n//   :active {\n//     opacity: 0.9;\n//   }\n// `;\n\n// const HideSmall = styled.span`\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     display: none;\n//   `};\n// `;\n\n// const NetworkCard = styled(YellowCard)`\n//   border-radius: 12px;\n//   padding: 8px 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     margin: 0;\n//     margin-right: 0.5rem;\n//     width: initial;\n//     overflow: hidden;\n//     text-overflow: ellipsis;\n//     flex-shrink: 1;\n//   `};\n// `;\n\n// const BalanceText = styled(Text)`\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n//     display: none;\n//   `};\n// `;\n\n// const Title = styled.a`\n//   display: flex;\n//   align-items: center;\n//   pointer-events: auto;\n//   justify-self: flex-start;\n//   margin-right: 12px;\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\n//     justify-self: center;\n//   `};\n//   :hover {\n//     cursor: pointer;\n//   }\n// `;\n\n// const UniIcon = styled.div`\n//   transition: transform 0.3s ease;\n//   margin-bottom: 12%;\n// `;\n\n// // const UniIcon = styled.div`\n// //   transition: transform 0.3s ease;\n// //   margin-bottom: 12%;\n// //   :hover {\n// //     transform: rotate(-5deg);\n// //   }\n// // `\n\n// const activeClassName = \"ACTIVE\";\n\n// const StyledNavLink = styled(NavLink).attrs({\n//   activeClassName,\n// })`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   border-radius: 3rem;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   color: ${({ theme }) => theme.text2};\n//   font-size: 1rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n\n//   &.${activeClassName} {\n//     border-radius: 12px;\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n\n//   :hover,\n//   :focus {\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n// `;\n\n// const StyledNavLink2 = styled(NavLink).attrs({\n//   activeClassName,\n// })`\n//   ${({ theme }) => theme.flexRowNoWrap}\n//   align-items: left;\n//   border-radius: 3rem;\n//   outline: none;\n//   cursor: pointer;\n//   text-decoration: none;\n//   color: ${({ theme }) => theme.text2};\n//   font-size: 1rem;\n//   width: fit-content;\n//   margin: 0 12px;\n//   font-weight: 500;\n\n//   &.${activeClassName} {\n//     border-radius: 12px;\n//     font-weight: 600;\n//     color: ${({ theme }) => theme.text1};\n//   }\n\n//   :hover,\n//   :focus {\n//     color: ${({ theme }) => darken(0.1, theme.text1)};\n//   }\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n// `;\n\n// const StyledExternalLink2 = styled(ExternalLink).attrs({\n//   activeClassName,\n// })<{ isActive?: boolean }>`\n//   color: white;\n//   margin-left: 5px;\n//   padding: 7px 4px 4px 4px;\n//   height: 36px;\n//   font-weight: 500;\n//   background-color: ${({ theme }) => theme.bg3};\n//   border-radius: 10px;\n//   background: radial-gradient(\n//       174.47% 188.91% at 1.84% 0%,\n//       #ff007a 0%,\n//       #2172e5 100%\n//     ),\n//     #edeef2;\n// `;\n\n// const StyledExternalLink3 = styled(ExternalLink).attrs({\n//   activeClassName,\n// })<{ isActive?: boolean }>`\n//   background-color: #153d6f70;\n//   border: 1px solid #153d6f70;\n//   color: #6da8ff;\n//   border-radius: 10px;\n//   padding: 10px 5px;\n//   margin: 5px;\n// `;\n\n// export const StyledMenuButton = styled.button`\n//   position: relative;\n//   width: 100%;\n//   height: 100%;\n//   border: none;\n//   background-color: transparent;\n//   margin: 0;\n//   padding: 0;\n//   height: 35px;\n//   background-color: ${({ theme }) => theme.bg3};\n//   margin-left: 8px;\n//   padding: 0.15rem 0.5rem;\n//   border-radius: 0.5rem;\n\n//   :hover,\n//   :focus {\n//     cursor: pointer;\n//     outline: none;\n//     background-color: ${({ theme }) => theme.bg4};\n//   }\n\n//   svg {\n//     margin-top: 2px;\n//   }\n//   > * {\n//     stroke: ${({ theme }) => theme.text1};\n//   }\n// `;\n\n// const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\n//   [ChainId.TESTNET]: \"TEST\",\n//   [ChainId.MAINNET]: \"MAIN\",\n// };\n\n// export default function Header() {\n//   const { account, chainId } = useActiveWeb3React();\n//   const { t } = useTranslation();\n\n//   const userEthBalance = useETHBalances(account ? [account] : [])?.[\n//     account ?? \"\"\n//   ];\n//   // const [isDark] = useDarkModeManager()\n//   const [darkMode] = useDarkModeManager();\n\n//   const toggleClaimModal = useToggleSelfClaimModal();\n\n//   const availableClaim: boolean = useUserHasAvailableClaim(account);\n\n//   const { claimTxn } = useUserHasSubmittedClaim(account ?? undefined);\n\n//   const aggregateBalance: TokenAmount | undefined = useAggregateUniBalance();\n\n//   const [showUniBalanceModal, setShowUniBalanceModal] = useState(false);\n//   const showClaimPopup = useShowClaimPopup();\n\n//   const countUpValue = aggregateBalance?.toFixed(0) ?? \"0\";\n//   const countUpValuePrevious = usePrevious(countUpValue) ?? \"0\";\n\n//   return (\n//     <HeaderFrame>\n//       <ClaimModal />\n//       <Modal\n//         isOpen={showUniBalanceModal}\n//         onDismiss={() => setShowUniBalanceModal(false)}\n//       >\n//         <UniBalanceContent setShowUniBalanceModal={setShowUniBalanceModal} />\n//       </Modal>\n//       <HeaderRow>\n//         <Title href=\".\">\n//           <UniIcon>\n//             <img width={\"60%\"} src={darkMode ? LogoDark : Logo} alt=\"logo\" />\n//           </UniIcon>\n//         </Title>\n//         <HeaderLinks>\n//           <StyledNavLink id={`swap-nav-link`} to={\"/swap\"}>\n//             {t(\"Swap\")}\n//           </StyledNavLink>\n//           <StyledExternalLink3\n//             id={`swap-nav-link`}\n//             href={\"https://www.pogoswap.io/staking\"}\n//           >\n//             {t(\"Staking\")}\n//           </StyledExternalLink3>\n\n//           <StyledExternalLink3\n//             id={`swap-nav-link`}\n//             href={\"https://www.pogoswap.io/projects\"}\n//           >\n//             {t(\"IDO\")}\n//           </StyledExternalLink3>\n//           <StyledNavLink2\n//             id={`pool-nav-link`}\n//             to={\"/pool\"}\n//             isActive={(match, { pathname }) =>\n//               Boolean(match) ||\n//               pathname.startsWith(\"/add\") ||\n//               pathname.startsWith(\"/remove\") ||\n//               pathname.startsWith(\"/create\") ||\n//               pathname.startsWith(\"/find\")\n//             }\n//           >\n//             {t(\"Pool\")}\n//           </StyledNavLink2>\n//           <StyledExternalLink2\n//             id={`swap-nav-link`}\n//             href={\"https://www.moonpay.com/\"}\n//           >\n//             {t(\"Buy\")}\n//           </StyledExternalLink2>\n//           {/* <StyledNavLink id={`stake-nav-link`} to={'/uni'}>\n//             UNI\n//           </StyledNavLink>\n//           <StyledNavLink id={`stake-nav-link`} to={'/vote'}>\n//             Vote\n//           </StyledNavLink>\n//           <StyledExternalLink id={`stake-nav-link`} href={'https://uniswap.info'}>\n//             Charts <span style={{ fontSize: '11px' }}>↗</span>\n//           </StyledExternalLink> */}\n//         </HeaderLinks>\n//       </HeaderRow>\n//       <HeaderControls>\n//         <HeaderElement>\n//           <HideSmall>\n//             {chainId && NETWORK_LABELS[chainId] && (\n//               <NetworkCard title={NETWORK_LABELS[chainId]}>\n//                 {NETWORK_LABELS[chainId]}\n//               </NetworkCard>\n//             )}\n//           </HideSmall>\n//           {availableClaim && !showClaimPopup && (\n//             <UNIWrapper onClick={toggleClaimModal}>\n//               <UNIAmount\n//                 active={!!account && !availableClaim}\n//                 style={{ pointerEvents: \"auto\" }}\n//               >\n//                 <TYPE.white padding=\"0 2px\">\n//                   {claimTxn && !claimTxn?.receipt ? (\n//                     <Dots>Claiming POGO</Dots>\n//                   ) : (\n//                     \"Claim POGO\"\n//                   )}\n//                 </TYPE.white>\n//               </UNIAmount>\n//               <CardNoise />\n//             </UNIWrapper>\n//           )}\n//           {!availableClaim && aggregateBalance && (\n//             <UNIWrapper onClick={() => setShowUniBalanceModal(true)}>\n//               <UNIAmount\n//                 active={!!account && !availableClaim}\n//                 style={{ pointerEvents: \"auto\" }}\n//               >\n//                 {account && (\n//                   <HideSmall>\n//                     <TYPE.white\n//                       style={{\n//                         paddingRight: \".4rem\",\n//                       }}\n//                     >\n//                       <CountUp\n//                         key={countUpValue}\n//                         isCounting\n//                         start={parseFloat(countUpValuePrevious)}\n//                         end={parseFloat(countUpValue)}\n//                         thousandsSeparator={\",\"}\n//                         duration={1}\n//                       />\n//                     </TYPE.white>\n//                   </HideSmall>\n//                 )}\n//                 POGO\n//               </UNIAmount>\n//               <CardNoise />\n//             </UNIWrapper>\n//           )}\n//           <AccountElement active={!!account} style={{ pointerEvents: \"auto\" }}>\n//             {account && userEthBalance ? (\n//               <BalanceText\n//                 style={{ flexShrink: 0 }}\n//                 pl=\"0.75rem\"\n//                 pr=\"0.5rem\"\n//                 fontWeight={500}\n//               >\n//                 {userEthBalance?.toSignificant(4)} ETH\n//               </BalanceText>\n//             ) : null}\n//             <Web3Status />\n//           </AccountElement>\n//         </HeaderElement>\n//         <HeaderElementWrap>\n//           {/* <StyledMenuButton onClick={() => toggleDarkMode()}>\n//             {darkMode ? <Moon size={20} /> : <Sun size={20} />}\n//           </StyledMenuButton> */}\n//           <Menu />\n//         </HeaderElementWrap>\n//       </HeaderControls>\n//     </HeaderFrame>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}