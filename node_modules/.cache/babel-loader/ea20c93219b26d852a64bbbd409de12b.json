{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/vote/DelegateModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"../Modal\";\nimport { AutoColumn } from \"../Column\";\nimport styled from \"styled-components\";\nimport { RowBetween } from \"../Row\";\nimport { TYPE } from \"../../theme\";\nimport { X } from \"react-feather\";\nimport { ButtonPrimary } from \"../Button\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport AddressInputPanel from \"../AddressInputPanel\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport useENS from \"../../hooks/useENS\";\nimport { useDelegateCallback } from \"../../state/governance/hooks\";\nimport { LoadingView, SubmittedView } from \"../ModalViews\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 24px;\n`;\n_c = ContentWrapper;\nconst StyledClosed = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c2 = StyledClosed;\nconst TextButton = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c3 = TextButton;\nexport default function DelegateModal({\n  isOpen,\n  onDismiss,\n  title\n}) {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React(); // state for delegate input\n\n  const [usingDelegate, setUsingDelegate] = useState(false);\n  const [typed, setTyped] = useState(\"\");\n\n  function handleRecipientType(val) {\n    setTyped(val);\n  } // monitor for self delegation or input for third part delegate\n  // default is self delegation\n\n\n  const activeDelegate = usingDelegate ? typed : account;\n  const {\n    address: parsedAddress\n  } = useENS(activeDelegate); // get the number of votes available to delegate\n  // const uniBalance = useTokenBalance(\n  //   account ?? undefined,\n  //   chainId ? UNI[chainId] : undefined\n  // );\n\n  const delegateCallback = useDelegateCallback(); // monitor call to help UI loading state\n\n  const [hash, setHash] = useState();\n  const [attempting, setAttempting] = useState(false); // wrapper to reset state on modal close\n\n  function wrappedOndismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  async function onDelegate() {\n    var _delegateCallback;\n\n    setAttempting(true); // if callback not returned properly ignore\n\n    if (!delegateCallback) return; // try delegation and store hash\n\n    const hash = await ((_delegateCallback = delegateCallback(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : undefined)) === null || _delegateCallback === void 0 ? void 0 : _delegateCallback.catch(error => {\n      setAttempting(false);\n      console.log(error);\n    }));\n\n    if (hash) {\n      setHash(hash);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOndismiss,\n    maxHeight: 90,\n    children: [!attempting && !hash && /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      gap: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n            fontWeight: 500,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledClosed, {\n            stroke: \"black\",\n            onClick: wrappedOndismiss\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n          children: \"Earned UNI tokens represent voting shares in Uniswap governance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n          children: \"You can either vote on each proposal yourself or delegate your votes to a third party.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), usingDelegate && /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n          value: typed,\n          onChange: handleRecipientType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          disabled: !isAddress(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : \"\"),\n          onClick: onDelegate,\n          children: /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n            color: \"white\",\n            children: usingDelegate ? \"Delegate Votes\" : \"Self Delegate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n          onClick: () => setUsingDelegate(!usingDelegate),\n          children: /*#__PURE__*/_jsxDEV(TYPE.blue, {\n            children: [usingDelegate ? \"Remove\" : \"Add\", \" Delegate\", \" \", !usingDelegate && \"+\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), attempting && !hash && /*#__PURE__*/_jsxDEV(LoadingView, {\n      onDismiss: wrappedOndismiss,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n          children: usingDelegate ? \"Delegating votes\" : \"Unlocking Votes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), hash && /*#__PURE__*/_jsxDEV(SubmittedView, {\n      onDismiss: wrappedOndismiss,\n      hash: hash,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n          children: \"Transaction Submitted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DelegateModal, \"+q1VqFupW3P2XIBf8AFd8Av0PEg=\", false, function () {\n  return [useActiveWeb3React, useENS, useDelegateCallback];\n});\n\n_c4 = DelegateModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ContentWrapper\");\n$RefreshReg$(_c2, \"StyledClosed\");\n$RefreshReg$(_c3, \"TextButton\");\n$RefreshReg$(_c4, \"DelegateModal\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/vote/DelegateModal.tsx"],"names":["React","useState","Modal","AutoColumn","styled","RowBetween","TYPE","X","ButtonPrimary","useActiveWeb3React","AddressInputPanel","isAddress","useENS","useDelegateCallback","LoadingView","SubmittedView","ContentWrapper","StyledClosed","TextButton","div","DelegateModal","isOpen","onDismiss","title","account","chainId","usingDelegate","setUsingDelegate","typed","setTyped","handleRecipientType","val","activeDelegate","address","parsedAddress","delegateCallback","hash","setHash","attempting","setAttempting","wrappedOndismiss","undefined","onDelegate","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport Modal from \"../Modal\";\nimport { AutoColumn } from \"../Column\";\nimport styled from \"styled-components\";\nimport { RowBetween } from \"../Row\";\nimport { TYPE } from \"../../theme\";\nimport { X } from \"react-feather\";\nimport { ButtonPrimary } from \"../Button\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport AddressInputPanel from \"../AddressInputPanel\";\nimport { isAddress } from \"ethers/lib/utils\";\nimport useENS from \"../../hooks/useENS\";\nimport { useDelegateCallback } from \"../../state/governance/hooks\";\nimport { useTokenBalance } from \"../../state/wallet/hooks\";\nimport { LoadingView, SubmittedView } from \"../ModalViews\";\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 24px;\n`;\n\nconst StyledClosed = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst TextButton = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\n\ninterface VoteModalProps {\n  isOpen: boolean;\n  onDismiss: () => void;\n  title: string;\n}\n\nexport default function DelegateModal({\n  isOpen,\n  onDismiss,\n  title,\n}: VoteModalProps) {\n  const { account, chainId } = useActiveWeb3React();\n\n  // state for delegate input\n  const [usingDelegate, setUsingDelegate] = useState(false);\n  const [typed, setTyped] = useState(\"\");\n  function handleRecipientType(val: string) {\n    setTyped(val);\n  }\n\n  // monitor for self delegation or input for third part delegate\n  // default is self delegation\n  const activeDelegate = usingDelegate ? typed : account;\n  const { address: parsedAddress } = useENS(activeDelegate);\n\n  // get the number of votes available to delegate\n  // const uniBalance = useTokenBalance(\n  //   account ?? undefined,\n  //   chainId ? UNI[chainId] : undefined\n  // );\n\n  const delegateCallback = useDelegateCallback();\n\n  // monitor call to help UI loading state\n  const [hash, setHash] = useState<string | undefined>();\n  const [attempting, setAttempting] = useState(false);\n\n  // wrapper to reset state on modal close\n  function wrappedOndismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  async function onDelegate() {\n    setAttempting(true);\n\n    // if callback not returned properly ignore\n    if (!delegateCallback) return;\n\n    // try delegation and store hash\n    const hash = await delegateCallback(parsedAddress ?? undefined)?.catch(\n      (error) => {\n        setAttempting(false);\n        console.log(error);\n      }\n    );\n\n    if (hash) {\n      setHash(hash);\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOndismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <AutoColumn gap=\"lg\" justify=\"center\">\n            <RowBetween>\n              <TYPE.mediumHeader fontWeight={500}>{title}</TYPE.mediumHeader>\n              <StyledClosed stroke=\"black\" onClick={wrappedOndismiss} />\n            </RowBetween>\n            <TYPE.body>\n              Earned UNI tokens represent voting shares in Uniswap governance.\n            </TYPE.body>\n            <TYPE.body>\n              You can either vote on each proposal yourself or delegate your\n              votes to a third party.\n            </TYPE.body>\n            {usingDelegate && (\n              <AddressInputPanel value={typed} onChange={handleRecipientType} />\n            )}\n            <ButtonPrimary\n              disabled={!isAddress(parsedAddress ?? \"\")}\n              onClick={onDelegate}\n            >\n              <TYPE.mediumHeader color=\"white\">\n                {usingDelegate ? \"Delegate Votes\" : \"Self Delegate\"}\n              </TYPE.mediumHeader>\n            </ButtonPrimary>\n            <TextButton onClick={() => setUsingDelegate(!usingDelegate)}>\n              <TYPE.blue>\n                {usingDelegate ? \"Remove\" : \"Add\"} Delegate{\" \"}\n                {!usingDelegate && \"+\"}\n              </TYPE.blue>\n            </TextButton>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOndismiss}>\n          <AutoColumn gap=\"12px\" justify={\"center\"}>\n            <TYPE.largeHeader>\n              {usingDelegate ? \"Delegating votes\" : \"Unlocking Votes\"}\n            </TYPE.largeHeader>\n            {/* <TYPE.main fontSize={36}>{uniBalance?.toSignificant(4)}</TYPE.main> */}\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {hash && (\n        <SubmittedView onDismiss={wrappedOndismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={\"center\"}>\n            <TYPE.largeHeader>Transaction Submitted</TYPE.largeHeader>\n            {/* <TYPE.main fontSize={36}>{uniBalance?.toSignificant(4)}</TYPE.main> */}\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}