{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { ArrowDown } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\nimport { ButtonError, ButtonLight, ButtonConfirmed } from \"../../components/Button\";\nimport Card, { GreyCard } from \"../../components/Card\";\nimport Column, { AutoColumn } from \"../../components/Column\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport { SwapPoolTabs } from \"../../components/NavigationTabs\";\nimport { AutoRow, RowBetween } from \"../../components/Row\";\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from \"../../components/swap/styleds\";\nimport TradePrice from \"../../components/swap/TradePrice\";\nimport TokenWarningModal from \"../../components/TokenWarningModal\";\nimport ProgressSteps from \"../../components/ProgressSteps\";\nimport SwapHeader from \"../../components/swap/SwapHeader\";\nimport { INITIAL_ALLOWED_SLIPPAGE } from \"../../constants\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useCurrency } from \"../../hooks/Tokens\";\nimport useToggledVersion from \"../../hooks/useToggledVersion\";\nimport { useToggleSettingsMenu, useWalletModalToggle } from \"../../state/application/hooks\";\nimport { Field } from \"../../state/swap/actions\";\nimport { useDefaultsFromURLSearch, useSwapActionHandlers, useSwapState } from \"../../state/swap/hooks\";\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from \"../../state/user/hooks\";\nimport { LinkStyledButton, TYPE } from \"../../theme\";\nimport AppBody from \"../AppBody\";\nimport { ClickableText } from \"../Pool/styleds\";\nimport Loader from \"../../components/Loader\";\nimport { useQuery } from \"react-query\";\nimport getTokenList from \"utils/getTokenList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Swap() {\n  _s();\n\n  const loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const handleConfirmTokenWarning = useCallback(() => {}, []); // dismiss warning if all imported tokens are in active lists\n\n  const {\n    data,\n    isLoading,\n    isError\n  } = useQuery(\"tokenList\", getTokenList);\n  const {\n    account\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager(); // get custom setting values for user\n\n  const [allowedSlippage] = useUserSlippageTolerance(); // swap state\n\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const showWrap = false;\n  const recipientAddress = \"0xcD8Bb14Aac209462B438A66Fa550D3Ab2e1b474d\";\n  const toggledVersion = useToggledVersion();\n  const trade = showWrap;\n  const defaultTrade = showWrap;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: 100,\n    [Field.OUTPUT]: 200\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? 100 : 200,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? 100 : 200\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = false;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // modal and loading\n\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = 500;\n  const userHasSpecifiedInputOutput = true;\n  const noRoute = false; // check whether the user has approved the router on the input token\n\n  const [approval, approveCallback] = useState(false); // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false); // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n  useEffect(() => {\n    if (false) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = 10000;\n  const atMaxAmountInput = Boolean(maxAmountInput && true);\n  const priceImpactWithoutFee = 0.2;\n  const [singleHopOnly] = useUserSingleHopOnly();\n  const handleSwap = useCallback(() => {}, []); // errors\n\n  const [showInverted, setShowInverted] = useState(false); // warnings on slippage\n\n  const priceImpactSeverity = 2; // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  const showApproveFlow = true;\n  const handleConfirmDismiss = useCallback(() => {}, []);\n  const handleAcceptChanges = useCallback(() => {}, []);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {}, []);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  const swapIsUnsupported = false;\n\n  if (isLoading || !data) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AppBody, {\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  const tokenList = data.data.tokens;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: Object.values(tokenList).length > 0 && !false,\n      tokens: tokenList,\n      onConfirm: handleConfirmTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n      active: \"swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: independentField === Field.OUTPUT && !showWrap && trade ? \"From (estimated)\" : \"From\",\n            value: \"100\",\n            showMaxButton: !atMaxAmountInput,\n            currency: null,\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: null,\n            id: \"swap-currency-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: isExpertMode ? \"space-between\" : \"center\",\n              style: {\n                padding: \"0 1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                    onSwitchTokens();\n                  },\n                  color: null && null ? theme.primary1 : theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"add-recipient-button\",\n                onClick: () => onChangeRecipient(\"\"),\n                children: \"+ Add a send (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: null,\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && !showWrap && trade ? \"To (estimated)\" : \"To\",\n            showMaxButton: false,\n            currency: null,\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: null,\n            id: \"swap-currency-output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: \"0 1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: \"- Remove send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(Card, {\n            padding: showWrap ? \".25rem 1rem 0 1rem\" : \"0px\",\n            borderRadius: \"20px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"8px\",\n              style: {\n                padding: \"0 16px\"\n              },\n              children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                  price: \"100\",\n                  showInverted: showInverted,\n                  setShowInverted: setShowInverted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 21\n              }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: \"Slippage Tolerance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: [allowedSlippage / 100, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n          children: [!account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Insufficient liquidity for this trade.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), singleHopOnly && /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Try enabling multi-hop trades.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n              onClick: () => approveCallback(!approval),\n              disabled: false,\n              width: \"48%\",\n              altDisabledStyle: true // show solid button while waiting\n              ,\n              confirmed: true,\n              children: true ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                gap: \"6px\",\n                justify: \"center\",\n                children: [\"Approving \", /*#__PURE__*/_jsxDEV(Loader, {\n                  stroke: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this) : approvalSubmitted && true ? \"Approved\" : \"Approve \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: () => {},\n              width: \"48%\",\n              id: \"swap-button\",\n              disabled: !isValid || false || priceImpactSeverity > 3 && !isExpertMode,\n              error: false,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 16,\n                fontWeight: 500,\n                children: priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n            onClick: () => {},\n            id: \"swap-button\",\n            disabled: false,\n            error: isValid && priceImpactSeverity > 2 && !true,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: 20,\n              fontWeight: 500,\n              children: false ? \"test\" : priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(Column, {\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [false]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n            error: swapErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Swap, \"XNktcp19kQAQTxJCtANPABfsonU=\", false, function () {\n  return [useDefaultsFromURLSearch, useCurrency, useCurrency, useQuery, useActiveWeb3React, useWalletModalToggle, useToggleSettingsMenu, useExpertModeManager, useUserSlippageTolerance, useSwapState, useToggledVersion, useSwapActionHandlers, useUserSingleHopOnly];\n});\n\n_c = Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Swap/index.tsx"],"names":["React","useCallback","useContext","useEffect","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonLight","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","SwapHeader","INITIAL_ALLOWED_SLIPPAGE","useActiveWeb3React","useCurrency","useToggledVersion","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","LinkStyledButton","TYPE","AppBody","ClickableText","Loader","useQuery","getTokenList","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","handleConfirmTokenWarning","data","isLoading","isError","account","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","showWrap","recipientAddress","toggledVersion","trade","defaultTrade","parsedAmounts","INPUT","OUTPUT","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","undefined","formattedAmounts","userHasSpecifiedInputOutput","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","Boolean","priceImpactWithoutFee","singleHopOnly","handleSwap","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","tokenList","tokens","Object","values","length","padding","primary1","text2","textAlign","marginTop"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from \"@uniswap/sdk\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { ArrowDown } from \"react-feather\";\nimport ReactGA from \"react-ga\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\nimport {\n  ButtonError,\n  ButtonLight,\n  ButtonPrimary,\n  ButtonConfirmed,\n} from \"../../components/Button\";\nimport Card, { GreyCard } from \"../../components/Card\";\nimport Column, { AutoColumn } from \"../../components/Column\";\nimport ConfirmSwapModal from \"../../components/swap/ConfirmSwapModal\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport { SwapPoolTabs } from \"../../components/NavigationTabs\";\nimport { AutoRow, RowBetween } from \"../../components/Row\";\nimport AdvancedSwapDetailsDropdown from \"../../components/swap/AdvancedSwapDetailsDropdown\";\nimport BetterTradeLink, {\n  DefaultVersionLink,\n} from \"../../components/swap/BetterTradeLink\";\nimport confirmPriceImpactWithoutFee from \"../../components/swap/confirmPriceImpactWithoutFee\";\nimport {\n  ArrowWrapper,\n  BottomGrouping,\n  SwapCallbackError,\n  Wrapper,\n} from \"../../components/swap/styleds\";\nimport TradePrice from \"../../components/swap/TradePrice\";\nimport TokenWarningModal from \"../../components/TokenWarningModal\";\nimport ProgressSteps from \"../../components/ProgressSteps\";\nimport SwapHeader from \"../../components/swap/SwapHeader\";\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from \"../../constants\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useCurrency } from \"../../hooks/Tokens\";\n\nimport useToggledVersion, {\n  DEFAULT_VERSION,\n  Version,\n} from \"../../hooks/useToggledVersion\";\nimport useWrapCallback, { WrapType } from \"../../hooks/useWrapCallback\";\nimport {\n  useToggleSettingsMenu,\n  useWalletModalToggle,\n} from \"../../state/application/hooks\";\nimport { Field } from \"../../state/swap/actions\";\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from \"../../state/swap/hooks\";\nimport {\n  useExpertModeManager,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from \"../../state/user/hooks\";\nimport { LinkStyledButton, TYPE } from \"../../theme\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport {\n  computeTradePriceBreakdown,\n  warningSeverity,\n} from \"../../utils/prices\";\nimport AppBody from \"../AppBody\";\nimport { ClickableText } from \"../Pool/styleds\";\nimport Loader from \"../../components/Loader\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { isTradeBetter } from \"utils/trades\";\nimport { useQuery } from \"react-query\";\nimport getTokenList from \"utils/getTokenList\";\nimport { TokenList } from \"types\";\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ];\n\n  const handleConfirmTokenWarning = useCallback(() => {}, []);\n\n  // dismiss warning if all imported tokens are in active lists\n  const { data, isLoading, isError } = useQuery(\"tokenList\", getTokenList);\n  const { account } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle();\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState();\n\n  const showWrap: boolean = false;\n  const recipientAddress = \"0xcD8Bb14Aac209462B438A66Fa550D3Ab2e1b474d\";\n  const toggledVersion = useToggledVersion();\n\n  const trade = showWrap;\n  const defaultTrade = showWrap;\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: 100,\n        [Field.OUTPUT]: 200,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? 100 : 200,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? 100 : 200,\n      };\n\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  } = useSwapActionHandlers();\n  const isValid = false;\n  const dependentField: Field =\n    independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value);\n    },\n    [onUserInput]\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value);\n    },\n    [onUserInput]\n  );\n\n  // modal and loading\n  const [\n    { showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash },\n    setSwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const formattedAmounts = 500;\n\n  const userHasSpecifiedInputOutput = true;\n  const noRoute = false;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useState(false);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (false) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const maxAmountInput = 10000;\n  const atMaxAmountInput = Boolean(maxAmountInput && true);\n\n  const priceImpactWithoutFee = 0.2;\n\n  const [singleHopOnly] = useUserSingleHopOnly();\n\n  const handleSwap = useCallback(() => {}, []);\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = 2;\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow = true;\n\n  const handleConfirmDismiss = useCallback(() => {}, []);\n\n  const handleAcceptChanges = useCallback(() => {}, []);\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection]\n  );\n\n  const handleMaxInput = useCallback(() => {}, []);\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  );\n\n  const swapIsUnsupported = false;\n\n  if (isLoading || !data) {\n    return (\n      <>\n        <AppBody>\n          <Loader stroke=\"white\" />\n        </AppBody>\n      </>\n    );\n  }\n\n  const tokenList: TokenList = data.data.tokens;\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={Object.values(tokenList).length > 0 && !false}\n        tokens={tokenList}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SwapPoolTabs active={\"swap\"} />\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          {/* <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          /> */}\n\n          <AutoColumn gap={\"md\"}>\n            <CurrencyInputPanel\n              label={\n                independentField === Field.OUTPUT && !showWrap && trade\n                  ? \"From (estimated)\"\n                  : \"From\"\n              }\n              value={\"100\"}\n              showMaxButton={!atMaxAmountInput}\n              currency={null}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={null}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow\n                justify={isExpertMode ? \"space-between\" : \"center\"}\n                style={{ padding: \"0 1rem\" }}\n              >\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n                      onSwitchTokens();\n                    }}\n                    color={null && null ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton\n                    id=\"add-recipient-button\"\n                    onClick={() => onChangeRecipient(\"\")}\n                  >\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={null}\n              onUserInput={handleTypeOutput}\n              label={\n                independentField === Field.INPUT && !showWrap && trade\n                  ? \"To (estimated)\"\n                  : \"To\"\n              }\n              showMaxButton={false}\n              currency={null}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={null}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: \"0 1rem\" }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton\n                    id=\"remove-recipient-button\"\n                    onClick={() => onChangeRecipient(null)}\n                  >\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel\n                  id=\"recipient\"\n                  value={recipient}\n                  onChange={onChangeRecipient}\n                />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card\n                padding={showWrap ? \".25rem 1rem 0 1rem\" : \"0px\"}\n                borderRadius={\"20px\"}\n              >\n                <AutoColumn gap=\"8px\" style={{ padding: \"0 16px\" }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        Price\n                      </Text>\n                      <TradePrice\n                        price={\"100\"}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText\n                        fontWeight={500}\n                        fontSize={14}\n                        color={theme.text2}\n                        onClick={toggleSettings}\n                      >\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText\n                        fontWeight={500}\n                        fontSize={14}\n                        color={theme.text2}\n                        onClick={toggleSettings}\n                      >\n                        {allowedSlippage / 100}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {!account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                Connect Wallet\n              </ButtonLight>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: \"center\" }}>\n                <TYPE.main mb=\"4px\">\n                  Insufficient liquidity for this trade.\n                </TYPE.main>\n                {singleHopOnly && (\n                  <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={() => approveCallback(!approval)}\n                  disabled={false}\n                  width=\"48%\"\n                  altDisabledStyle={true} // show solid button while waiting\n                  confirmed={true}\n                >\n                  {true ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Approving <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && true ? (\n                    \"Approved\"\n                  ) : (\n                    \"Approve \"\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {}}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid ||\n                    false ||\n                    (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={false}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {}}\n                id=\"swap-button\"\n                disabled={false}\n                error={isValid && priceImpactSeverity > 2 && !true}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {false\n                    ? \"test\"\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: \"1rem\" }}>\n                <ProgressSteps steps={[false]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? (\n              <SwapCallbackError error={swapErrorMessage} />\n            ) : null}\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}