{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Toggle/ListToggle.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { TYPE } from '../../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.button`\n  border-radius: 20px;\n  border: none;\n  background: ${({\n  theme\n}) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`;\n_c = Wrapper;\nconst ToggleElement = styled.span`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({\n  isActive,\n  bgColor,\n  theme\n}) => isActive ? bgColor : theme.bg4};\n  :hover {\n    opacity: 0.8;\n  }\n`;\n_c2 = ToggleElement;\nconst StatusText = styled(TYPE.main)`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({\n  theme,\n  isActive\n}) => isActive ? theme.text1 : theme.text3};\n`;\n_c3 = StatusText;\nexport default function ListToggle({\n  id,\n  isActive,\n  bgColor,\n  toggle\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    children: [isActive && /*#__PURE__*/_jsxDEV(StatusText, {\n      fontWeight: \"600\",\n      margin: \"0 6px\",\n      isActive: true,\n      children: \"ON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToggleElement, {\n      isActive: isActive,\n      bgColor: bgColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isActive && /*#__PURE__*/_jsxDEV(StatusText, {\n      fontWeight: \"600\",\n      margin: \"0 6px\",\n      isActive: false,\n      children: \"OFF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c4 = ListToggle;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ToggleElement\");\n$RefreshReg$(_c3, \"StatusText\");\n$RefreshReg$(_c4, \"ListToggle\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Toggle/ListToggle.tsx"],"names":["React","styled","TYPE","Wrapper","button","theme","bg1","ToggleElement","span","isActive","bgColor","bg4","StatusText","main","text1","text3","ListToggle","id","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,MAAwD;AAC/E;AACA;AACA,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMH,O;AAYN,MAAMI,aAAa,GAAGN,MAAM,CAACO,IAA+C;AAC5E;AACA;AACA;AACA,sBAAsB,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBL,EAAAA;AAArB,CAAD,KAAmCI,QAAQ,GAAGC,OAAH,GAAaL,KAAK,CAACM,GAAK;AACzF;AACA;AACA;AACA,CARA;MAAMJ,a;AAUN,MAAMK,UAAU,GAAGX,MAAM,CAACC,IAAI,CAACW,IAAN,CAAoC;AAC7D;AACA;AACA,WAAW,CAAC;AAAER,EAAAA,KAAF;AAASI,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGJ,KAAK,CAACS,KAAT,GAAiBT,KAAK,CAACU,KAAO;AAC3E,CAJA;MAAMH,U;AAaN,eAAe,SAASI,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMR,EAAAA,QAAN;AAAgBC,EAAAA,OAAhB;AAAyBQ,EAAAA;AAAzB,CAApB,EAAoE;AACjF,sBACE,QAAC,OAAD;AAAS,IAAA,EAAE,EAAED,EAAb;AAAiB,IAAA,QAAQ,EAAER,QAA3B;AAAqC,IAAA,OAAO,EAAES,MAA9C;AAAA,eACGT,QAAQ,iBACP,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,QAAzB;AAAmC,MAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF,EAOG,CAACD,QAAD,iBACC,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;MAhBuBO,U","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { TYPE } from '../../theme'\n\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 20px;\n  border: none;\n  background: ${({ theme }) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`\n\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : theme.bg4)};\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst StatusText = styled(TYPE.main)<{ isActive?: boolean }>`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text3)};\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  bgColor: string\n  toggle: () => void\n}\n\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\n  return (\n    <Wrapper id={id} isActive={isActive} onClick={toggle}>\n      {isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={true}>\n          ON\n        </StatusText>\n      )}\n      <ToggleElement isActive={isActive} bgColor={bgColor} />\n      {!isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={false}>\n          OFF\n        </StatusText>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}