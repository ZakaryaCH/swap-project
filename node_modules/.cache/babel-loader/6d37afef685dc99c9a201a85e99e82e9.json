{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport useLast from \"../../hooks/useLast\";\nimport Modal from \"../Modal\";\nimport { CurrencySearch } from \"./CurrencySearch\";\nimport { ImportToken } from \"./ImportToken\";\nimport usePrevious from \"hooks/usePrevious\";\nimport Manage from \"./Manage\";\nimport { ImportList } from \"./ImportList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let CurrencyModalView;\n\n(function (CurrencyModalView) {\n  CurrencyModalView[CurrencyModalView[\"search\"] = 0] = \"search\";\n  CurrencyModalView[CurrencyModalView[\"manage\"] = 1] = \"manage\";\n  CurrencyModalView[CurrencyModalView[\"importToken\"] = 2] = \"importToken\";\n  CurrencyModalView[CurrencyModalView[\"importList\"] = 3] = \"importList\";\n})(CurrencyModalView || (CurrencyModalView = {}));\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false\n}) {\n  _s();\n\n  const [modalView, setModalView] = useState(CurrencyModalView.manage);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setModalView(CurrencyModalView.search);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // for token import view\n\n  const prevView = usePrevious(modalView); // used for import token flow\n\n  const [importToken, setImportToken] = useState(); // used for import list\n\n  const [importList, setImportList] = useState();\n  const [listURL, setListUrl] = useState(); // change min height if not searching\n\n  const minHeight = modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList ? 40 : 80;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 80,\n    minHeight: minHeight,\n    children: modalView === CurrencyModalView.search ? /*#__PURE__*/_jsxDEV(CurrencySearch, {\n      isOpen: isOpen,\n      onDismiss: onDismiss,\n      onCurrencySelect: handleCurrencySelect,\n      selectedCurrency: selectedCurrency,\n      otherSelectedCurrency: otherSelectedCurrency,\n      showImportView: () => setModalView(CurrencyModalView.importToken),\n      setImportToken: setImportToken,\n      showManageView: () => setModalView(CurrencyModalView.manage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : modalView === CurrencyModalView.importToken && importToken ? /*#__PURE__*/_jsxDEV(ImportToken, {\n      tokens: [importToken],\n      onDismiss: onDismiss,\n      onBack: () => setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n      handleCurrencySelect: handleCurrencySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : modalView === CurrencyModalView.importList && importList && listURL ? /*#__PURE__*/_jsxDEV(ImportList, {\n      list: importList,\n      listURL: listURL,\n      onDismiss: onDismiss,\n      setModalView: setModalView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : modalView === CurrencyModalView.manage ? /*#__PURE__*/_jsxDEV(Manage, {\n      onDismiss: onDismiss,\n      setModalView: setModalView,\n      setImportToken: setImportToken,\n      setImportList: setImportList,\n      setListUrl: setListUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySearchModal, \"ZawNF6WV4HM8cPwowXsdTi+MOtI=\", false, function () {\n  return [useLast, usePrevious];\n});\n\n_c = CurrencySearchModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearchModal\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","useLast","Modal","CurrencySearch","ImportToken","usePrevious","Manage","ImportList","CurrencyModalView","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","modalView","setModalView","manage","lastOpen","search","handleCurrencySelect","currency","prevView","importToken","setImportToken","importList","setImportList","listURL","setListUrl","minHeight"],"mappings":"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","sourcesContent":["import { Currency, Token } from \"@uniswap/sdk\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport useLast from \"../../hooks/useLast\";\nimport Modal from \"../Modal\";\nimport { CurrencySearch } from \"./CurrencySearch\";\nimport { ImportToken } from \"./ImportToken\";\nimport usePrevious from \"hooks/usePrevious\";\nimport Manage from \"./Manage\";\nimport { TokenList } from \"@uniswap/token-lists\";\nimport { ImportList } from \"./ImportList\";\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean;\n  onDismiss: () => void;\n  selectedCurrency?: Currency | null;\n  onCurrencySelect: (currency: Currency) => void;\n  otherSelectedCurrency?: Currency | null;\n}\n\nexport enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(\n    CurrencyModalView.manage\n  );\n  const lastOpen = useLast(isOpen);\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setModalView(CurrencyModalView.search);\n    }\n  }, [isOpen, lastOpen]);\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency);\n      onDismiss();\n    },\n    [onDismiss, onCurrencySelect]\n  );\n\n  // for token import view\n  const prevView = usePrevious(modalView);\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>();\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>();\n  const [listURL, setListUrl] = useState<string | undefined>();\n\n  // change min height if not searching\n  const minHeight =\n    modalView === CurrencyModalView.importToken ||\n    modalView === CurrencyModalView.importList\n      ? 40\n      : 80;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      maxHeight={80}\n      minHeight={minHeight}\n    >\n      {modalView === CurrencyModalView.search ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showImportView={() => setModalView(CurrencyModalView.importToken)}\n          setImportToken={setImportToken}\n          showManageView={() => setModalView(CurrencyModalView.manage)}\n        />\n      ) : modalView === CurrencyModalView.importToken && importToken ? (\n        <ImportToken\n          tokens={[importToken]}\n          onDismiss={onDismiss}\n          onBack={() =>\n            setModalView(\n              prevView && prevView !== CurrencyModalView.importToken\n                ? prevView\n                : CurrencyModalView.search\n            )\n          }\n          handleCurrencySelect={handleCurrencySelect}\n        />\n      ) : modalView === CurrencyModalView.importList &&\n        importList &&\n        listURL ? (\n        <ImportList\n          list={importList}\n          listURL={listURL}\n          onDismiss={onDismiss}\n          setModalView={setModalView}\n        />\n      ) : modalView === CurrencyModalView.manage ? (\n        <Manage\n          onDismiss={onDismiss}\n          setModalView={setModalView}\n          setImportToken={setImportToken}\n          setImportList={setImportList}\n          setListUrl={setListUrl}\n        />\n      ) : (\n        \"\"\n      )}\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}