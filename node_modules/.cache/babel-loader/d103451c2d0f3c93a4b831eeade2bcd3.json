{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ArrowDown } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonConfirmed } from \"../../components/Button\";\nimport Card, { GreyCard } from \"../../components/Card\";\nimport Column, { AutoColumn } from \"../../components/Column\";\nimport ConfirmSwapModal from \"../../components/swap/ConfirmSwapModal\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport { SwapPoolTabs } from \"../../components/NavigationTabs\";\nimport { AutoRow, RowBetween } from \"../../components/Row\";\nimport AdvancedSwapDetailsDropdown from \"../../components/swap/AdvancedSwapDetailsDropdown\";\nimport BetterTradeLink, { DefaultVersionLink } from \"../../components/swap/BetterTradeLink\";\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from \"../../components/swap/styleds\";\nimport TradePrice from \"../../components/swap/TradePrice\";\nimport ProgressSteps from \"../../components/ProgressSteps\";\nimport SwapHeader from \"../../components/swap/SwapHeader\";\nimport { INITIAL_ALLOWED_SLIPPAGE } from \"../../constants\";\nimport { ApprovalState } from \"../../hooks/useApproveCallback\";\nimport { DEFAULT_VERSION, Version } from \"../../hooks/useToggledVersion\";\nimport { WrapType } from \"../../hooks/useWrapCallback\";\nimport { Field } from \"../../state/swap/actions\";\nimport { LinkStyledButton, TYPE } from \"../../theme\";\nimport AppBody from \"../AppBody\";\nimport { ClickableText } from \"../Pool/styleds\";\nimport Loader from \"../../components/Loader\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Swap() {\n  _s();\n\n  var _trade, _wrapInputError, _currencies$Field$INP;\n\n  const [swapErrorMessage, setSwapErrorMessage] = useState(\"\");\n  const [allowedSlippage, setAllowedSlippage] = useState(\"\");\n\n  const handleSwap = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SwapPoolTabs, {\n      active: \"swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: trade,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: allowedSlippage,\n          onConfirm: handleSwap,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            label: independentField === Field.OUTPUT && !showWrap && trade ? \"From (estimated)\" : \"From\",\n            value: formattedAmounts[Field.INPUT],\n            showMaxButton: !atMaxAmountInput,\n            currency: currencies[Field.INPUT],\n            onUserInput: handleTypeInput,\n            onMax: handleMaxInput,\n            onCurrencySelect: handleInputSelect,\n            otherCurrency: currencies[Field.OUTPUT],\n            id: \"swap-currency-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"space-between\",\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: isExpertMode ? \"space-between\" : \"center\",\n              style: {\n                padding: \"0 1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: true,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                    onSwitchTokens();\n                  },\n                  color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"add-recipient-button\",\n                onClick: () => onChangeRecipient(\"\"),\n                children: \"+ Add a send (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.OUTPUT],\n            onUserInput: handleTypeOutput,\n            label: independentField === Field.INPUT && !showWrap && trade ? \"To (estimated)\" : \"To\",\n            showMaxButton: false,\n            currency: currencies[Field.OUTPUT],\n            onCurrencySelect: handleOutputSelect,\n            otherCurrency: currencies[Field.INPUT],\n            id: \"swap-currency-output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: \"0 1rem\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: \"- Remove send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, showWrap ? null : /*#__PURE__*/_jsxDEV(Card, {\n            padding: showWrap ? \".25rem 1rem 0 1rem\" : \"0px\",\n            borderRadius: \"20px\",\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"8px\",\n              style: {\n                padding: \"0 16px\"\n              },\n              children: [Boolean(trade) && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TradePrice, {\n                  price: (_trade = trade) === null || _trade === void 0 ? void 0 : _trade.executionPrice,\n                  showInverted: showInverted,\n                  setShowInverted: setShowInverted\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && /*#__PURE__*/_jsxDEV(RowBetween, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: \"Slippage Tolerance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  color: theme.text2,\n                  onClick: toggleSettings,\n                  children: [allowedSlippage / 100, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BottomGrouping, {\n          children: [swapIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Unsupported Asset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this) : !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n            onClick: toggleWalletModal,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabled: Boolean(wrapInputError),\n            onClick: onWrap,\n            children: (_wrapInputError = wrapInputError) !== null && _wrapInputError !== void 0 ? _wrapInputError : wrapType === WrapType.WRAP ? \"Wrap\" : wrapType === WrapType.UNWRAP ? \"Unwrap\" : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/_jsxDEV(GreyCard, {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Insufficient liquidity for this trade.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), singleHopOnly && /*#__PURE__*/_jsxDEV(TYPE.main, {\n              mb: \"4px\",\n              children: \"Try enabling multi-hop trades.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n              onClick: approveCallback,\n              disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n              width: \"48%\",\n              altDisabledStyle: approval === ApprovalState.PENDING // show solid button while waiting\n              ,\n              confirmed: approval === ApprovalState.APPROVED,\n              children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                gap: \"6px\",\n                justify: \"center\",\n                children: [\"Approving \", /*#__PURE__*/_jsxDEV(Loader, {\n                  stroke: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this) : approvalSubmitted && approval === ApprovalState.APPROVED ? \"Approved\" : \"Approve \" + ((_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: () => {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined\n                  });\n                }\n              },\n              width: \"48%\",\n              id: \"swap-button\",\n              disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n              error: isValid && priceImpactSeverity > 2,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 16,\n                fontWeight: 500,\n                children: priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n            onClick: () => {\n              if (isExpertMode) {\n                handleSwap();\n              } else {\n                setSwapState({\n                  tradeToConfirm: trade,\n                  attemptingTxn: false,\n                  swapErrorMessage: undefined,\n                  showConfirm: true,\n                  txHash: undefined\n                });\n              }\n            },\n            id: \"swap-button\",\n            disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n            error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: 20,\n              fontWeight: 500,\n              children: swapInputError ? swapInputError : priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), showApproveFlow && /*#__PURE__*/_jsxDEV(Column, {\n            style: {\n              marginTop: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ProgressSteps, {\n              steps: [approval === ApprovalState.APPROVED]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n            error: swapErrorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this) : null, betterTradeLinkV2 && !swapIsUnsupported && toggledVersion === Version.v1 ? /*#__PURE__*/_jsxDEV(BetterTradeLink, {\n            version: betterTradeLinkV2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this) : toggledVersion !== DEFAULT_VERSION && defaultTrade ? /*#__PURE__*/_jsxDEV(DefaultVersionLink, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), !swapIsUnsupported ? /*#__PURE__*/_jsxDEV(AdvancedSwapDetailsDropdown, {\n      trade: trade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      show: swapIsUnsupported,\n      currencies: [currencies.INPUT, currencies.OUTPUT]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Swap, \"Rhspb04mCj73YHO+ejSKQIpanL4=\");\n\n_c = Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/Swap/index.tsx"],"names":["React","useState","ArrowDown","Text","AddressInputPanel","ButtonError","ButtonLight","ButtonPrimary","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","AdvancedSwapDetailsDropdown","BetterTradeLink","DefaultVersionLink","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","ProgressSteps","SwapHeader","INITIAL_ALLOWED_SLIPPAGE","ApprovalState","DEFAULT_VERSION","Version","WrapType","Field","LinkStyledButton","TYPE","AppBody","ClickableText","Loader","UnsupportedCurrencyFooter","Swap","swapErrorMessage","setSwapErrorMessage","allowedSlippage","setAllowedSlippage","handleSwap","showConfirm","trade","tradeToConfirm","handleAcceptChanges","attemptingTxn","txHash","recipient","handleConfirmDismiss","independentField","OUTPUT","showWrap","formattedAmounts","INPUT","atMaxAmountInput","currencies","handleTypeInput","handleMaxInput","handleInputSelect","isExpertMode","padding","setApprovalSubmitted","onSwitchTokens","theme","primary1","text2","onChangeRecipient","handleTypeOutput","handleOutputSelect","Boolean","executionPrice","showInverted","setShowInverted","toggleSettings","swapIsUnsupported","account","toggleWalletModal","wrapInputError","onWrap","wrapType","WRAP","UNWRAP","noRoute","userHasSpecifiedInputOutput","textAlign","singleHopOnly","showApproveFlow","approveCallback","approval","NOT_APPROVED","approvalSubmitted","PENDING","APPROVED","symbol","setSwapState","undefined","isValid","priceImpactSeverity","swapCallbackError","swapInputError","marginTop","betterTradeLinkV2","toggledVersion","v1","defaultTrade"],"mappings":"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","sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from \"@uniswap/sdk\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { ArrowDown } from \"react-feather\";\nimport ReactGA from \"react-ga\";\nimport { Text } from \"rebass\";\nimport { ThemeContext } from \"styled-components\";\nimport AddressInputPanel from \"../../components/AddressInputPanel\";\nimport {\n  ButtonError,\n  ButtonLight,\n  ButtonPrimary,\n  ButtonConfirmed,\n} from \"../../components/Button\";\nimport Card, { GreyCard } from \"../../components/Card\";\nimport Column, { AutoColumn } from \"../../components/Column\";\nimport ConfirmSwapModal from \"../../components/swap/ConfirmSwapModal\";\nimport CurrencyInputPanel from \"../../components/CurrencyInputPanel\";\nimport { SwapPoolTabs } from \"../../components/NavigationTabs\";\nimport { AutoRow, RowBetween } from \"../../components/Row\";\nimport AdvancedSwapDetailsDropdown from \"../../components/swap/AdvancedSwapDetailsDropdown\";\nimport BetterTradeLink, {\n  DefaultVersionLink,\n} from \"../../components/swap/BetterTradeLink\";\nimport confirmPriceImpactWithoutFee from \"../../components/swap/confirmPriceImpactWithoutFee\";\nimport {\n  ArrowWrapper,\n  BottomGrouping,\n  SwapCallbackError,\n  Wrapper,\n} from \"../../components/swap/styleds\";\nimport TradePrice from \"../../components/swap/TradePrice\";\nimport TokenWarningModal from \"../../components/TokenWarningModal\";\nimport ProgressSteps from \"../../components/ProgressSteps\";\nimport SwapHeader from \"../../components/swap/SwapHeader\";\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from \"../../constants\";\nimport { getTradeVersion } from \"../../data/V1\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useCurrency } from \"../../hooks/Tokens\";\nimport {\n  ApprovalState,\n  useApproveCallbackFromTrade,\n} from \"../../hooks/useApproveCallback\";\nimport useENSAddress from \"../../hooks/useENSAddress\";\nimport { useSwapCallback } from \"../../hooks/useSwapCallback\";\nimport useToggledVersion, {\n  DEFAULT_VERSION,\n  Version,\n} from \"../../hooks/useToggledVersion\";\nimport useWrapCallback, { WrapType } from \"../../hooks/useWrapCallback\";\nimport {\n  useToggleSettingsMenu,\n  useWalletModalToggle,\n} from \"../../state/application/hooks\";\nimport { Field } from \"../../state/swap/actions\";\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from \"../../state/swap/hooks\";\nimport {\n  useExpertModeManager,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from \"../../state/user/hooks\";\nimport { LinkStyledButton, TYPE } from \"../../theme\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport {\n  computeTradePriceBreakdown,\n  warningSeverity,\n} from \"../../utils/prices\";\nimport AppBody from \"../AppBody\";\nimport { ClickableText } from \"../Pool/styleds\";\nimport Loader from \"../../components/Loader\";\nimport UnsupportedCurrencyFooter from \"components/swap/UnsupportedCurrencyFooter\";\nimport { isTradeBetter } from \"utils/trades\";\nimport { fetchTokenList } from \"state/lists/actions\";\nimport { useSelector } from \"react-redux\";\nexport default function Swap() {\n  const [swapErrorMessage, setSwapErrorMessage] = useState(\"\");\n  const [allowedSlippage, setAllowedSlippage] = useState(\"\");\n  const handleSwap = () => {};\n  return (\n    <>\n      <SwapPoolTabs active={\"swap\"} />\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={\"md\"}>\n            <CurrencyInputPanel\n              label={\n                independentField === Field.OUTPUT && !showWrap && trade\n                  ? \"From (estimated)\"\n                  : \"From\"\n              }\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow\n                justify={isExpertMode ? \"space-between\" : \"center\"}\n                style={{ padding: \"0 1rem\" }}\n              >\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n                      onSwitchTokens();\n                    }}\n                    color={\n                      currencies[Field.INPUT] && currencies[Field.OUTPUT]\n                        ? theme.primary1\n                        : theme.text2\n                    }\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton\n                    id=\"add-recipient-button\"\n                    onClick={() => onChangeRecipient(\"\")}\n                  >\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={\n                independentField === Field.INPUT && !showWrap && trade\n                  ? \"To (estimated)\"\n                  : \"To\"\n              }\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: \"0 1rem\" }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton\n                    id=\"remove-recipient-button\"\n                    onClick={() => onChangeRecipient(null)}\n                  >\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel\n                  id=\"recipient\"\n                  value={recipient}\n                  onChange={onChangeRecipient}\n                />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card\n                padding={showWrap ? \".25rem 1rem 0 1rem\" : \"0px\"}\n                borderRadius={\"20px\"}\n              >\n                <AutoColumn gap=\"8px\" style={{ padding: \"0 16px\" }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        Price\n                      </Text>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                    <RowBetween align=\"center\">\n                      <ClickableText\n                        fontWeight={500}\n                        fontSize={14}\n                        color={theme.text2}\n                        onClick={toggleSettings}\n                      >\n                        Slippage Tolerance\n                      </ClickableText>\n                      <ClickableText\n                        fontWeight={500}\n                        fontSize={14}\n                        color={theme.text2}\n                        onClick={toggleSettings}\n                      >\n                        {allowedSlippage / 100}%\n                      </ClickableText>\n                    </RowBetween>\n                  )}\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n          <BottomGrouping>\n            {swapIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                Connect Wallet\n              </ButtonLight>\n            ) : showWrap ? (\n              <ButtonPrimary\n                disabled={Boolean(wrapInputError)}\n                onClick={onWrap}\n              >\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP\n                    ? \"Wrap\"\n                    : wrapType === WrapType.UNWRAP\n                    ? \"Unwrap\"\n                    : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: \"center\" }}>\n                <TYPE.main mb=\"4px\">\n                  Insufficient liquidity for this trade.\n                </TYPE.main>\n                {singleHopOnly && (\n                  <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={approveCallback}\n                  disabled={\n                    approval !== ApprovalState.NOT_APPROVED || approvalSubmitted\n                  }\n                  width=\"48%\"\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                  confirmed={approval === ApprovalState.APPROVED}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Approving <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted &&\n                    approval === ApprovalState.APPROVED ? (\n                    \"Approved\"\n                  ) : (\n                    \"Approve \" + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap();\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      });\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid ||\n                    approval !== ApprovalState.APPROVED ||\n                    (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    });\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={\n                  !isValid ||\n                  (priceImpactSeverity > 3 && !isExpertMode) ||\n                  !!swapCallbackError\n                }\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? \" Anyway\" : \"\"}`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: \"1rem\" }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? (\n              <SwapCallbackError error={swapErrorMessage} />\n            ) : null}\n            {betterTradeLinkV2 &&\n            !swapIsUnsupported &&\n            toggledVersion === Version.v1 ? (\n              <BetterTradeLink version={betterTradeLinkV2} />\n            ) : toggledVersion !== DEFAULT_VERSION && defaultTrade ? (\n              <DefaultVersionLink />\n            ) : null}\n          </BottomGrouping>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={swapIsUnsupported}\n          currencies={[currencies.INPUT, currencies.OUTPUT]}\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}