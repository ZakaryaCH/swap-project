{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/index.tsx\";\nimport { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\nimport \"inter-ui\";\nimport React, { StrictMode } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport ReactDOM from \"react-dom\";\nimport ReactGA from \"react-ga\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport Blocklist from \"./components/Blocklist\";\nimport { NetworkContextName } from \"./constants\";\nimport \"./i18n\";\nimport App from \"./pages/App\";\nimport store from \"./state\";\nimport ApplicationUpdater from \"./state/application/updater\";\nimport ListsUpdater from \"./state/lists/updater\";\nimport MulticallUpdater from \"./state/multicall/updater\";\nimport TransactionUpdater from \"./state/transactions/updater\";\nimport UserUpdater from \"./state/user/updater\";\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from \"./theme\";\nimport getLibrary from \"./utils/getLibrary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n_c = Web3ProviderNetwork;\nconst queryClient = new QueryClient();\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false;\n}\n\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID;\n\nif (typeof GOOGLE_ANALYTICS_ID === \"string\") {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID);\n  ReactGA.set({\n    customBrowserType: !isMobile ? \"desktop\" : \"web3\" in window || \"ethereum\" in window ? \"mobileWeb3\" : \"mobileRegular\"\n  });\n} else {\n  ReactGA.initialize(\"test\", {\n    testMode: true,\n    debug: true\n  });\n}\n\nwindow.addEventListener(\"error\", error => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true\n  });\n});\n\nfunction Updaters() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListsUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApplicationUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MulticallUpdater, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Updaters;\nReactDOM.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(FixedGlobalStyle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(Web3ReactProvider, {\n      getLibrary: getLibrary,\n      children: /*#__PURE__*/_jsxDEV(Web3ProviderNetwork, {\n        getLibrary: getLibrary,\n        children: /*#__PURE__*/_jsxDEV(Blocklist, {\n          children: /*#__PURE__*/_jsxDEV(Provider, {\n            store: store,\n            children: [/*#__PURE__*/_jsxDEV(Updaters, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedGlobalStyle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(HashRouter, {\n                children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Web3ProviderNetwork\");\n$RefreshReg$(_c2, \"Updaters\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/index.tsx"],"names":["createWeb3ReactRoot","Web3ReactProvider","React","StrictMode","isMobile","ReactDOM","ReactGA","QueryClient","QueryClientProvider","Provider","HashRouter","Blocklist","NetworkContextName","App","store","ApplicationUpdater","ListsUpdater","MulticallUpdater","TransactionUpdater","UserUpdater","ThemeProvider","FixedGlobalStyle","ThemedGlobalStyle","getLibrary","Web3ProviderNetwork","queryClient","window","ethereum","autoRefreshOnNetworkChange","GOOGLE_ANALYTICS_ID","process","env","REACT_APP_GOOGLE_ANALYTICS_ID","initialize","set","customBrowserType","testMode","debug","addEventListener","error","exception","description","message","filename","lineno","colno","fatal","Updaters","render","document","getElementById"],"mappings":"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","sourcesContent":["import { createWeb3ReactRoot, Web3ReactProvider } from \"@web3-react/core\";\nimport \"inter-ui\";\nimport React, { StrictMode } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport ReactDOM from \"react-dom\";\nimport ReactGA from \"react-ga\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport Blocklist from \"./components/Blocklist\";\nimport { NetworkContextName } from \"./constants\";\nimport \"./i18n\";\nimport App from \"./pages/App\";\nimport store from \"./state\";\nimport ApplicationUpdater from \"./state/application/updater\";\nimport ListsUpdater from \"./state/lists/updater\";\nimport MulticallUpdater from \"./state/multicall/updater\";\nimport TransactionUpdater from \"./state/transactions/updater\";\nimport UserUpdater from \"./state/user/updater\";\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from \"./theme\";\nimport getLibrary from \"./utils/getLibrary\";\n\nconst Web3ProviderNetwork = createWeb3ReactRoot(NetworkContextName);\n\nconst queryClient = new QueryClient();\n\nif (!!window.ethereum) {\n  window.ethereum.autoRefreshOnNetworkChange = false;\n}\n\nconst GOOGLE_ANALYTICS_ID: string | undefined =\n  process.env.REACT_APP_GOOGLE_ANALYTICS_ID;\nif (typeof GOOGLE_ANALYTICS_ID === \"string\") {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID);\n  ReactGA.set({\n    customBrowserType: !isMobile\n      ? \"desktop\"\n      : \"web3\" in window || \"ethereum\" in window\n      ? \"mobileWeb3\"\n      : \"mobileRegular\",\n  });\n} else {\n  ReactGA.initialize(\"test\", { testMode: true, debug: true });\n}\n\nwindow.addEventListener(\"error\", (error) => {\n  ReactGA.exception({\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\n    fatal: true,\n  });\n});\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <UserUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  );\n}\n\nReactDOM.render(\n  <StrictMode>\n    <FixedGlobalStyle />\n    <QueryClientProvider client={queryClient}>\n      <Web3ReactProvider getLibrary={getLibrary}>\n        <Web3ProviderNetwork getLibrary={getLibrary}>\n          <Blocklist>\n            <Provider store={store}>\n              <Updaters />\n              <ThemeProvider>\n                <ThemedGlobalStyle />\n                <HashRouter>\n                  <App />\n                </HashRouter>\n              </ThemeProvider>\n            </Provider>\n          </Blocklist>\n        </Web3ProviderNetwork>\n      </Web3ReactProvider>\n    </QueryClientProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}