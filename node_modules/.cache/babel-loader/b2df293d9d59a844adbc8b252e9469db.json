{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ImportRow.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AutoRow, RowFixed } from 'components/Row';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { TYPE } from 'theme';\nimport ListLogo from 'components/ListLogo';\nimport { useActiveWeb3React } from 'hooks';\nimport { useCombinedInactiveList } from 'state/lists/hooks';\nimport useTheme from 'hooks/useTheme';\nimport { ButtonPrimary } from 'components/Button';\nimport styled from 'styled-components';\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens';\nimport { CheckCircle } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSection = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({\n  dim\n}) => dim ? '0.4' : '1'};\n`;\n_c = TokenSection;\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({\n  theme\n}) => theme.green1};\n`;\n_c2 = CheckIcon;\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`;\n_c3 = NameOverflow;\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n\n  var _inactiveTokenList$ch, _inactiveTokenList$ch2;\n\n  // gloabls\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useTheme(); // check if token comes from list\n\n  const inactiveTokenList = useCombinedInactiveList();\n  const list = chainId && (inactiveTokenList === null || inactiveTokenList === void 0 ? void 0 : (_inactiveTokenList$ch = inactiveTokenList[chainId]) === null || _inactiveTokenList$ch === void 0 ? void 0 : (_inactiveTokenList$ch2 = _inactiveTokenList$ch[token.address]) === null || _inactiveTokenList$ch2 === void 0 ? void 0 : _inactiveTokenList$ch2.list); // check if already active on list or local storage tokens\n\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: token,\n      size: '24px',\n      style: {\n        opacity: dim ? '0.6' : '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"4px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n          fontWeight: 500,\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n          ml: \"8px\",\n          fontWeight: 300,\n          children: /*#__PURE__*/_jsxDEV(NameOverflow, {\n            title: token.name,\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), list && list.logoURI && /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.small, {\n          mr: \"4px\",\n          color: theme.text3,\n          children: [\"via \", list.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListLogo, {\n          logoURI: list.logoURI,\n          size: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !isActive && !isAdded ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      width: \"fit-content\",\n      padding: \"6px 12px\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      onClick: () => {\n        setImportToken && setImportToken(token);\n        showImportView();\n      },\n      children: \"Import\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        minWidth: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TYPE.main, {\n        color: theme.green1,\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportRow, \"q6qOdGnyLzlVBBohocsvDs2yu24=\", false, function () {\n  return [useActiveWeb3React, useTheme, useCombinedInactiveList, useIsUserAddedToken, useIsTokenActive];\n});\n\n_c4 = ImportRow;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"TokenSection\");\n$RefreshReg$(_c2, \"CheckIcon\");\n$RefreshReg$(_c3, \"NameOverflow\");\n$RefreshReg$(_c4, \"ImportRow\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/SearchModal/ImportRow.tsx"],"names":["React","AutoRow","RowFixed","AutoColumn","CurrencyLogo","TYPE","ListLogo","useActiveWeb3React","useCombinedInactiveList","useTheme","ButtonPrimary","styled","useIsUserAddedToken","useIsTokenActive","CheckCircle","TokenSection","div","dim","CheckIcon","theme","green1","NameOverflow","ImportRow","token","style","showImportView","setImportToken","chainId","inactiveTokenList","list","address","isAdded","isActive","opacity","symbol","name","logoURI","text3","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\nimport { Token } from '@uniswap/sdk'\nimport { AutoRow, RowFixed } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { TYPE } from 'theme'\nimport ListLogo from 'components/ListLogo'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonPrimary } from 'components/Button'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { CheckCircle } from 'react-feather'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.green1};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n          <TYPE.darkGray ml=\"8px\" fontWeight={300}>\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </TYPE.darkGray>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <TYPE.small mr=\"4px\" color={theme.text3}>\n              via {list.name}\n            </TYPE.small>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <ButtonPrimary\n          width=\"fit-content\"\n          padding=\"6px 12px\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          onClick={() => {\n            setImportToken && setImportToken(token)\n            showImportView()\n          }}\n        >\n          Import\n        </ButtonPrimary>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <TYPE.main color={theme.green1}>Active</TYPE.main>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}