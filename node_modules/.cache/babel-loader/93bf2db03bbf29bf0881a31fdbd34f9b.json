{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Settings/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; // import React, { useContext, useRef, useState } from 'react'\n\nimport { Settings, X } from 'react-feather';\nimport { Text } from 'rebass'; // import styled, { ThemeContext } from 'styled-components'\n\nimport styled from 'styled-components';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks';\nimport { useExpertModeManager, useUserTransactionTTL, useUserSlippageTolerance // useUserSingleHopOnly\n} from '../../state/user/hooks'; // import { TYPE } from '../../theme'\n// import { ButtonError } from '../Button'\n\nimport { AutoColumn } from '../Column';\nimport Modal from '../Modal'; // import QuestionHelper from '../QuestionHelper'\n// import { RowBetween, RowFixed } from '../Row'\n\nimport { RowBetween } from '../Row'; // import Toggle from '../Toggle'\n\nimport TransactionSettings from '../TransactionSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text2};\n  }\n\n  :hover {\n    opacity: 0.7;\n  }\n`;\n_c = StyledMenuIcon;\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({\n  theme\n}) => theme.text1};\n  }\n`;\n_c2 = StyledCloseIcon;\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`;\n_c3 = StyledMenuButton;\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`;\n_c4 = EmojiWrapper;\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`;\n_c5 = StyledMenu;\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 3rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n  `};\n`;\n_c6 = MenuFlyout;\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({\n  theme\n}) => theme.bg3};\n`;\n_c7 = Break;\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  border-radius: 20px;\n`;\n_c8 = ModalContentWrapper;\nexport default function SettingsTab() {\n  _s();\n\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.SETTINGS);\n  const toggle = useToggleSettingsMenu(); // const theme = useContext(ThemeContext)\n\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance();\n  const [ttl, setTtl] = useUserTransactionTTL(); // const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [expertMode] = useExpertModeManager(); // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  // show confirmation view before turning on\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return (\n    /*#__PURE__*/\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    _jsxDEV(StyledMenu, {\n      ref: node,\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: showConfirmation,\n        onDismiss: () => setShowConfirmation(false),\n        maxHeight: 100,\n        children: /*#__PURE__*/_jsxDEV(ModalContentWrapper, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"lg\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              style: {\n                padding: '0 2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 500,\n                fontSize: 20,\n                children: \"Are you sure?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StyledCloseIcon, {\n                onClick: () => setShowConfirmation(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"lg\",\n              style: {\n                padding: '0 2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 500,\n                fontSize: 20,\n                children: \"Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result in bad rates and lost funds.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 600,\n                fontSize: 20,\n                children: \"ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StyledMenuButton, {\n        id: \"open-settings-dialog-button\",\n        children: [/*#__PURE__*/_jsxDEV(StyledMenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this), expertMode ? /*#__PURE__*/_jsxDEV(EmojiWrapper, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"wizard-icon\",\n            children: \"\\uD83E\\uDDD9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this), open && /*#__PURE__*/_jsxDEV(MenuFlyout, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          style: {\n            padding: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 600,\n            fontSize: 14,\n            children: \"Transaction Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionSettings, {\n            rawSlippage: userSlippageTolerance,\n            setRawSlippage: setUserslippageTolerance,\n            deadline: ttl,\n            setDeadline: setTtl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(SettingsTab, \"iBhyucTe6ZW/Bnqsy+nXmAZQ/i8=\", false, function () {\n  return [useModalOpen, useToggleSettingsMenu, useUserSlippageTolerance, useUserTransactionTTL, useExpertModeManager, useOnClickOutside];\n});\n\n_c9 = SettingsTab;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"StyledMenuIcon\");\n$RefreshReg$(_c2, \"StyledCloseIcon\");\n$RefreshReg$(_c3, \"StyledMenuButton\");\n$RefreshReg$(_c4, \"EmojiWrapper\");\n$RefreshReg$(_c5, \"StyledMenu\");\n$RefreshReg$(_c6, \"MenuFlyout\");\n$RefreshReg$(_c7, \"Break\");\n$RefreshReg$(_c8, \"ModalContentWrapper\");\n$RefreshReg$(_c9, \"SettingsTab\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/components/Settings/index.tsx"],"names":["React","useRef","useState","Settings","X","Text","styled","useOnClickOutside","ApplicationModal","useModalOpen","useToggleSettingsMenu","useExpertModeManager","useUserTransactionTTL","useUserSlippageTolerance","AutoColumn","Modal","RowBetween","TransactionSettings","StyledMenuIcon","theme","text2","StyledCloseIcon","text1","StyledMenuButton","button","EmojiWrapper","div","StyledMenu","MenuFlyout","span","bg2","mediaWidth","upToMedium","Break","bg3","ModalContentWrapper","SettingsTab","node","open","SETTINGS","toggle","userSlippageTolerance","setUserslippageTolerance","ttl","setTtl","expertMode","showConfirmation","setShowConfirmation","undefined","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC,C,CACA;;AACA,SAASC,QAAT,EAAmBC,CAAnB,QAA4B,eAA5B;AACA,SAASC,IAAT,QAAqB,QAArB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,YAAT,EAAuBC,qBAAvB,QAAoD,+BAApD;AACA,SACEC,oBADF,EAEEC,qBAFF,EAGEC,wBAHF,CAIE;AAJF,OAKO,wBALP,C,CAMA;AACA;;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB,C,CACA;AACA;;AAEA,SAASC,UAAT,QAA2B,QAA3B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;;AAEA,MAAMC,cAAc,GAAGZ,MAAM,CAACH,QAAD,CAAW;AACxC;AACA;AACA;AACA;AACA,cAAc,CAAC;AAAEgB,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;AACzC;AACA;AACA;AACA;AACA;AACA,CAXA;KAAMF,c;AAaN,MAAMG,eAAe,GAAGf,MAAM,CAACF,CAAD,CAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,CAAC;AAAEe,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAM;AACzC;AACA,CAVA;MAAMD,e;AAYN,MAAME,gBAAgB,GAAGjB,MAAM,CAACkB,MAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMD,gB;AAuBN,MAAME,YAAY,GAAGnB,MAAM,CAACoB,GAAI;AAChC;AACA;AACA;AACA;AACA,CALA;MAAMD,Y;AAON,MAAME,UAAU,GAAGrB,MAAM,CAACoB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,U;AAUN,MAAMC,UAAU,GAAGtB,MAAM,CAACuB,IAAK;AAC/B;AACA,sBAAsB,CAAC;AAAEV,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACY,UAAN,CAAiBC,UAAW;AAC/C;AACA,GAAI;AACJ,CAjBA;MAAMJ,U;AAmBN,MAAMK,KAAK,GAAG3B,MAAM,CAACoB,GAAI;AACzB;AACA;AACA,sBAAsB,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACe,GAAI;AAC/C,CAJA;MAAMD,K;AAMN,MAAME,mBAAmB,GAAG7B,MAAM,CAACoB,GAAI;AACvC;AACA;AACA;AACA;AACA,sBAAsB,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACW,GAAI;AAC/C;AACA,CAPA;MAAMK,mB;AASN,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,IAAI,GAAGpC,MAAM,EAAnB;AACA,QAAMqC,IAAI,GAAG7B,YAAY,CAACD,gBAAgB,CAAC+B,QAAlB,CAAzB;AACA,QAAMC,MAAM,GAAG9B,qBAAqB,EAApC,CAHoC,CAKpC;;AACA,QAAM,CAAC+B,qBAAD,EAAwBC,wBAAxB,IAAoD7B,wBAAwB,EAAlF;AAEA,QAAM,CAAC8B,GAAD,EAAMC,MAAN,IAAgBhC,qBAAqB,EAA3C,CARoC,CAUpC;;AAEA,QAAM,CAACiC,UAAD,IAAelC,oBAAoB,EAAzC,CAZoC,CAcpC;AAEA;AAEA;;AACA,QAAM,CAACmC,gBAAD,EAAmBC,mBAAnB,IAA0C7C,QAAQ,CAAC,KAAD,CAAxD;AAEAK,EAAAA,iBAAiB,CAAC8B,IAAD,EAAOC,IAAI,GAAGE,MAAH,GAAYQ,SAAvB,CAAjB;AAEA;AAAA;AACE;AACA,YAAC,UAAD;AAAY,MAAA,GAAG,EAAEX,IAAjB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAES,gBAAf;AAAiC,QAAA,SAAS,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAArE;AAA8E,QAAA,SAAS,EAAE,GAAzF;AAAA,+BACE,QAAC,mBAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,GAAG,EAAC,IAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAnB;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AAAM,gBAAA,UAAU,EAAE,GAAlB;AAAuB,gBAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE,QAAC,eAAD;AAAiB,gBAAA,OAAO,EAAE,MAAMF,mBAAmB,CAAC,KAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,oBARF,eASE,QAAC,UAAD;AAAY,cAAA,GAAG,EAAC,IAAhB;AAAqB,cAAA,KAAK,EAAE;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAA5B;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,UAAU,EAAE,GAAlB;AAAuB,gBAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,IAAD;AAAM,gBAAA,UAAU,EAAE,GAAlB;AAAuB,gBAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAsCE,QAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,6BAArB;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGJ,UAAU,gBACT,QAAC,YAAD;AAAA,iCACE;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADS,GAMP,IARN;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF,EAgDGP,IAAI,iBACH,QAAC,UAAD;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC,IAAhB;AAAqB,UAAA,KAAK,EAAE;AAAEW,YAAAA,OAAO,EAAE;AAAX,WAA5B;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAE,GAAlB;AAAuB,YAAA,QAAQ,EAAE,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,mBAAD;AACE,YAAA,WAAW,EAAER,qBADf;AAEE,YAAA,cAAc,EAAEC,wBAFlB;AAGE,YAAA,QAAQ,EAAEC,GAHZ;AAIE,YAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA0GD;;GAjIuBR,W;UAET3B,Y,EACEC,qB,EAG2CG,wB,EAEpCD,qB,EAIDD,oB,EASrBJ,iB;;;MArBsB6B,W","sourcesContent":["import React, { useRef, useState } from 'react'\n// import React, { useContext, useRef, useState } from 'react'\nimport { Settings, X } from 'react-feather'\nimport { Text } from 'rebass'\n// import styled, { ThemeContext } from 'styled-components'\nimport styled from 'styled-components'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks'\nimport {\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance\n  // useUserSingleHopOnly\n} from '../../state/user/hooks'\n// import { TYPE } from '../../theme'\n// import { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport Modal from '../Modal'\n// import QuestionHelper from '../QuestionHelper'\n// import { RowBetween, RowFixed } from '../Row'\n\nimport { RowBetween } from '../Row'\n// import Toggle from '../Toggle'\nimport TransactionSettings from '../TransactionSettings'\n\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({ theme }) => theme.text2};\n  }\n\n  :hover {\n    opacity: 0.7;\n  }\n`\n\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  height: 35px;\n\n  padding: 0.15rem 0.5rem;\n  border-radius: 0.5rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n  }\n\n  svg {\n    margin-top: 2px;\n  }\n`\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({ theme }) => theme.bg2};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 3rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n  `};\n`\n\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 20px;\n`\n\nexport default function SettingsTab() {\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.SETTINGS)\n  const toggle = useToggleSettingsMenu()\n\n  // const theme = useContext(ThemeContext)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n\n  const [ttl, setTtl] = useUserTransactionTTL()\n\n  // const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [expertMode] = useExpertModeManager()\n\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n\n  // const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\n        <ModalContentWrapper>\n          <AutoColumn gap=\"lg\">\n            <RowBetween style={{ padding: '0 2rem' }}>\n              <div />\n              <Text fontWeight={500} fontSize={20}>\n                Are you sure?\n              </Text>\n              <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\n            </RowBetween>\n            <Break />\n            <AutoColumn gap=\"lg\" style={{ padding: '0 2rem' }}>\n              <Text fontWeight={500} fontSize={20}>\n                Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result\n                in bad rates and lost funds.\n              </Text>\n              <Text fontWeight={600} fontSize={20}>\n                ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.\n              </Text>\n              {/* <ButtonError\n                error={true}\n                padding={'12px'}\n                onClick={() => {\n                  if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                    toggleExpertMode()\n                    setShowConfirmation(false)\n                  }\n                }}\n              >\n                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\n                  Turn On Expert Mode\n                </Text>\n              </ButtonError> */}\n            </AutoColumn>\n          </AutoColumn>\n        </ModalContentWrapper>\n      </Modal>\n      <StyledMenuButton id=\"open-settings-dialog-button\">\n        <StyledMenuIcon />\n        {expertMode ? (\n          <EmojiWrapper>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              🧙\n            </span>\n          </EmojiWrapper>\n        ) : null}\n      </StyledMenuButton>\n      {open && (\n        <MenuFlyout>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n            <Text fontWeight={600} fontSize={14}>\n              Transaction Settings\n            </Text>\n            <TransactionSettings\n              rawSlippage={userSlippageTolerance}\n              setRawSlippage={setUserslippageTolerance}\n              deadline={ttl}\n              setDeadline={setTtl}\n            />\n            {/* <Text fontWeight={600} fontSize={14}>\n              Interface Settings\n            </Text> */}\n            {/* <RowBetween>\n              <RowFixed>\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\n                  Toggle Expert Mode\n                </TYPE.black>\n                <QuestionHelper text=\"Bypasses confirmation modals and allows high slippage trades. Use at your own risk.\" />\n              </RowFixed>\n              <Toggle\n                id=\"toggle-expert-mode-button\"\n                isActive={expertMode}\n                toggle={\n                  expertMode\n                    ? () => {\n                        toggleExpertMode()\n                        setShowConfirmation(false)\n                      }\n                    : () => {\n                        toggle()\n                        setShowConfirmation(true)\n                      }\n                }\n              />\n            </RowBetween> */}\n            {/* <RowBetween>\n              <RowFixed>\n                <TYPE.black fontWeight={400} fontSize={14} color={theme.text2}>\n                  Disable Multihops\n                </TYPE.black>\n                <QuestionHelper text=\"Restricts swaps to direct pairs only.\" />\n              </RowFixed>\n              <Toggle\n                id=\"toggle-disable-multihop-button\"\n                isActive={singleHopOnly}\n                toggle={() => (singleHopOnly ? setSingleHopOnly(false) : setSingleHopOnly(true))}\n              />\n            </RowBetween> */}\n          </AutoColumn>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}