{"ast":null,"code":"var _jsxFileName = \"/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/MigrateV1Exchange.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Currency, CurrencyAmount, Fraction, JSBI, Percent, Token, TokenAmount, WETH } from \"@uniswap/sdk\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Redirect } from \"react-router\";\nimport { Text } from \"rebass\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard, PinkCard, YellowCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport CurrencyLogo from \"../../components/CurrencyLogo\";\nimport FormattedCurrencyAmount from \"../../components/FormattedCurrencyAmount\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow, RowBetween, RowFixed } from \"../../components/Row\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from \"../../constants\";\nimport { MIGRATOR_ADDRESS } from \"../../constants/abis/migrator\";\nimport { PairState, usePair } from \"../../data/Reserves\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport { ApprovalState, useApproveCallback } from \"../../hooks/useApproveCallback\";\nimport { useV1ExchangeContract, useV2MigratorContract } from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport { useIsTransactionPending, useTransactionAdder } from \"../../state/transactions/hooks\";\nimport { useETHBalances, useTokenBalance } from \"../../state/wallet/hooks\";\nimport { BackArrow, ExternalLink, TYPE } from \"../../theme\";\nimport { getEtherscanLink, isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE), JSBI.BigInt(10000));\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n      style: {\n        justifyContent: \"flex-start\",\n        width: \"fit-content\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        size: \"24px\",\n        currency: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \".75rem\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      my: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: [\"Pooled\", \" \", chainId && token.equals(WETH[chainId]) ? \"WETH\" : token.symbol, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          marginLeft: \"6px\",\n          children: tokenWorth.toSignificant(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: \"8px\"\n          },\n          currency: token\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      mb: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: \"Pooled ETH:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          marginLeft: \"6px\",\n          children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n            currencyAmount: ethWorth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginLeft: \"8px\"\n          },\n          currency: Currency.ETHER\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(V1LiquidityInfo, \"Srgj51dvRDiLRw5YTqb92Ixo5OU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c = V1LiquidityInfo;\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token\n}) {\n  _s2();\n\n  var _useETHBalances, _v1SpotPrice$invert, _v2SpotPrice$invert, _v1SpotPrice$invert2;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = (_useETHBalances = useETHBalances([liquidityTokenAmount.token.address])) === null || _useETHBalances === void 0 ? void 0 : _useETHBalances[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(liquidityTokenAmount.token.address, token);\n  const [v2PairState, v2Pair] = usePair(chainId ? WETH[chainId] : undefined, token);\n  const isFirstLiquidityProvider = v2PairState === PairState.NOT_EXISTS;\n  const v2SpotPrice = chainId && v2Pair ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId])) : undefined;\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const shareFraction = totalSupply ? new Percent(liquidityTokenAmount.raw, totalSupply.raw) : ZERO_FRACTION;\n  const ethWorth = exchangeETHBalance ? CurrencyAmount.ether(exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient) : CurrencyAmount.ether(ZERO);\n  const tokenWorth = exchangeTokenBalance ? new TokenAmount(token, shareFraction.multiply(exchangeTokenBalance.raw).quotient) : new TokenAmount(token, ZERO);\n  const [approval, approve] = useApproveCallback(liquidityTokenAmount, MIGRATOR_ADDRESS);\n  const v1SpotPrice = exchangeTokenBalance && exchangeETHBalance ? exchangeTokenBalance.divide(new Fraction(exchangeETHBalance.raw, WEI_DENOM)) : null;\n  const priceDifferenceFraction = v1SpotPrice && v2SpotPrice ? v1SpotPrice.divide(v2SpotPrice).multiply(\"100\").subtract(\"100\") : undefined;\n  const priceDifferenceAbs = (priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.lessThan(ZERO)) ? priceDifferenceFraction === null || priceDifferenceFraction === void 0 ? void 0 : priceDifferenceFraction.multiply(\"-1\") : priceDifferenceFraction;\n  const minAmountETH = v2SpotPrice && tokenWorth ? tokenWorth.divide(v2SpotPrice).multiply(WEI_DENOM).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : ethWorth === null || ethWorth === void 0 ? void 0 : ethWorth.numerator;\n  const minAmountToken = v2SpotPrice && ethWorth ? ethWorth.multiply(v2SpotPrice).multiply(JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))).multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient : tokenWorth === null || tokenWorth === void 0 ? void 0 : tokenWorth.numerator;\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n  const migrator = useV2MigratorContract();\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return;\n    setConfirmingMigration(true);\n    migrator.migrate(token.address, minAmountToken.toString(), minAmountETH.toString(), account, Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW).then(response => {\n      ReactGA.event({\n        category: \"Migrate\",\n        action: \"V1->V2\",\n        label: token === null || token === void 0 ? void 0 : token.symbol\n      });\n      addTransaction(response, {\n        summary: `Migrate ${token.symbol} liquidity to V2`\n      });\n      setPendingMigrationHash(response.hash);\n    }).catch(() => {\n      setConfirmingMigration(false);\n    });\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n  const noLiquidityTokens = !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n  const largePriceDifference = !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: [\"This tool will safely migrate your V1 liquidity to V2 with minimal price risk. The process is completely trustless thanks to the\", \" \", chainId && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getEtherscanLink(chainId, MIGRATOR_ADDRESS, \"address\"),\n        children: /*#__PURE__*/_jsxDEV(TYPE.blue, {\n          display: \"inline\",\n          children: \"Uniswap migration contract\\u2197\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), !isFirstLiquidityProvider && largePriceDifference ? /*#__PURE__*/_jsxDEV(YellowCard, {\n      children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: [\"It\", \"'\", \"s best to deposit liquidity into Uniswap V2 at a price you believe is correct. If the V2 price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            children: \"V1 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert = v1SpotPrice.invert()) === null || _v1SpotPrice$invert === void 0 ? void 0 : _v1SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            children: \"V2 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert = v2SpotPrice.invert()) === null || _v2SpotPrice$invert === void 0 ? void 0 : _v2SpotPrice$invert.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            color: \"inherit\",\n            children: \"Price Difference:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            color: \"inherit\",\n            children: [priceDifferenceAbs === null || priceDifferenceAbs === void 0 ? void 0 : priceDifferenceAbs.toSignificant(4), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : null, isFirstLiquidityProvider && /*#__PURE__*/_jsxDEV(PinkCard, {\n      children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n        style: {\n          marginBottom: 8,\n          fontWeight: 400\n        },\n        children: \"You are the first liquidity provider for this pair on Uniswap V2. Your liquidity will be migrated at the current V1 price. Your transaction cost also includes the gas to create the pool.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n            children: \"V1 Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : v1SpotPrice.toSignificant(6), \" \", token.symbol, \"/ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TYPE.black, {\n            children: [v1SpotPrice === null || v1SpotPrice === void 0 ? void 0 : (_v1SpotPrice$invert2 = v1SpotPrice.invert()) === null || _v1SpotPrice$invert2 === void 0 ? void 0 : _v1SpotPrice$invert2.toSignificant(6), \" ETH/\", token.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: [/*#__PURE__*/_jsxDEV(V1LiquidityInfo, {\n        token: token,\n        liquidityTokenAmount: liquidityTokenAmount,\n        tokenWorth: tokenWorth,\n        ethWorth: ethWorth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: \"1\",\n            marginRight: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n            confirmed: approval === ApprovalState.APPROVED,\n            disabled: approval !== ApprovalState.NOT_APPROVED,\n            onClick: approve,\n            children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Approving\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this) : approval === ApprovalState.APPROVED ? \"Approved\" : \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          style: {\n            flex: \"1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n            confirmed: isSuccessfullyMigrated,\n            disabled: isSuccessfullyMigrated || noLiquidityTokens || isMigrationPending || approval !== ApprovalState.APPROVED || confirmingMigration,\n            onClick: migrate,\n            children: isSuccessfullyMigrated ? \"Success\" : isMigrationPending ? /*#__PURE__*/_jsxDEV(Dots, {\n              children: \"Migrating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this) : \"Migrate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TYPE.darkGray, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: `Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(V1PairMigration, \"8zYtsXu1la9O7nr5lvYN0jDMyk0=\", false, function () {\n  return [useActiveWeb3React, useTotalSupply, useETHBalances, useTokenBalance, usePair, useApproveCallback, useTransactionAdder, useIsTransactionPending, useV2MigratorContract];\n});\n\n_c2 = V1PairMigration;\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s3();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const validatedAddress = isAddress(address);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const exchangeContract = useV1ExchangeContract(validatedAddress ? validatedAddress : undefined);\n  const tokenAddress = (_useSingleCallResult = useSingleCallResult(exchangeContract, \"tokenAddress\", undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const token = useToken(tokenAddress);\n  const liquidityToken = useMemo(() => validatedAddress && chainId && token ? new Token(chainId, validatedAddress, 18, `UNI-V1-${token.symbol}`, \"Uniswap V1\") : undefined, [chainId, validatedAddress, token]);\n  const userLiquidityBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken); // redirect for invalid url params\n\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"space-between\"\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.mediumHeader, {\n          children: \"Migrate V1 Liquidity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n            text: \"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(TYPE.largeHeader, {\n        children: \"You must connect an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this) : validatedAddress && chainId && (token === null || token === void 0 ? void 0 : token.equals(WETH[chainId])) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TYPE.body, {\n          my: 9,\n          style: {\n            fontWeight: 400\n          },\n          children: \"Because Uniswap V2 uses WETH under the hood, your Uniswap V1 WETH/ETH liquidity cannot be migrated. You may want to remove your liquidity instead.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n          onClick: () => {\n            history.push(`/remove/v1/${validatedAddress}`);\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : userLiquidityBalance && token ? /*#__PURE__*/_jsxDEV(V1PairMigration, {\n        liquidityTokenAmount: userLiquidityBalance,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n        message: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(MigrateV1Exchange, \"z1J1fbUzEnt2GJn4Tr7V1Id5IB8=\", false, function () {\n  return [useActiveWeb3React, useV1ExchangeContract, useSingleCallResult, useToken, useTokenBalance];\n});\n\n_c3 = MigrateV1Exchange;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"V1LiquidityInfo\");\n$RefreshReg$(_c2, \"V1PairMigration\");\n$RefreshReg$(_c3, \"MigrateV1Exchange\");","map":{"version":3,"sources":["/Users/chichke/Documents/Work/Freelance/swap-project/src/pages/MigrateV1/MigrateV1Exchange.tsx"],"names":["AddressZero","Currency","CurrencyAmount","Fraction","JSBI","Percent","Token","TokenAmount","WETH","React","useCallback","useMemo","useState","ReactGA","Redirect","Text","ButtonConfirmed","LightCard","PinkCard","YellowCard","AutoColumn","CurrencyLogo","FormattedCurrencyAmount","QuestionHelper","AutoRow","RowBetween","RowFixed","Dots","DEFAULT_DEADLINE_FROM_NOW","INITIAL_ALLOWED_SLIPPAGE","MIGRATOR_ADDRESS","PairState","usePair","useTotalSupply","useActiveWeb3React","useToken","ApprovalState","useApproveCallback","useV1ExchangeContract","useV2MigratorContract","NEVER_RELOAD","useSingleCallResult","useIsTransactionPending","useTransactionAdder","useETHBalances","useTokenBalance","BackArrow","ExternalLink","TYPE","getEtherscanLink","isAddress","BodyWrapper","EmptyState","WEI_DENOM","exponentiate","BigInt","ZERO","ONE","ZERO_FRACTION","ALLOWED_OUTPUT_MIN_PERCENT","V1LiquidityInfo","token","liquidityTokenAmount","tokenWorth","ethWorth","chainId","justifyContent","width","marginLeft","equals","symbol","toSignificant","ETHER","V1PairMigration","account","totalSupply","exchangeETHBalance","address","exchangeTokenBalance","v2PairState","v2Pair","undefined","isFirstLiquidityProvider","NOT_EXISTS","v2SpotPrice","reserveOf","divide","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","shareFraction","raw","ether","multiply","quotient","approval","approve","v1SpotPrice","priceDifferenceFraction","subtract","priceDifferenceAbs","lessThan","minAmountETH","numerator","minAmountToken","decimals","addTransaction","isMigrationPending","migrator","migrate","toString","Math","floor","Date","getTime","then","response","event","category","action","label","summary","hash","catch","noLiquidityTokens","equalTo","largePriceDifference","isSuccessfullyMigrated","fontWeight","marginBottom","invert","display","marginTop","flex","marginRight","APPROVED","NOT_APPROVED","PENDING","textAlign","MigrateV1Exchange","history","match","params","validatedAddress","exchangeContract","tokenAddress","result","liquidityToken","userLiquidityBalance","console","error","padding","alignItems","push"],"mappings":";;;;;AACA,SAASA,WAAT,QAA4B,0BAA5B;AACA,SACEC,QADF,EAEEC,cAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,WAPF,EAQEC,IARF,QASO,cATP;AAUA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,QAAT,QAA8C,cAA9C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,uBAAhD;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,uBAAP,MAAoC,0CAApC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,QAA9B,QAA8C,sBAA9C;AACA,SAASC,IAAT,QAAqB,+BAArB;AACA,SACEC,yBADF,EAEEC,wBAFF,QAGO,iBAHP;AAIA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,qBAAnC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SACEC,aADF,EAEEC,kBAFF,QAGO,gCAHP;AAIA,SACEC,qBADF,EAEEC,qBAFF,QAGO,yBAHP;AAIA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,6BAAlD;AACA,SACEC,uBADF,EAEEC,mBAFF,QAGO,gCAHP;AAIA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,0BAAhD;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,IAAlC,QAA8C,aAA9C;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,aAA5C;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,SAAS,GAAGjD,IAAI,CAACkD,YAAL,CAAkBlD,IAAI,CAACmD,MAAL,CAAY,EAAZ,CAAlB,EAAmCnD,IAAI,CAACmD,MAAL,CAAY,EAAZ,CAAnC,CAAlB;AACA,MAAMC,IAAI,GAAGpD,IAAI,CAACmD,MAAL,CAAY,CAAZ,CAAb;AACA,MAAME,GAAG,GAAGrD,IAAI,CAACmD,MAAL,CAAY,CAAZ,CAAZ;AACA,MAAMG,aAAa,GAAG,IAAIvD,QAAJ,CAAaqD,IAAb,EAAmBC,GAAnB,CAAtB;AACA,MAAME,0BAA0B,GAAG,IAAItD,OAAJ,CACjCD,IAAI,CAACmD,MAAL,CAAY,QAAQ1B,wBAApB,CADiC,EAEjCzB,IAAI,CAACmD,MAAL,CAAY,KAAZ,CAFiC,CAAnC;AAKA,OAAO,SAASK,eAAT,CAAyB;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,oBAF8B;AAG9BC,EAAAA,UAH8B;AAI9BC,EAAAA;AAJ8B,CAAzB,EAUJ;AAAA;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAc/B,kBAAkB,EAAtC;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEgC,QAAAA,cAAc,EAAE,YAAlB;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OAAhB;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAEN;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,UAAU,EAAE;AAAd;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,EAAhB;AAAoB,QAAA,UAAU,EAAE,GAAhC;AAAA,6BACS,GADT,EAEGH,OAAO,IAAIJ,KAAK,CAACQ,MAAN,CAAa7D,IAAI,CAACyD,OAAD,CAAjB,CAAX,GAAyC,MAAzC,GAAkDJ,KAAK,CAACS,MAF3D;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,EAAhB;AAAoB,UAAA,UAAU,EAAE,GAAhC;AAAqC,UAAA,UAAU,EAAE,KAAjD;AAAA,oBACGP,UAAU,CAACQ,aAAX,CAAyB,CAAzB;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE;AAAEH,YAAAA,UAAU,EAAE;AAAd,WAFT;AAGE,UAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eA2BE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,EAAhB;AAAoB,QAAA,UAAU,EAAE,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,EAAhB;AAAoB,UAAA,UAAU,EAAE,GAAhC;AAAqC,UAAA,UAAU,EAAE,KAAjD;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,cAAc,EAAEG;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE;AAAEI,YAAAA,UAAU,EAAE;AAAd,WAFT;AAGE,UAAA,QAAQ,EAAEnE,QAAQ,CAACuE;AAHrB;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA,kBADF;AA6CD;;GA1DeZ,e;UAWM1B,kB;;;KAXN0B,e;;AA4DhB,SAASa,eAAT,CAAyB;AACvBX,EAAAA,oBADuB;AAEvBD,EAAAA;AAFuB,CAAzB,EAMG;AAAA;;AAAA;;AACD,QAAM;AAAEa,IAAAA,OAAF;AAAWT,IAAAA;AAAX,MAAuB/B,kBAAkB,EAA/C;AACA,QAAMyC,WAAW,GAAG1C,cAAc,CAAC6B,oBAAoB,CAACD,KAAtB,CAAlC;AACA,QAAMe,kBAAkB,sBAAGhC,cAAc,CAAC,CACxCkB,oBAAoB,CAACD,KAArB,CAA2BgB,OADa,CAAD,CAAjB,oDAAG,gBAEtBf,oBAAoB,CAACD,KAArB,CAA2BgB,OAFL,CAA3B;AAGA,QAAMC,oBAAoB,GAAGjC,eAAe,CAC1CiB,oBAAoB,CAACD,KAArB,CAA2BgB,OADe,EAE1ChB,KAF0C,CAA5C;AAKA,QAAM,CAACkB,WAAD,EAAcC,MAAd,IAAwBhD,OAAO,CACnCiC,OAAO,GAAGzD,IAAI,CAACyD,OAAD,CAAP,GAAmBgB,SADS,EAEnCpB,KAFmC,CAArC;AAIA,QAAMqB,wBAAiC,GACrCH,WAAW,KAAKhD,SAAS,CAACoD,UAD5B;AAGA,QAAMC,WAAW,GACfnB,OAAO,IAAIe,MAAX,GACIA,MAAM,CAACK,SAAP,CAAiBxB,KAAjB,EAAwByB,MAAxB,CAA+BN,MAAM,CAACK,SAAP,CAAiB7E,IAAI,CAACyD,OAAD,CAArB,CAA/B,CADJ,GAEIgB,SAHN;AAKA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IACJ5E,QAAQ,CAAU,KAAV,CADV;AAEA,QAAM,CAAC6E,oBAAD,EAAuBC,uBAAvB,IACJ9E,QAAQ,CAAgB,IAAhB,CADV;AAGA,QAAM+E,aAAuB,GAAGhB,WAAW,GACvC,IAAItE,OAAJ,CAAYyD,oBAAoB,CAAC8B,GAAjC,EAAsCjB,WAAW,CAACiB,GAAlD,CADuC,GAEvClC,aAFJ;AAIA,QAAMM,QAAwB,GAAGY,kBAAkB,GAC/C1E,cAAc,CAAC2F,KAAf,CACEjB,kBAAkB,CAACkB,QAAnB,CAA4BH,aAA5B,EAA2CG,QAA3C,CAAoDzC,SAApD,EAA+D0C,QADjE,CAD+C,GAI/C7F,cAAc,CAAC2F,KAAf,CAAqBrC,IAArB,CAJJ;AAMA,QAAMO,UAAuB,GAAGe,oBAAoB,GAChD,IAAIvE,WAAJ,CACEsD,KADF,EAEE8B,aAAa,CAACG,QAAd,CAAuBhB,oBAAoB,CAACc,GAA5C,EAAiDG,QAFnD,CADgD,GAKhD,IAAIxF,WAAJ,CAAgBsD,KAAhB,EAAuBL,IAAvB,CALJ;AAOA,QAAM,CAACwC,QAAD,EAAWC,OAAX,IAAsB5D,kBAAkB,CAC5CyB,oBAD4C,EAE5ChC,gBAF4C,CAA9C;AAKA,QAAMoE,WAAW,GACfpB,oBAAoB,IAAIF,kBAAxB,GACIE,oBAAoB,CAACQ,MAArB,CACE,IAAInF,QAAJ,CAAayE,kBAAkB,CAACgB,GAAhC,EAAqCvC,SAArC,CADF,CADJ,GAII,IALN;AAOA,QAAM8C,uBAA6C,GACjDD,WAAW,IAAId,WAAf,GACIc,WAAW,CAACZ,MAAZ,CAAmBF,WAAnB,EAAgCU,QAAhC,CAAyC,KAAzC,EAAgDM,QAAhD,CAAyD,KAAzD,CADJ,GAEInB,SAHN;AAKA,QAAMoB,kBAAwC,GAC5C,CAAAF,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,YAAAA,uBAAuB,CAAEG,QAAzB,CAAkC9C,IAAlC,KACI2C,uBADJ,aACIA,uBADJ,uBACIA,uBAAuB,CAAEL,QAAzB,CAAkC,IAAlC,CADJ,GAEIK,uBAHN;AAKA,QAAMI,YAA8B,GAClCnB,WAAW,IAAIrB,UAAf,GACIA,UAAU,CACPuB,MADH,CACUF,WADV,EAEGU,QAFH,CAEYzC,SAFZ,EAGGyC,QAHH,CAGYnC,0BAHZ,EAGwCoC,QAJ5C,GAKI/B,QALJ,aAKIA,QALJ,uBAKIA,QAAQ,CAAEwC,SANhB;AAQA,QAAMC,cAAgC,GACpCrB,WAAW,IAAIpB,QAAf,GACIA,QAAQ,CACL8B,QADH,CACYV,WADZ,EAEGU,QAFH,CAGI1F,IAAI,CAACkD,YAAL,CAAkBlD,IAAI,CAACmD,MAAL,CAAY,EAAZ,CAAlB,EAAmCnD,IAAI,CAACmD,MAAL,CAAYM,KAAK,CAAC6C,QAAlB,CAAnC,CAHJ,EAKGZ,QALH,CAKYnC,0BALZ,EAKwCoC,QAN5C,GAOIhC,UAPJ,aAOIA,UAPJ,uBAOIA,UAAU,CAAEyC,SARlB;AAUA,QAAMG,cAAc,GAAGhE,mBAAmB,EAA1C;AACA,QAAMiE,kBAAkB,GAAGlE,uBAAuB,CAChD+C,oBADgD,aAChDA,oBADgD,cAChDA,oBADgD,GACxBR,SADwB,CAAlD;AAIA,QAAM4B,QAAQ,GAAGtE,qBAAqB,EAAtC;AACA,QAAMuE,OAAO,GAAGpG,WAAW,CAAC,MAAM;AAChC,QAAI,CAAC+F,cAAD,IAAmB,CAACF,YAApB,IAAoC,CAACM,QAAzC,EAAmD;AAEnDrB,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAqB,IAAAA,QAAQ,CACLC,OADH,CAEIjD,KAAK,CAACgB,OAFV,EAGI4B,cAAc,CAACM,QAAf,EAHJ,EAIIR,YAAY,CAACQ,QAAb,EAJJ,EAKIrC,OALJ,EAMIsC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,IAA0CvF,yBAN9C,EAQGwF,IARH,CAQSC,QAAD,IAAmC;AACvCxG,MAAAA,OAAO,CAACyG,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,SADE;AAEZC,QAAAA,MAAM,EAAE,QAFI;AAGZC,QAAAA,KAAK,EAAE5D,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAES;AAHF,OAAd;AAMAqC,MAAAA,cAAc,CAACU,QAAD,EAAW;AACvBK,QAAAA,OAAO,EAAG,WAAU7D,KAAK,CAACS,MAAO;AADV,OAAX,CAAd;AAGAoB,MAAAA,uBAAuB,CAAC2B,QAAQ,CAACM,IAAV,CAAvB;AACD,KAnBH,EAoBGC,KApBH,CAoBS,MAAM;AACXpC,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,KAtBH;AAuBD,GA3B0B,EA2BxB,CAACiB,cAAD,EAAiBF,YAAjB,EAA+BM,QAA/B,EAAyChD,KAAzC,EAAgDa,OAAhD,EAAyDiC,cAAzD,CA3BwB,CAA3B;AA6BA,QAAMkB,iBAAiB,GACrB,CAAC,CAAC/D,oBAAF,IAA0BA,oBAAoB,CAACgE,OAArB,CAA6BtE,IAA7B,CAD5B;AAGA,QAAMuE,oBAAoB,GACxB,CAAC,CAAC1B,kBAAF,IAAwB,CAACA,kBAAkB,CAACC,QAAnB,CAA4BlG,IAAI,CAACmD,MAAL,CAAY,CAAZ,CAA5B,CAD3B;AAGA,QAAMyE,sBAAsB,GAAG,CAAC,CAACvC,oBAAF,IAA0BoC,iBAAzD;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,GAAG,EAAC,MAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE;AAAEI,QAAAA,UAAU,EAAE;AAAd,OAAzB;AAAA,qJAE0D,GAF1D,EAGGhE,OAAO,iBACN,QAAC,YAAD;AACE,QAAA,IAAI,EAAEhB,gBAAgB,CAACgB,OAAD,EAAUnC,gBAAV,EAA4B,SAA5B,CADxB;AAAA,+BAGE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,OAAO,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAcG,CAACoD,wBAAD,IAA6B6C,oBAA7B,gBACC,QAAC,UAAD;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEG,UAAAA,YAAY,EAAE,CAAhB;AAAmBD,UAAAA,UAAU,EAAE;AAA/B,SAAlB;AAAA,yBACK,GADL;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,KAAhB;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACG/B,WADH,aACGA,WADH,uBACGA,WAAW,CAAE3B,aAAb,CAA2B,CAA3B,CADH,OACmCV,KAAK,CAACS,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACG4B,WADH,aACGA,WADH,8CACGA,WAAW,CAAEiC,MAAb,EADH,wDACG,oBAAuB5D,aAAvB,CAAqC,CAArC,CADH,WACiDV,KAAK,CAACS,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE,QAAC,UAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACGc,WADH,aACGA,WADH,uBACGA,WAAW,CAAEb,aAAb,CAA2B,CAA3B,CADH,OACmCV,KAAK,CAACS,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAoBE,QAAC,UAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACGc,WADH,aACGA,WADH,8CACGA,WAAW,CAAE+C,MAAb,EADH,wDACG,oBAAuB5D,aAAvB,CAAqC,CAArC,CADH,WACiDV,KAAK,CAACS,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBF,eA2BE,QAAC,UAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAC,SAAlB;AAAA,uBACG+B,kBADH,aACGA,kBADH,uBACGA,kBAAkB,CAAE9B,aAApB,CAAkC,CAAlC,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GA0CG,IAxDN,EA0DGW,wBAAwB,iBACvB,QAAC,QAAD;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEgD,UAAAA,YAAY,EAAE,CAAhB;AAAmBD,UAAAA,UAAU,EAAE;AAA/B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,UAAD;AAAY,QAAA,GAAG,EAAC,KAAhB;AAAA,gCACE,QAAC,UAAD;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACG/B,WADH,aACGA,WADH,uBACGA,WAAW,CAAE3B,aAAb,CAA2B,CAA3B,CADH,OACmCV,KAAK,CAACS,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,UAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,KAAN;AAAA,uBACG4B,WADH,aACGA,WADH,+CACGA,WAAW,CAAEiC,MAAb,EADH,yDACG,qBAAuB5D,aAAvB,CAAqC,CAArC,CADH,WACiDV,KAAK,CAACS,MADvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3DJ,eAmFE,QAAC,SAAD;AAAA,8BACE,QAAC,eAAD;AACE,QAAA,KAAK,EAAET,KADT;AAEE,QAAA,oBAAoB,EAAEC,oBAFxB;AAGE,QAAA,UAAU,EAAEC,UAHd;AAIE,QAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,KAAK,EAAE;AAAEoE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAZ;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE,GAAR;AAAaC,YAAAA,WAAW,EAAE;AAA1B,WAA9B;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,SAAS,EAAEvC,QAAQ,KAAK5D,aAAa,CAACoG,QADxC;AAEE,YAAA,QAAQ,EAAExC,QAAQ,KAAK5D,aAAa,CAACqG,YAFvC;AAGE,YAAA,OAAO,EAAExC,OAHX;AAAA,sBAKGD,QAAQ,KAAK5D,aAAa,CAACsG,OAA3B,gBACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,GAEG1C,QAAQ,KAAK5D,aAAa,CAACoG,QAA3B,GACF,UADE,GAGF;AAVJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAC,MAAhB;AAAuB,UAAA,KAAK,EAAE;AAAEF,YAAAA,IAAI,EAAE;AAAR,WAA9B;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,SAAS,EAAEN,sBADb;AAEE,YAAA,QAAQ,EACNA,sBAAsB,IACtBH,iBADA,IAEAjB,kBAFA,IAGAZ,QAAQ,KAAK5D,aAAa,CAACoG,QAH3B,IAIAjD,mBAPJ;AASE,YAAA,OAAO,EAAEuB,OATX;AAAA,sBAWGkB,sBAAsB,GACrB,SADqB,GAEnBpB,kBAAkB,gBACpB,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADoB,GAGpB;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnFF,eAkIE,QAAC,IAAD,CAAM,QAAN;AAAe,MAAA,KAAK,EAAE;AAAE+B,QAAAA,SAAS,EAAE;AAAb,OAAtB;AAAA,gBACI,mBAAkB9E,KAAK,CAACS,MAAO,yCAAwCT,KAAK,CAACS,MAAO;AADxF;AAAA;AAAA;AAAA;AAAA,YAlIF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwID;;IA9QQG,e;UAOsBvC,kB,EACTD,c,EACOW,c,EAGEC,e,EAKCb,O,EAkCFK,kB,EAwCLM,mB,EACID,uB,EAIVH,qB;;;MAhGVkC,e;AAgRT,eAAe,SAASmE,iBAAT,CAA2B;AACxCC,EAAAA,OADwC;AAExCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AAAElE,MAAAA;AAAF;AADH;AAFiC,CAA3B,EAK8B;AAAA;;AAAA;;AAC3C,QAAMmE,gBAAgB,GAAG9F,SAAS,CAAC2B,OAAD,CAAlC;AACA,QAAM;AAAEZ,IAAAA,OAAF;AAAWS,IAAAA;AAAX,MAAuBxC,kBAAkB,EAA/C;AAEA,QAAM+G,gBAAgB,GAAG3G,qBAAqB,CAC5C0G,gBAAgB,GAAGA,gBAAH,GAAsB/D,SADM,CAA9C;AAGA,QAAMiE,YAAY,2BAAGzG,mBAAmB,CACtCwG,gBADsC,EAEtC,cAFsC,EAGtChE,SAHsC,EAItCzC,YAJsC,CAAtB,kFAAG,qBAKlB2G,MALe,0DAAG,sBAKT,CALS,CAArB;AAOA,QAAMtF,KAAK,GAAG1B,QAAQ,CAAC+G,YAAD,CAAtB;AAEA,QAAME,cAAiC,GAAGzI,OAAO,CAC/C,MACEqI,gBAAgB,IAAI/E,OAApB,IAA+BJ,KAA/B,GACI,IAAIvD,KAAJ,CACE2D,OADF,EAEE+E,gBAFF,EAGE,EAHF,EAIG,UAASnF,KAAK,CAACS,MAAO,EAJzB,EAKE,YALF,CADJ,GAQIW,SAVyC,EAW/C,CAAChB,OAAD,EAAU+E,gBAAV,EAA4BnF,KAA5B,CAX+C,CAAjD;AAaA,QAAMwF,oBAAoB,GAAGxG,eAAe,CAC1C6B,OAD0C,aAC1CA,OAD0C,cAC1CA,OAD0C,GAC/BO,SAD+B,EAE1CmE,cAF0C,CAA5C,CA7B2C,CAkC3C;;AACA,MAAI,CAACJ,gBAAD,IAAqBE,YAAY,KAAKlJ,WAA1C,EAAuD;AACrDsJ,IAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyC1E,OAAzC;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,WAAD;AAAa,IAAA,KAAK,EAAE;AAAE2E,MAAAA,OAAO,EAAE;AAAX,KAApB;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,MAAhB;AAAA,8BACE,QAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,QAAd;AAAwBvF,UAAAA,cAAc,EAAE;AAAxC,SADT;AAEE,QAAA,GAAG,EAAC,KAFN;AAAA,gCAIE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,IAAD,CAAM,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,iCACE,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAYG,CAACQ,OAAD,gBACC,QAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAEGsE,gBAAgB,IAAI/E,OAApB,KAA+BJ,KAA/B,aAA+BA,KAA/B,uBAA+BA,KAAK,CAAEQ,MAAP,CAAc7D,IAAI,CAACyD,OAAD,CAAlB,CAA/B,iBACF;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,KAAK,EAAE;AAAEgE,YAAAA,UAAU,EAAE;AAAd,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,eAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACbY,YAAAA,OAAO,CAACa,IAAR,CAAc,cAAaV,gBAAiB,EAA5C;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,sBADE,GAgBAK,oBAAoB,IAAIxF,KAAxB,gBACF,QAAC,eAAD;AACE,QAAA,oBAAoB,EAAEwF,oBADxB;AAEE,QAAA,KAAK,EAAExF;AAFT;AAAA;AAAA;AAAA;AAAA,cADE,gBAMF,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;IAxFuB+E,iB;UAOO1G,kB,EAEJI,qB,EAGJG,mB,EAOPN,Q,EAeeU,e;;;MAlCP+F,iB","sourcesContent":["import { TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport {\n  Currency,\n  CurrencyAmount,\n  Fraction,\n  JSBI,\n  Percent,\n  Token,\n  TokenAmount,\n  WETH,\n} from \"@uniswap/sdk\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport ReactGA from \"react-ga\";\nimport { Redirect, RouteComponentProps } from \"react-router\";\nimport { Text } from \"rebass\";\nimport { ButtonConfirmed } from \"../../components/Button\";\nimport { LightCard, PinkCard, YellowCard } from \"../../components/Card\";\nimport { AutoColumn } from \"../../components/Column\";\nimport CurrencyLogo from \"../../components/CurrencyLogo\";\nimport FormattedCurrencyAmount from \"../../components/FormattedCurrencyAmount\";\nimport QuestionHelper from \"../../components/QuestionHelper\";\nimport { AutoRow, RowBetween, RowFixed } from \"../../components/Row\";\nimport { Dots } from \"../../components/swap/styleds\";\nimport {\n  DEFAULT_DEADLINE_FROM_NOW,\n  INITIAL_ALLOWED_SLIPPAGE,\n} from \"../../constants\";\nimport { MIGRATOR_ADDRESS } from \"../../constants/abis/migrator\";\nimport { PairState, usePair } from \"../../data/Reserves\";\nimport { useTotalSupply } from \"../../data/TotalSupply\";\nimport { useActiveWeb3React } from \"../../hooks\";\nimport { useToken } from \"../../hooks/Tokens\";\nimport {\n  ApprovalState,\n  useApproveCallback,\n} from \"../../hooks/useApproveCallback\";\nimport {\n  useV1ExchangeContract,\n  useV2MigratorContract,\n} from \"../../hooks/useContract\";\nimport { NEVER_RELOAD, useSingleCallResult } from \"../../state/multicall/hooks\";\nimport {\n  useIsTransactionPending,\n  useTransactionAdder,\n} from \"../../state/transactions/hooks\";\nimport { useETHBalances, useTokenBalance } from \"../../state/wallet/hooks\";\nimport { BackArrow, ExternalLink, TYPE } from \"../../theme\";\nimport { getEtherscanLink, isAddress } from \"../../utils\";\nimport { BodyWrapper } from \"../AppBody\";\nimport { EmptyState } from \"./EmptyState\";\n\nconst WEI_DENOM = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(18));\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst ZERO_FRACTION = new Fraction(ZERO, ONE);\nconst ALLOWED_OUTPUT_MIN_PERCENT = new Percent(\n  JSBI.BigInt(10000 - INITIAL_ALLOWED_SLIPPAGE),\n  JSBI.BigInt(10000)\n);\n\nexport function V1LiquidityInfo({\n  token,\n  liquidityTokenAmount,\n  tokenWorth,\n  ethWorth,\n}: {\n  token: Token;\n  liquidityTokenAmount: TokenAmount;\n  tokenWorth: TokenAmount;\n  ethWorth: CurrencyAmount;\n}) {\n  const { chainId } = useActiveWeb3React();\n\n  return (\n    <>\n      <AutoRow style={{ justifyContent: \"flex-start\", width: \"fit-content\" }}>\n        <CurrencyLogo size=\"24px\" currency={token} />\n        <div style={{ marginLeft: \".75rem\" }}>\n          {/* <TYPE.mediumHeader>\n            {<FormattedCurrencyAmount currencyAmount={liquidityTokenAmount} />}{' '}\n            {chainId && token.equals(WETH[chainId]) ? 'WETH' : token.symbol}/ETH\n          </TYPE.mediumHeader> */}\n        </div>\n      </AutoRow>\n\n      <RowBetween my=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled{\" \"}\n          {chainId && token.equals(WETH[chainId]) ? \"WETH\" : token.symbol}:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n            {tokenWorth.toSignificant(4)}\n          </Text>\n          <CurrencyLogo\n            size=\"20px\"\n            style={{ marginLeft: \"8px\" }}\n            currency={token}\n          />\n        </RowFixed>\n      </RowBetween>\n      <RowBetween mb=\"1rem\">\n        <Text fontSize={16} fontWeight={500}>\n          Pooled ETH:\n        </Text>\n        <RowFixed>\n          <Text fontSize={16} fontWeight={500} marginLeft={\"6px\"}>\n            <FormattedCurrencyAmount currencyAmount={ethWorth} />\n          </Text>\n          <CurrencyLogo\n            size=\"20px\"\n            style={{ marginLeft: \"8px\" }}\n            currency={Currency.ETHER}\n          />\n        </RowFixed>\n      </RowBetween>\n    </>\n  );\n}\n\nfunction V1PairMigration({\n  liquidityTokenAmount,\n  token,\n}: {\n  liquidityTokenAmount: TokenAmount;\n  token: Token;\n}) {\n  const { account, chainId } = useActiveWeb3React();\n  const totalSupply = useTotalSupply(liquidityTokenAmount.token);\n  const exchangeETHBalance = useETHBalances([\n    liquidityTokenAmount.token.address,\n  ])?.[liquidityTokenAmount.token.address];\n  const exchangeTokenBalance = useTokenBalance(\n    liquidityTokenAmount.token.address,\n    token\n  );\n\n  const [v2PairState, v2Pair] = usePair(\n    chainId ? WETH[chainId] : undefined,\n    token\n  );\n  const isFirstLiquidityProvider: boolean =\n    v2PairState === PairState.NOT_EXISTS;\n\n  const v2SpotPrice =\n    chainId && v2Pair\n      ? v2Pair.reserveOf(token).divide(v2Pair.reserveOf(WETH[chainId]))\n      : undefined;\n\n  const [confirmingMigration, setConfirmingMigration] =\n    useState<boolean>(false);\n  const [pendingMigrationHash, setPendingMigrationHash] =\n    useState<string | null>(null);\n\n  const shareFraction: Fraction = totalSupply\n    ? new Percent(liquidityTokenAmount.raw, totalSupply.raw)\n    : ZERO_FRACTION;\n\n  const ethWorth: CurrencyAmount = exchangeETHBalance\n    ? CurrencyAmount.ether(\n        exchangeETHBalance.multiply(shareFraction).multiply(WEI_DENOM).quotient\n      )\n    : CurrencyAmount.ether(ZERO);\n\n  const tokenWorth: TokenAmount = exchangeTokenBalance\n    ? new TokenAmount(\n        token,\n        shareFraction.multiply(exchangeTokenBalance.raw).quotient\n      )\n    : new TokenAmount(token, ZERO);\n\n  const [approval, approve] = useApproveCallback(\n    liquidityTokenAmount,\n    MIGRATOR_ADDRESS\n  );\n\n  const v1SpotPrice =\n    exchangeTokenBalance && exchangeETHBalance\n      ? exchangeTokenBalance.divide(\n          new Fraction(exchangeETHBalance.raw, WEI_DENOM)\n        )\n      : null;\n\n  const priceDifferenceFraction: Fraction | undefined =\n    v1SpotPrice && v2SpotPrice\n      ? v1SpotPrice.divide(v2SpotPrice).multiply(\"100\").subtract(\"100\")\n      : undefined;\n\n  const priceDifferenceAbs: Fraction | undefined =\n    priceDifferenceFraction?.lessThan(ZERO)\n      ? priceDifferenceFraction?.multiply(\"-1\")\n      : priceDifferenceFraction;\n\n  const minAmountETH: JSBI | undefined =\n    v2SpotPrice && tokenWorth\n      ? tokenWorth\n          .divide(v2SpotPrice)\n          .multiply(WEI_DENOM)\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : ethWorth?.numerator;\n\n  const minAmountToken: JSBI | undefined =\n    v2SpotPrice && ethWorth\n      ? ethWorth\n          .multiply(v2SpotPrice)\n          .multiply(\n            JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(token.decimals))\n          )\n          .multiply(ALLOWED_OUTPUT_MIN_PERCENT).quotient\n      : tokenWorth?.numerator;\n\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(\n    pendingMigrationHash ?? undefined\n  );\n\n  const migrator = useV2MigratorContract();\n  const migrate = useCallback(() => {\n    if (!minAmountToken || !minAmountETH || !migrator) return;\n\n    setConfirmingMigration(true);\n    migrator\n      .migrate(\n        token.address,\n        minAmountToken.toString(),\n        minAmountETH.toString(),\n        account,\n        Math.floor(new Date().getTime() / 1000) + DEFAULT_DEADLINE_FROM_NOW\n      )\n      .then((response: TransactionResponse) => {\n        ReactGA.event({\n          category: \"Migrate\",\n          action: \"V1->V2\",\n          label: token?.symbol,\n        });\n\n        addTransaction(response, {\n          summary: `Migrate ${token.symbol} liquidity to V2`,\n        });\n        setPendingMigrationHash(response.hash);\n      })\n      .catch(() => {\n        setConfirmingMigration(false);\n      });\n  }, [minAmountToken, minAmountETH, migrator, token, account, addTransaction]);\n\n  const noLiquidityTokens =\n    !!liquidityTokenAmount && liquidityTokenAmount.equalTo(ZERO);\n\n  const largePriceDifference =\n    !!priceDifferenceAbs && !priceDifferenceAbs.lessThan(JSBI.BigInt(5));\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && noLiquidityTokens;\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <TYPE.body my={9} style={{ fontWeight: 400 }}>\n        This tool will safely migrate your V1 liquidity to V2 with minimal price\n        risk. The process is completely trustless thanks to the{\" \"}\n        {chainId && (\n          <ExternalLink\n            href={getEtherscanLink(chainId, MIGRATOR_ADDRESS, \"address\")}\n          >\n            <TYPE.blue display=\"inline\">Uniswap migration contract↗</TYPE.blue>\n          </ExternalLink>\n        )}\n        .\n      </TYPE.body>\n\n      {!isFirstLiquidityProvider && largePriceDifference ? (\n        <YellowCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            It{\"'\"}s best to deposit liquidity into Uniswap V2 at a price you\n            believe is correct. If the V2 price seems incorrect, you can either\n            make a swap to move the price or wait for someone else to do so.\n          </TYPE.body>\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body>V2 Price:</TYPE.body>\n              <TYPE.black>\n                {v2SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v2SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n\n            <RowBetween>\n              <TYPE.body color=\"inherit\">Price Difference:</TYPE.body>\n              <TYPE.black color=\"inherit\">\n                {priceDifferenceAbs?.toSignificant(4)}%\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </YellowCard>\n      ) : null}\n\n      {isFirstLiquidityProvider && (\n        <PinkCard>\n          <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n            You are the first liquidity provider for this pair on Uniswap V2.\n            Your liquidity will be migrated at the current V1 price. Your\n            transaction cost also includes the gas to create the pool.\n          </TYPE.body>\n\n          <AutoColumn gap=\"8px\">\n            <RowBetween>\n              <TYPE.body>V1 Price:</TYPE.body>\n              <TYPE.black>\n                {v1SpotPrice?.toSignificant(6)} {token.symbol}/ETH\n              </TYPE.black>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <TYPE.black>\n                {v1SpotPrice?.invert()?.toSignificant(6)} ETH/{token.symbol}\n              </TYPE.black>\n            </RowBetween>\n          </AutoColumn>\n        </PinkCard>\n      )}\n\n      <LightCard>\n        <V1LiquidityInfo\n          token={token}\n          liquidityTokenAmount={liquidityTokenAmount}\n          tokenWorth={tokenWorth}\n          ethWorth={ethWorth}\n        />\n\n        <div style={{ display: \"flex\", marginTop: \"1rem\" }}>\n          <AutoColumn gap=\"12px\" style={{ flex: \"1\", marginRight: 12 }}>\n            <ButtonConfirmed\n              confirmed={approval === ApprovalState.APPROVED}\n              disabled={approval !== ApprovalState.NOT_APPROVED}\n              onClick={approve}\n            >\n              {approval === ApprovalState.PENDING ? (\n                <Dots>Approving</Dots>\n              ) : approval === ApprovalState.APPROVED ? (\n                \"Approved\"\n              ) : (\n                \"Approve\"\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n          <AutoColumn gap=\"12px\" style={{ flex: \"1\" }}>\n            <ButtonConfirmed\n              confirmed={isSuccessfullyMigrated}\n              disabled={\n                isSuccessfullyMigrated ||\n                noLiquidityTokens ||\n                isMigrationPending ||\n                approval !== ApprovalState.APPROVED ||\n                confirmingMigration\n              }\n              onClick={migrate}\n            >\n              {isSuccessfullyMigrated ? (\n                \"Success\"\n              ) : isMigrationPending ? (\n                <Dots>Migrating</Dots>\n              ) : (\n                \"Migrate\"\n              )}\n            </ButtonConfirmed>\n          </AutoColumn>\n        </div>\n      </LightCard>\n      <TYPE.darkGray style={{ textAlign: \"center\" }}>\n        {`Your Uniswap V1 ${token.symbol}/ETH liquidity will become Uniswap V2 ${token.symbol}/ETH liquidity.`}\n      </TYPE.darkGray>\n    </AutoColumn>\n  );\n}\n\nexport default function MigrateV1Exchange({\n  history,\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  const validatedAddress = isAddress(address);\n  const { chainId, account } = useActiveWeb3React();\n\n  const exchangeContract = useV1ExchangeContract(\n    validatedAddress ? validatedAddress : undefined\n  );\n  const tokenAddress = useSingleCallResult(\n    exchangeContract,\n    \"tokenAddress\",\n    undefined,\n    NEVER_RELOAD\n  )?.result?.[0];\n\n  const token = useToken(tokenAddress);\n\n  const liquidityToken: Token | undefined = useMemo(\n    () =>\n      validatedAddress && chainId && token\n        ? new Token(\n            chainId,\n            validatedAddress,\n            18,\n            `UNI-V1-${token.symbol}`,\n            \"Uniswap V1\"\n          )\n        : undefined,\n    [chainId, validatedAddress, token]\n  );\n  const userLiquidityBalance = useTokenBalance(\n    account ?? undefined,\n    liquidityToken\n  );\n\n  // redirect for invalid url params\n  if (!validatedAddress || tokenAddress === AddressZero) {\n    console.error(\"Invalid address in path\", address);\n    return <Redirect to=\"/migrate/v1\" />;\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow\n          style={{ alignItems: \"center\", justifyContent: \"space-between\" }}\n          gap=\"8px\"\n        >\n          <BackArrow to=\"/migrate/v1\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        {!account ? (\n          <TYPE.largeHeader>You must connect an account.</TYPE.largeHeader>\n        ) : validatedAddress && chainId && token?.equals(WETH[chainId]) ? (\n          <>\n            <TYPE.body my={9} style={{ fontWeight: 400 }}>\n              Because Uniswap V2 uses WETH under the hood, your Uniswap V1\n              WETH/ETH liquidity cannot be migrated. You may want to remove your\n              liquidity instead.\n            </TYPE.body>\n\n            <ButtonConfirmed\n              onClick={() => {\n                history.push(`/remove/v1/${validatedAddress}`);\n              }}\n            >\n              Remove\n            </ButtonConfirmed>\n          </>\n        ) : userLiquidityBalance && token ? (\n          <V1PairMigration\n            liquidityTokenAmount={userLiquidityBalance}\n            token={token}\n          />\n        ) : (\n          <EmptyState message=\"Loading...\" />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}